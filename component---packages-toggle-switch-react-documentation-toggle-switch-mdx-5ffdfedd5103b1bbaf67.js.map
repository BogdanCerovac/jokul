{"version":3,"sources":["webpack:///../packages/typography-react/build/browser/index.js","webpack:///../packages/toggle-switch-react/src/ToggleSwitch.tsx","webpack:///../packages/toggle-switch-react/documentation/Example.tsx","webpack:///../packages/toggle-switch-react/documentation/ToggleSwitch.mdx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","makeTypographyComponent","variant","textStyle","modifier","_ref","children","className","rest","replace","c","toUpperCase","Element","React","createElement","concat","classnames","fn","module","exports","createCommonjsModule","hasOwn","classNames","classes","arg","argType","push","Array","isArray","inner","join","default","window","SupportLabel","named","id","helpLabel","errorLabel","forceCompact","srOnly","inverted","componentClassName","ToggleSwitch","pressed","onClick","disabled","type","aria-pressed","Example","boolValues","useState","isOn","setIsOn","undefined","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","knobs","boolProps","parentName","isMDXComponent"],"mappings":"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","file":"component---packages-toggle-switch-react-documentation-toggle-switch-mdx-5ffdfedd5103b1bbaf67.js","sourcesContent":["import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction makeTypographyComponent(variant, textStyle, modifier) {\n  return function typography(_ref) {\n    var children = _ref.children,\n        className = _ref.className,\n        rest = _objectWithoutProperties(_ref, [\"children\", \"className\"]);\n\n    var tagName = (modifier || variant).replace(/^\\w/, function (c) {\n      return c.toUpperCase();\n    });\n\n    if (process.env.NODE_ENV === \"development\") {\n      console.warn(\"ATTENTION! The typographic components in jkl-core, like \\\"\".concat(tagName, \"\\\", are deprecated. Please stop using them and start using typographic CSS classes or the jkl-text-style Sass mixin instead. Refer to the documentation for more info.\"));\n    }\n\n    var Element = variant;\n    return /*#__PURE__*/React.createElement(Element, _extends({\n      className: \"\".concat(textStyle, \" \").concat(className || \"\")\n    }, rest), children);\n  };\n}\n\nvar H1 = makeTypographyComponent(\"h1\", \"jkl-title-large\");\nvar H2 = makeTypographyComponent(\"h2\", \"jkl-title-small\");\nvar H3 = makeTypographyComponent(\"h3\", \"jkl-heading-large\");\nvar H4 = makeTypographyComponent(\"h4\", \"jkl-heading-medium\");\nvar H5 = makeTypographyComponent(\"h5\", \"jkl-heading-small\");\nvar Lead = makeTypographyComponent(\"p\", \"jkl-lead\", \"lead\");\nvar Body = makeTypographyComponent(\"p\", \"jkl-body\", \"body\");\nvar Small = makeTypographyComponent(\"p\", \"jkl-small\", \"small\");\nvar Micro = makeTypographyComponent(\"p\", \"jkl-micro\", \"micro\");\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar classnames = createCommonjsModule(function (module) {\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif ( module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n});\nvar classnames_1 = classnames.named;\n\nvar warningHasBeenShown = false;\nvar Link = function Link(_ref) {\n  var _ref$negative = _ref.negative,\n      negative = _ref$negative === void 0 ? false : _ref$negative,\n      _ref$external = _ref.external,\n      external = _ref$external === void 0 ? false : _ref$external,\n      children = _ref.children,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? \"\" : _ref$className,\n      rest = _objectWithoutProperties(_ref, [\"negative\", \"external\", \"children\", \"className\"]);\n\n  if (process.env.NODE_ENV !== \"production\" && !warningHasBeenShown) {\n    console.warn(\"WARNING: This version of the Link component is deprecated! Please use the Link component found in @fremtind/jkl-core instead\");\n    warningHasBeenShown = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"a\", _extends({\n    className: classnames(\"jkl-link\", className, {\n      \"jkl-link--negative\": negative,\n      \"jkl-link--external\": external\n    })\n  }, rest), children);\n};\n\nvar warningHasBeenShown$1 = false;\nvar SupportLabel = function SupportLabel(_ref) {\n  var id = _ref.id,\n      helpLabel = _ref.helpLabel,\n      errorLabel = _ref.errorLabel,\n      forceCompact = _ref.forceCompact,\n      className = _ref.className,\n      srOnly = _ref.srOnly,\n      inverted = _ref.inverted;\n  var componentClassName = classnames(\"jkl-form-support-label\", className, {\n    \"jkl-form-support-label--compact\": forceCompact,\n    \"jkl-form-support-label--error\": errorLabel,\n    \"jkl-form-support-label--help\": !errorLabel,\n    \"jkl-form-support-label--sr-only\": srOnly,\n    \"jkl-form-support-label--inverted\": inverted\n  });\n\n  if (process.env.NODE_ENV !== \"production\" && !warningHasBeenShown$1) {\n    console.warn(\"WARNING: This version of the SupportLabel component is deprecated! Please use the SupportLabel component found in @fremtind/jkl-core instead\");\n    warningHasBeenShown$1 = true;\n  }\n\n  if (errorLabel || helpLabel) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      id: id,\n      className: componentClassName\n    }, errorLabel || helpLabel);\n  }\n\n  return null;\n};\n\nvar warningHasBeenShown$2 = false;\nfunction Label(_ref) {\n  var _classNames;\n\n  var _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? \"medium\" : _ref$variant,\n      forceCompact = _ref.forceCompact,\n      srOnly = _ref.srOnly,\n      children = _ref.children,\n      standAlone = _ref.standAlone,\n      htmlFor = _ref.htmlFor;\n  var className = classnames(\"jkl-label\", (_classNames = {}, _defineProperty(_classNames, \"jkl-label--\".concat(variant), variant), _defineProperty(_classNames, \"jkl-label--compact\", forceCompact), _defineProperty(_classNames, \"jkl-label--sr-only\", srOnly), _classNames));\n  var C = standAlone ? \"label\" : \"span\";\n\n  if (!standAlone && htmlFor) {\n    htmlFor = undefined;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      console.warn(\"WARNING: The standard Label component renders as a <span> element, which does not take a htmlFor prop. If you want the Label to belong to a specific input, use the standAlone prop, which renders as a <label> element instead. In most cases the Label component should not be used directly, as it is part of all our input components.\");\n    }\n  }\n\n  if (process.env.NODE_ENV !== \"production\" && !warningHasBeenShown$2) {\n    console.warn(\"WARNING: This version of the Label component is deprecated! Please use the Label component found in @fremtind/jkl-core instead\");\n    warningHasBeenShown$2 = true;\n  }\n\n  return /*#__PURE__*/React.createElement(C, {\n    className: className,\n    htmlFor: htmlFor\n  }, children);\n}\n\nexport { Body, H1, H2, H3, H4, H5, Label, Lead, Link, Micro, Small, SupportLabel };\n","import React, { ReactNode, MouseEventHandler } from \"react\";\nimport { SupportLabel } from \"@fremtind/jkl-typography-react\";\nimport classNames from \"classnames\";\n\ninterface Props {\n    children: ReactNode;\n    pressed?: boolean;\n    className?: string;\n    onClick?: MouseEventHandler<HTMLButtonElement>;\n    disabled?: boolean;\n    inverted?: boolean;\n    helpLabel?: string;\n}\n\nexport const ToggleSwitch = ({ children, pressed, onClick, className, disabled, inverted, helpLabel }: Props) => {\n    const componentClassName = classNames(\"jkl-toggle-switch\", className, {\n        \"jkl-toggle-switch--inverted\": inverted,\n    });\n\n    return (\n        <>\n            <button\n                type=\"button\"\n                aria-pressed={!!pressed}\n                disabled={disabled}\n                className={componentClassName}\n                onClick={onClick}\n            >\n                <span className=\"jkl-toggle-switch__slider\">\n                    <span className=\"jkl-toggle-switch__expanding-pill\"></span>\n                </span>\n                {children}\n            </button>\n            {helpLabel && <SupportLabel className=\"jkl-toggle-switch__help-label\" helpLabel={helpLabel} />}\n        </>\n    );\n};\n","import React, { useState } from \"react\";\nimport { ExampleComponentProps } from \"@fremtind/jkl-portal-components\";\nimport { ToggleSwitch } from \"../src\";\n\nconst Example: React.FC<ExampleComponentProps> = ({ boolValues }) => {\n    const [isOn, setIsOn] = useState(false);\n    const helpLabel =\n        boolValues && boolValues[\"Med hjelpetekst\"] ? \"Du må være koblet til wifi for å velge dette\" : undefined;\n    return (\n        <ToggleSwitch\n            pressed={isOn}\n            onClick={() => setIsOn(!isOn)}\n            inverted={boolValues && boolValues[\"Invertert\"]}\n            disabled={boolValues && boolValues[\"Deaktivert\"]}\n            helpLabel={helpLabel}\n        >\n            Send inn data om min kjørestil\n        </ToggleSwitch>\n    );\n};\n\nexport default Example;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport Example from \"./Example\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Med veksleknapper kan brukerne bytte mellom to statuser (av eller på) uten at de må bekrefte valget. Ledeteksten\n    forteller hva brukeren slår av og på.\n    </Ingress>\n    <ComponentExample component={Example} knobs={{\n      boolProps: [\"Invertert\", \"Deaktivert\", \"Med hjelpetekst\"]\n    }} mdxType=\"ComponentExample\" />\n    <p>{`Veksleknapper passer til situasjoner der brukerne selv kan velge å ha en funksjon av eller på, for eksempel automatisk oppdatering eller automatisk lagring.`}</p>\n    <p>{`Ikke bruk veksleknapp hvis brukeren må bekrefte valget sitt.`}</p>\n    <h2>{`Eksempler på bruk`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Slå innstillinger av eller på i en applikasjon.`}</li>\n      <li parentName=\"ul\">{`Bytte mellom lys eller mørk modus i et grensesnitt.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}