{"version":3,"sources":["webpack:///../packages/button-react/src/Button.tsx","webpack:///../packages/button-react/documentation/Example.tsx","webpack:///../packages/button-react/documentation/buttons.mdx"],"names":["makeButtonComponent","buttonType","children","className","forceCompact","inverted","rest","componentClassName","classNames","PrimaryButton","SecondaryButton","TertiaryButton","onClick","console","log","Example","boolValues","_frontmatter","makeShortcode","name","props","warn","Ingress","ComponentExample","DoDontExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","knobs","boolProps","type","description","image","parentName","isMDXComponent"],"mappings":"yQAUA,SAASA,EAAoBC,GACzB,OAAO,YAAiF,IAA/DC,EAA+D,EAA/DA,SAAUC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,SAAaC,EAAe,kEAC9EC,EAAqBC,IACvB,aACA,eAAiBP,EACjB,CACI,sBAAuBG,EACvB,uBAAwBC,GAE5BF,GAGJ,OACI,0CAAQA,UAAWI,GAAwBD,GACtCJ,IAMV,IAAMO,EAAgBT,EAAoB,WACpCU,EAAkBV,EAAoB,aACtCW,EAAiBX,EAAoB,YC5BlD,SAASY,IACLC,QAAQC,IAAI,UAGT,IA8BQC,EA9ByC,SAAC,GAAmB,IAAjBC,EAAiB,EAAjBA,WACvD,OACI,oCACI,kBAACP,EAAD,CACIJ,SAAUW,GAAcA,EAAU,UAClCZ,aAAcY,GAAcA,EAAU,QACtCJ,QAASA,EACTT,UAAU,wBAJd,QAQA,kBAACO,EAAD,CACIL,SAAUW,GAAcA,EAAU,UAClCZ,aAAcY,GAAcA,EAAU,QACtCJ,QAASA,EACTT,UAAU,wBAJd,aAQA,kBAACQ,EAAD,CACIN,SAAUW,GAAcA,EAAU,UAClCZ,aAAcY,GAAcA,EAAU,QACtCJ,QAASA,GAHb,YCnBCK,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAP,QAAQQ,KAAK,aAAeF,EAAO,2EAC5B,kBAASC,KAGZE,EAAUJ,EAAc,WACxBK,EAAmBL,EAAc,oBACjCM,EAAgBN,EAAc,iBAC9BO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,YAACR,EAAD,CAASQ,QAAQ,WAAjB,2GAGA,YAACP,EAAD,CAAkBQ,UAAWhB,EAASiB,MAAO,CAC3CC,UAAW,CAAC,UAAW,cACtBH,QAAQ,qBACX,qCACA,qIACA,YAACN,EAAD,CAAeU,KAAK,KAAKC,YAAY,qBAAqBC,MAAM,mCAAmCN,QAAQ,kBAC3G,YAACN,EAAD,CAAeU,KAAK,OAAOC,YAAY,sBAAsBC,MAAM,qCAAqCN,QAAQ,kBAChH,qBAAG,sBAAQO,WAAW,KAAnB,gBAAH,2IACA,qBAAG,sBAAQA,WAAW,KAAnB,kBAAH,2EACA,qBAAG,sBAAQA,WAAW,KAAnB,iBAAH,yFACA,0CACA,oIACA,YAAC5B,EAAD,CAAeN,UAAU,uBAAuB2B,QAAQ,iBAAxD,YACA,YAACpB,EAAD,CAAiBP,UAAU,uBAAuB2B,QAAQ,mBAA1D,SACA,YAACnB,EAAD,CAAgBmB,QAAQ,kBAAxB,WAKJF,EAAWU,gBAAiB","file":"component---packages-button-react-documentation-buttons-mdx-ab7bb9879c836b43da17.js","sourcesContent":["import React, { HTMLAttributes } from \"react\";\nimport classNames from \"classnames\";\n\nexport interface Props extends Exclude<HTMLAttributes<HTMLButtonElement>, \"disabled\"> {\n    forceCompact?: boolean;\n    inverted?: boolean;\n}\n\ntype ValidButtons = \"primary\" | \"secondary\" | \"tertiary\";\n\nfunction makeButtonComponent(buttonType: ValidButtons) {\n    return function button({ children, className, forceCompact, inverted, ...rest }: Props) {\n        const componentClassName = classNames(\n            \"jkl-button\",\n            \"jkl-button--\" + buttonType,\n            {\n                \"jkl-button--compact\": forceCompact,\n                \"jkl-button--inverted\": inverted,\n            },\n            className,\n        );\n\n        return (\n            <button className={componentClassName} {...rest}>\n                {children}\n            </button>\n        );\n    };\n}\n\nexport const PrimaryButton = makeButtonComponent(\"primary\");\nexport const SecondaryButton = makeButtonComponent(\"secondary\");\nexport const TertiaryButton = makeButtonComponent(\"tertiary\");\n","import React from \"react\";\nimport { ExampleComponentProps } from \"@fremtind/jkl-portal-components\";\nimport { PrimaryButton, SecondaryButton, TertiaryButton } from \"../src\";\n\nfunction onClick() {\n    console.log(\"Hello!\");\n}\n\nexport const Example: React.FC<ExampleComponentProps> = ({ boolValues }) => {\n    return (\n        <>\n            <PrimaryButton\n                inverted={boolValues && boolValues[\"Invertert\"]}\n                forceCompact={boolValues && boolValues[\"Kompakt\"]}\n                onClick={onClick}\n                className=\"jkl-spacing--right-1\"\n            >\n                Send\n            </PrimaryButton>\n            <SecondaryButton\n                inverted={boolValues && boolValues[\"Invertert\"]}\n                forceCompact={boolValues && boolValues[\"Kompakt\"]}\n                onClick={onClick}\n                className=\"jkl-spacing--right-1\"\n            >\n                Gå videre\n            </SecondaryButton>\n            <TertiaryButton\n                inverted={boolValues && boolValues[\"Invertert\"]}\n                forceCompact={boolValues && boolValues[\"Kompakt\"]}\n                onClick={onClick}\n            >\n                Avbryt\n            </TertiaryButton>\n        </>\n    );\n};\n\nexport default Example;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport Example from \"./Example\";\nimport { PrimaryButton, SecondaryButton, TertiaryButton } from \"../src\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst DoDontExample = makeShortcode(\"DoDontExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Knapper starter en handling. Teksten på knappen forteller hva som vil skje når brukeren klikker på den.\n    </Ingress>\n    <ComponentExample component={Example} knobs={{\n      boolProps: [\"Kompakt\", \"Invertert\"]\n    }} mdxType=\"ComponentExample\" />\n    <h2>{`Knappetyper`}</h2>\n    <p>{`Disse tre knappetypene har et hierarki. Når brukeren har flere valg samtidig, skal vi kun ha én primærknapp.`}</p>\n    <DoDontExample type=\"do\" description=\"Kun én primærknapp\" image=\"/assets/do-donts/button-do-1.png\" mdxType=\"DoDontExample\" />\n    <DoDontExample type=\"dont\" description=\"Flere primærknapper\" image=\"/assets/do-donts/button-dont-1.png\" mdxType=\"DoDontExample\" />\n    <p><strong parentName=\"p\">{`Primærknapp:`}</strong>{` brukes til den viktigste handlingen på en side - hovedhandlingen. En side kan noen ganger ha mer enn en hovedhandling, men ikke mange.`}</p>\n    <p><strong parentName=\"p\">{`Sekundærknapp:`}</strong>{` brukes til handlinger som ikke er like viktige for oss eller brukeren.`}</p>\n    <p><strong parentName=\"p\">{`Tertiærknapp:`}</strong>{` brukes til handlinger som er mindre viktige, eller som kan gi uønskede konsekvenser.`}</p>\n    <h2>{`Tekst på knapper`}</h2>\n    <p>{`Knappetekster skal være så enkle og korte som mulig og skal oppfordre til handling. Bruk helst bare to ord:`}</p>\n    <PrimaryButton className=\"jkl-spacing--right-2\" mdxType=\"PrimaryButton\">Send inn</PrimaryButton>\n    <SecondaryButton className=\"jkl-spacing--right-2\" mdxType=\"SecondaryButton\">Lagre</SecondaryButton>\n    <TertiaryButton mdxType=\"TertiaryButton\">Avbryt</TertiaryButton>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}