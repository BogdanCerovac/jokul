{"version":3,"sources":["webpack:///../packages/list-react/src/List.tsx","webpack:///../packages/list-react/src/ListItem.tsx","webpack:///../packages/list-react/documentation/Example.tsx","webpack:///../packages/list-react/documentation/List.mdx"],"names":["makeListComponent","listType","props","children","className","componentClassName","concat","C","data-testid","UnorderedList","OrderedList","ListItem","Ordered","Unordered","Indent","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"wMASA,SAASA,EAAkBC,GACvB,OAAO,SAAcC,GAAc,IACvBC,EAAqCD,EAArCC,SADuB,EACcD,EAA3BE,iBADa,MACD,WADC,EAEzBC,EAAqB,WAAWC,OAClCF,EAAY,IAAIA,EAAc,GACjB,YAAbH,EAAyB,qBAAuB,IAG9CM,EAAiB,YAAbN,EAAyB,KAAO,KAE1C,OACI,kBAACM,EAAD,CAAGC,cAAY,WAAWJ,UAAWC,GAChCF,IAMV,IAAMM,EAAgBT,EAAkB,aAClCU,EAAcV,EAAkB,WCtBhCW,EAAW,SAAC,GAAD,IAAGR,EAAH,EAAGA,SAAH,OAAyB,wBAAIC,UAAU,kBAAkBD,ICDpES,G,oBAAU,kBACnB,6BAASR,UAAU,4CACf,wBAAIA,UAAU,UAAd,mBACA,kBAACM,EAAD,KACI,kBAAC,EAAD,eACA,kBAAC,EAAD,cAEI,kBAACA,EAAD,KACI,kBAAC,EAAD,gBACA,kBAAC,EAAD,kBAGR,kBAAC,EAAD,eACA,kBAAC,EAAD,eACA,kBAAC,EAAD,eACA,kBAAC,EAAD,eACA,kBAAC,EAAD,eACA,kBAAC,EAAD,eACA,kBAAC,EAAD,eACA,kBAAC,EAAD,oBAKCG,EAAY,kBACrB,6BAAST,UAAU,4CACf,wBAAIA,UAAU,UAAd,kBACA,kBAACK,EAAD,KACI,kBAAC,EAAD,uBACA,kBAAC,EAAD,uBACA,kBAAC,EAAD,uBAEJ,6BACA,wBAAIL,UAAU,UAAd,wBACA,kBAACK,EAAD,CAAeL,UAAU,aACrB,kBAAC,EAAD,uBACA,kBAAC,EAAD,uBACA,kBAAC,EAAD,yBAKCU,EAAS,kBAClB,6BAASV,UAAU,4CACf,wBAAIA,UAAU,UAAd,gBACA,kBAACK,EAAD,KACI,kBAAC,EAAD,sBAEI,kBAACA,EAAD,KACI,kBAAC,EAAD,8BACA,kBAAC,EAAD,gCAGR,kBAAC,EAAD,yB,qFCnDL,IAAMM,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGlB,E,oIACF,mBACD,OAAO,YAACe,EAAD,iBAAeD,EAAiBd,EAAhC,CAAuCkB,WAAYA,EAAYC,QAAQ,cAI5E,gNAA+L,kBAAIC,WAAW,KAAf,cAA/L,OAA6O,kBAAIA,WAAW,KAAf,eAA7O,KACA,2CACA,qHACA,YAAC,EAAD,CAASD,QAAQ,YACjB,4CACA,iTACA,YAAC,EAAD,CAAWA,QAAQ,cACnB,0CACA,mWACA,YAAC,EAAD,CAAQA,QAAQ,YAKpBF,EAAWI,gBAAiB","file":"component---packages-list-react-documentation-list-mdx-5aead4188f2cc0f0f0b6.js","sourcesContent":["import React, { ReactNode } from \"react\";\n\ninterface Props {\n    children: ReactNode;\n    className?: string;\n}\n\ntype validLists = \"unordered\" | \"ordered\";\n\nfunction makeListComponent(listType: validLists) {\n    return function List(props: Props) {\n        const { children, className = \"jkl-body\" } = props;\n        const componentClassName = \"jkl-list\".concat(\n            className ? ` ${className}` : \"\",\n            listType === \"ordered\" ? \" jkl-list--ordered\" : \"\",\n        );\n\n        const C = listType === \"ordered\" ? \"ol\" : \"ul\";\n\n        return (\n            <C data-testid=\"jkl-list\" className={componentClassName}>\n                {children}\n            </C>\n        );\n    };\n}\n\nexport const UnorderedList = makeListComponent(\"unordered\");\nexport const OrderedList = makeListComponent(\"ordered\");\n","import React, { ReactNode } from \"react\";\n\ninterface Props {\n    children: ReactNode;\n}\n\nexport const ListItem = ({ children }: Props) => <li className=\"jkl-list__item\">{children}</li>;\n","import React from \"react\";\nimport { UnorderedList, OrderedList, ListItem } from \"../src\";\nimport \"@fremtind/jkl-list/list.scss\";\nimport \"@fremtind/jkl-core/core.scss\";\n\nexport const Ordered = () => (\n    <section className=\"jkl-spacing--top-3 jkl-spacing--bottom-3\">\n        <h3 className=\"jkl-h5\">Nummerert liste</h3>\n        <OrderedList>\n            <ListItem>Steg 1</ListItem>\n            <ListItem>\n                Steg 2\n                <OrderedList>\n                    <ListItem>Steg 2a</ListItem>\n                    <ListItem>Steg 2b</ListItem>\n                </OrderedList>\n            </ListItem>\n            <ListItem>Steg 3</ListItem>\n            <ListItem>Steg 4</ListItem>\n            <ListItem>Steg 5</ListItem>\n            <ListItem>Steg 6</ListItem>\n            <ListItem>Steg 7</ListItem>\n            <ListItem>Steg 8</ListItem>\n            <ListItem>Steg 9</ListItem>\n            <ListItem>Steg 10</ListItem>\n        </OrderedList>\n    </section>\n);\n\nexport const Unordered = () => (\n    <section className=\"jkl-spacing--top-3 jkl-spacing--bottom-3\">\n        <h3 className=\"jkl-h5\">Standard liste</h3>\n        <UnorderedList>\n            <ListItem>Listeelement 1</ListItem>\n            <ListItem>Listeelement 2</ListItem>\n            <ListItem>Listelement 3</ListItem>\n        </UnorderedList>\n        <br></br>\n        <h3 className=\"jkl-h5\">Mobile/Compact liste</h3>\n        <UnorderedList className=\"jkl-small\">\n            <ListItem>Listeelement 1</ListItem>\n            <ListItem>Listeelement 2</ListItem>\n            <ListItem>Listelement 3</ListItem>\n        </UnorderedList>\n    </section>\n);\n\nexport const Indent = () => (\n    <section className=\"jkl-spacing--top-3 jkl-spacing--bottom-3\">\n        <h3 className=\"jkl-h5\">Nøstet liste</h3>\n        <UnorderedList>\n            <ListItem>\n                Listeelement 1\n                <UnorderedList>\n                    <ListItem>Nøstet listeelement 1</ListItem>\n                    <ListItem>Nøstet listeelement 2</ListItem>\n                </UnorderedList>\n            </ListItem>\n            <ListItem>Listelement 2</ListItem>\n        </UnorderedList>\n    </section>\n);\n\nconst Example = () => (\n    <section className=\"jkl-spacing--top-3 jkl-spacing--bottom-3\">\n        <Ordered />\n        <Unordered />\n        <Indent />\n    </section>\n);\n\nexport default Example;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/ComponentLayout.tsx\";\nimport { Ordered, Unordered, Indent } from \"./Example\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Lister er strukturelementer. De gjør at vi kan utheve viktig informasjon for brukerne eller fortelle dem at de må gjøre noe i en bestemt rekkefølge. Det finnes to forskjellige lister: `}<em parentName=\"p\">{`nummererte`}</em>{` og `}<em parentName=\"p\">{`unummererte`}</em>{`.`}</p>\n    <h3>{`Nummererte lister`}</h3>\n    <p>{`Vi bruker nummererte lister når vi skal presentere instruksjoner, der rekkefølgen er viktig.`}</p>\n    <Ordered mdxType=\"Ordered\" />\n    <h3>{`Unummererte lister`}</h3>\n    <p>{`I unummererte lister bruker vi kulepunkter. Formålet med en slik liste er å organisere informasjonen og fremheve viktige opplysninger. Her er ikke rekkefølgen brukeren skal utføre noe i viktig, men vi må likevel passe på at vi presenterer det innholdet som er mest relevant først.`}</p>\n    <Unordered mdxType=\"Unordered\" />\n    <h3>{`Innrykk i lister`}</h3>\n    <p>{`Vi kan bruke innrykk under et enkelt listepunkt når det punktet har tilleggsinformasjon som vi må dele opp videre. Men bruk det sparsommelig. Før du bruker det, tenk nøye over om dette er et hovedpunkt som kan stå for seg selv, eller om det er informasjon som passer best som underpunkt. Selvstendige punkter skal ikke ha innrykk.`}</p>\n    <Indent mdxType=\"Indent\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}