{"version":3,"sources":["webpack:///../packages/loader-react/src/Loader.tsx","webpack:///../packages/loader-react/documentation/Example.tsx","webpack:///../packages/loader-react/documentation/Loader.mdx"],"names":["Loader","textDescription","negative","inline","className","dataTestAutoId","componentClassName","classNames","data-testid","data-testautoid","title","aria-label","role","aria-busy","Example","style","marginTop","border","borderRadius","height","width","display","justifyContent","alignItems","backgroundColor","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","parentName","isMDXComponent"],"mappings":"0QAUaA,EAAS,SAAC,GAMV,IALTC,EAKS,EALTA,gBAKS,IAJTC,gBAIS,aAHTC,cAGS,SAFTC,EAES,EAFTA,UAES,IADTC,sBACS,MADQ,aACR,EACHC,EAAqBC,IAAW,aAAcH,EAAW,CAC3D,uBAAwBF,EACxB,qBAAsBC,IAG1B,OACI,0BACIC,UAAWE,EACXE,cAAY,aACZC,kBAAiBJ,EACjBK,MAAOT,EACPU,aAAYV,EACZW,KAAK,QACLC,YAAU,QAEV,0BAAMT,UAAU,0CAChB,0BAAMA,UAAU,4CAChB,0BAAMA,UAAU,6CCIbU,EAnCC,kBACZ,iCACI,kBAAC,EAAD,CAAQb,gBAAgB,gCACxB,yBACIc,MAAO,CACHC,UAAW,OACXC,OAAQ,kBACRC,aAAc,OACdC,OAAQ,OACRC,MAAO,QACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGhB,kBAAC,EAAD,CAAQtB,gBAAgB,UAAUE,QAAM,KAE5C,yBACIY,MAAO,CACHC,UAAW,OACXC,OAAQ,kBACRC,aAAc,OACdC,OAAQ,OACRC,MAAO,QACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,UAGrB,kBAAC,EAAD,CAAQvB,gBAAgB,UAAUE,QAAM,EAACD,UAAQ,OC1BhDuB,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAmBN,EAAc,oBACjCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,YAACP,EAAD,CAASO,QAAQ,WAAjB,4JAIA,YAACN,EAAD,CAAkBO,UAAWzB,EAASwB,QAAQ,qBAC9C,0KACA,8BACA,sBACE,kBAAIE,WAAW,MAAf,4CACA,kBAAIA,WAAW,MAAf,wEAMNJ,EAAWK,gBAAiB","file":"component---packages-loader-react-documentation-loader-mdx-f784ddbb9484c40e6898.js","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n\ninterface Props {\n    textDescription: string;\n    negative?: boolean;\n    inline?: boolean;\n    className?: string;\n    dataTestAutoId?: string;\n}\nexport const Loader = ({\n    textDescription,\n    negative = false,\n    inline = false,\n    className,\n    dataTestAutoId = \"jkl-loader\",\n}: Props) => {\n    const componentClassName = classNames(\"jkl-loader\", className, {\n        \"jkl-loader--negative\": negative,\n        \"jkl-loader--inline\": inline,\n    });\n\n    return (\n        <span\n            className={componentClassName}\n            data-testid=\"jkl-loader\"\n            data-testautoid={dataTestAutoId}\n            title={textDescription}\n            aria-label={textDescription}\n            role=\"alert\"\n            aria-busy=\"true\"\n        >\n            <span className=\"jkl-loader__dot jkl-loader__dot--left\" />\n            <span className=\"jkl-loader__dot jkl-loader__dot--middle\" />\n            <span className=\"jkl-loader__dot jkl-loader__dot--right\" />\n        </span>\n    );\n};\n","import React from \"react\";\nimport { Loader } from \"../src\";\n\nconst Example = () => (\n    <section>\n        <Loader textDescription=\"Den som venter på noe godt…\" />\n        <div\n            style={{\n                marginTop: \"20px\",\n                border: \"1px solid black\",\n                borderRadius: \"20px\",\n                height: \"40px\",\n                width: \"200px\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n            }}\n        >\n            <Loader textDescription=\"Laster…\" inline />\n        </div>\n        <div\n            style={{\n                marginTop: \"20px\",\n                border: \"1px solid black\",\n                borderRadius: \"20px\",\n                height: \"40px\",\n                width: \"200px\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                backgroundColor: \"black\",\n            }}\n        >\n            <Loader textDescription=\"Laster…\" inline negative />\n        </div>\n    </section>\n);\n\nexport default Example;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport Example from \"./Example\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    En lasteindikator viser brukeren at systemet jobber. Vi bruker lasteindikatoren når vi har handlinger eller\n    prosesser som tar lengre tid enn ett sekund.\n    </Ingress>\n    <ComponentExample component={Example} mdxType=\"ComponentExample\" />\n    <p>{`Plasser lasteindikatoren sammen med handlingen som utløser den. Den kan ha ulik posisjon og størrelse, avhengig av konteksten den skal fungere i.`}</p>\n    <h3>{`Bruk`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`På en knapp som brukeren har klikket på.`}</li>\n      <li parentName=\"ul\">{`På et kort eller i felt der noe blir beregnet før innholdet vises.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}