{"version":3,"sources":["webpack:///../packages/field-group-react/src/FieldGroup.tsx","webpack:///../packages/field-group-react/documentation/Example.tsx","webpack:///../packages/field-group-react/documentation/FieldGroup.mdx"],"names":["FieldGroup","legend","className","children","helpLabel","errorLabel","variant","forceCompact","componentClassName","concat","Example","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kNAcaA,EAAa,SAAC,GAQd,IAPTC,EAOS,EAPTA,OACAC,EAMS,EANTA,UACAC,EAKS,EALTA,SACAC,EAIS,EAJTA,UACAC,EAGS,EAHTA,WAGS,IAFTC,eAES,MAFC,SAED,EADTC,EACS,EADTA,aAEMC,EAAqB,kBAAkBC,OAAOP,EAAY,IAAIA,EAAc,IAClF,OACI,8BAAUA,UAAWM,GACjB,4BAAQN,UAAU,2BACd,kBAAC,IAAD,CAAOI,QAASA,EAASC,aAAcA,GAClCN,IAGRE,GACCC,GAAaC,IAAe,kBAAC,IAAD,CAAcD,UAAWA,EAAWC,WAAYA,MCC3EK,G,UA7BC,kBACZ,6BAASR,UAAU,gBACf,wBAAIA,UAAU,+BAAd,qBACA,kBAAC,EAAD,CACII,QAAQ,QACRJ,UAAU,wBACVD,OAAO,8CAEP,uBAAGC,UAAU,YAAb,+HAIA,uBAAGA,UAAU,YACT,2DAGR,kBAAC,EAAD,CAAYD,OAAO,2CACf,uBAAGC,UAAU,YACT,qDAGR,kBAAC,EAAD,CAAYI,QAAQ,QAAQC,cAAY,EAACN,OAAO,2CAC5C,uBAAGC,UAAU,YACT,wD,qFCpBT,IAAMS,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,EAAD,CAASA,QAAQ,YACjB,8OAEA,6CACA,mPACA,kLACA,6OAEA,8BACA,sBACE,kBAAIC,WAAW,MAAf,4BACA,kBAAIA,WAAW,MAAf,gCACA,kBAAIA,WAAW,MAAf,+EAMNJ,EAAWK,gBAAiB","file":"component---packages-field-group-react-documentation-field-group-mdx-c160c0011c50c8a2ca6f.js","sourcesContent":["import React, { ReactNode } from \"react\";\nimport { Label, SupportLabel } from \"@fremtind/jkl-typography-react\";\nimport { LabelVariant } from \"@fremtind/jkl-core\";\n\ninterface Props {\n    legend: string;\n    children?: ReactNode;\n    className?: string;\n    helpLabel?: string;\n    errorLabel?: string;\n    variant?: LabelVariant;\n    forceCompact?: boolean;\n}\n\nexport const FieldGroup = ({\n    legend,\n    className,\n    children,\n    helpLabel,\n    errorLabel,\n    variant = \"medium\",\n    forceCompact,\n}: Props) => {\n    const componentClassName = \"jkl-field-group\".concat(className ? ` ${className}` : \"\");\n    return (\n        <fieldset className={componentClassName}>\n            <legend className=\"jkl-field-group__legend\">\n                <Label variant={variant} forceCompact={forceCompact}>\n                    {legend}\n                </Label>\n            </legend>\n            {children}\n            {(helpLabel || errorLabel) && <SupportLabel helpLabel={helpLabel} errorLabel={errorLabel} />}\n        </fieldset>\n    );\n};\n","import React from \"react\";\nimport { FieldGroup } from \"../src/index\";\nimport \"./index.scss\";\n\nconst Example = () => (\n    <section className=\"form-section\">\n        <h2 className=\"jkl-h3 form-section__header\">Livsstil og helse</h2>\n        <FieldGroup\n            variant=\"large\"\n            className=\"jkl-spacing--bottom-3\"\n            legend=\"Har du bodd fast i Norge de siste 5 årene?\"\n        >\n            <p className=\"jkl-lead\">\n                Du trenger ikke ta hensyn til korte utenlandsopphold på grunn av studier eller feriereiser når du skal\n                svare på spørsmålet.\n            </p>\n            <p className=\"jkl-body\">\n                <strong>[Felt settes inn her]</strong>\n            </p>\n        </FieldGroup>\n        <FieldGroup legend=\"Hvor bodde du før du flyttet til Norge?\">\n            <p className=\"jkl-body\">\n                <strong>[Velg land her]</strong>\n            </p>\n        </FieldGroup>\n        <FieldGroup variant=\"small\" forceCompact legend=\"Hvor bodde du før du flyttet til Norge?\">\n            <p className=\"jkl-body\">\n                <strong>[Velg land her]</strong>\n            </p>\n        </FieldGroup>\n    </section>\n);\n\nexport default Example;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/ComponentLayout.tsx\";\nimport Example from \"./Example\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Example mdxType=\"Example\" />\n    <p>{`Et feltsett er et sett med skjemafelter som hører sammen, for eksempel navn, adresse og postnummer/sted.\nFeltsettet må ha en overskrift som beskriver innholdet, og kan også ha en hjelpetekst eller en feilmelding.`}</p>\n    <h2>{`Tekst og validering`}</h2>\n    <p>{`Velg størrelse på overskriften til feltsettet etter prinsippene for skjemadesign. Lag en kort og tydelig overskrift, som beskriver hva brukeren skal gjøre. Du kan også legge en forklarende hjelpetekst under feltsettet.`}</p>\n    <p>{`Hvis feltsettet ikke validerer, kan vi enten velge å legge en feilemelding under hele settet, eller under ett eller flere felt, hvis det gir bedre hjelp.`}</p>\n    <p>{`Eksempel:\nI et sett med radioknapper, viser vi feilmeldingen under feltsettet. Merk at feilmeldingen erstatter en eventuell hjelpetekst, slik at den feilmeldingen du lager også må fortelle hva hjelpeteksten var.`}</p>\n    <h2>{`Bruk`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Et sett med radioknapper`}</li>\n      <li parentName=\"ul\">{`Et sett med avmerkingsbokser`}</li>\n      <li parentName=\"ul\">{`Et feltsett som til sammen utgjør et konsept (for eksempel adressefelter)`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}