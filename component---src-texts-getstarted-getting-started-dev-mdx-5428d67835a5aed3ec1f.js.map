{"version":3,"sources":["webpack:///./src/texts/getstarted/GettingStartedDev.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"4OAMaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,8CACA,2SACA,4PACA,0DACA,uQAAsP,0BAAYC,WAAW,KAAvB,SAAtP,WAAmT,0BAAYA,WAAW,KAAvB,QAAnT,WACA,8BACE,iBAAGA,WAAW,cAAd,uEAAmG,0BAAYA,WAAW,KAAvB,gBAAnG,QAAoK,0BAAYA,WAAW,KAAvB,sBAApK,6DAEF,iDACA,iFAAgE,0BAAYA,WAAW,KAAvB,0CAAhE,+DACA,iFAAgE,0BAAYA,WAAW,KAAvB,oCAAhE,KACA,8BACE,iBAAGA,WAAW,cAAd,yHAAqJ,0BAAYA,WAAW,KAAvB,SAArJ,iBAEF,+CACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,uVAgBTJ,EAAWK,gBAAiB","file":"component---src-texts-getstarted-getting-started-dev-mdx-5428d67835a5aed3ec1f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Slik bruker du Jøkul`}</h1>\n    <p>{`Du kan bruke komponentene i Jøkul som rene stilark eller som React-komponenter. Alle CSS-stilark finnes i både vanlig og minifisert utgave. Vi anbefaler å bruke den minifiserte i produksjon. Vi tilbyr også hjelpefunksjoner for vanlige utfordringer i både Sass og JavaScript.`}</p>\n    <p>{`Dersom du kun bruker stilarkene (f.eks. hvis prosjektet ditt ikke bruker React) må du sørge for å gi komponentene riktig HTML-struktur. Se gjerne på hvordan React-komponentene er implementert, eller sjekk eksemplene i portalen.`}</p>\n    <h2>{`Kom i gang med React-komponenter`}</h2>\n    <p>{`Hvis du vil ta i bruk en Jøkul React-komponent, trenger du å laste inn både stilen og komponenten. Hvis du har satt opp en CSS-loader i pakkesystemet, kan du laste ned stilen direkte i React. Du kan også velge å legge den inn i en av dine `}<inlineCode parentName=\"p\">{`.scss`}</inlineCode>{`- eller `}<inlineCode parentName=\"p\">{`.css`}</inlineCode>{`-filer.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`For å normalisere stilen og få tilgang til rotstilen, laster du inn `}<inlineCode parentName=\"p\">{`core.min.css`}</inlineCode>{` fra `}<inlineCode parentName=\"p\">{`@fremtind/jkl-core`}</inlineCode>{`. Det trenger du bare å gjøre én gang i prosjektet ditt.`}</p>\n    </blockquote>\n    <h2>{`Installer avhengigheter`}</h2>\n    <p>{`Hvis du bruker React-komponenten, installerer du den med `}<inlineCode parentName=\"p\">{`yarn add @fremtind/jkl-accordion-react`}</inlineCode>{`. Stilpakken blir automatisk installert som en avhengighet.`}</p>\n    <p>{`Dersom du bare bruker stilpakken, installerer du den med `}<inlineCode parentName=\"p\">{`yarn add @fremtind/jkl-accordion`}</inlineCode>{`.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Vi bruker Yarn for pakkehåndtering i Jøkul. Hvis ditt prosjekt bruker NPM, kan du selvfølgelig installere pakkene med `}<inlineCode parentName=\"p\">{`npm i`}</inlineCode>{` som vanlig.`}</p>\n    </blockquote>\n    <h2>{`Ta i bruk komponenten`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import \"@fremtind/jkl-accordion/accordion.min.css\";\nimport { Accordion, AccordionItem } from \"@fremtind/jkl-accordion\";\n\nconst Component = () => (\n    <Accordion>\n        <AccordionItem title=\"Tittel 1\">Innhold i første</AccordionItem>\n        <AccordionItem title=\"Tittel 2\">Innhold i andre</AccordionItem>\n    </Accordion>\n);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}