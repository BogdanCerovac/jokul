{"version":3,"sources":["webpack:///./src/components/Delaytext/DelayText.tsx","webpack:///../packages/constants-util/build/browser/index.js","webpack:///./src/components/Card/Card.tsx","webpack:///./src/components/Card/CardList.tsx","webpack:///./src/components/PrincipleDiamond/PureCanvas.tsx","webpack:///./src/components/PrincipleDiamond/PrincipleDiamond.tsx","webpack:///./src/components/VisibleDetector/VisibleDetector.tsx","webpack:///./src/pages/index.tsx"],"names":["DelayText","text","delay","prefersReducedMotion","useContext","a11yContext","useState","length","index","setIndex","isRunning","setIsRunning","textRef","useRef","filteredText","useMemo","split","filter","_","i","onEnd","elRef","current","parentEl","parentElement","parentHeight","parseInt","window","getComputedStyle","getPropertyValue","options","top","offsetHeight","left","behavior","scrollTo","useEffect","ref","setTimeout","clearTimeout","lolRandom","Math","random","callback","savedCallback","id","setInterval","clearInterval","useInterval","textWrapperClass","classNames","className","unicode","Object","freeze","__proto__","NON_BREAKING_SPACE","nbsp","NON_BREAKING_HYPHEN","nbhy","PILE_OF_POO","SOFT_HYPHEN","shy","COPYRIGHT","NORTH_EAST_ARROW","LEFTWARDS_ARROW","UPWARDS_ARROW","RIGHTWARDS_ARROW","DOWNWARDS_ARROW","Card","heading","link","children","arrow","startsWith","onClick","navigate","CardList","vertical","componentClassNames","PureCanvas","width","height","contextRef","node","getContext","States","PrincipleDiamond","props","generateClasses","baseClass","principleState","saveContext","bind","draw","getScale","lastMinScale","lastMaxScale","updatedScaleAt","tileSize","tiles","ctx","size","componentDidMount","this","minScale","maxScale","componentDidUpdate","nextProps","Date","now","componentWillUnmount","animationTimeout","canvas","amount","t","clearRect","fillStyle","time","scale","x","y","position","abs","sin","fillRect","requestAnimationFrame","render","type","React","Component","defaultProps","VisibleDetector","forwardRef","onEnter","onLeave","threshold","isInViewport","setIsInViewport","internalRef","targetRef","rootMargin","useIntersectionObserver","entries","isIntersecting","some","entry","console","log","displayName","IndexPage","setPrincipleState","onPrincipleStateChange","state","isSmallDevice","useScreen","main","initial","opacity","animate","exit","transition","duration","data-testid","style","backgroundImage","withPrefix"],"mappings":"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","file":"component---src-pages-index-tsx-ac810b246463572f6fbf.js","sourcesContent":["import React, { useState, useEffect, useRef, useMemo, useContext } from \"react\";\nimport classNames from \"classnames\";\nimport \"./delay-text.scss\";\nimport { a11yContext } from \"../../contexts/a11yContext\";\n\nconst useInterval = (callback: () => void, delay: number | null) => {\n    const savedCallback = useRef<typeof callback>();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n        const tick = () => {\n            if (savedCallback.current) {\n                savedCallback.current();\n            }\n        };\n\n        if (delay !== null) {\n            const id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n        return;\n    }, [delay]);\n};\n\ninterface Props {\n    text: string;\n    delay: number;\n}\n\nexport const DelayText: React.FunctionComponent<Props> = ({ text, delay }) => {\n    const { prefersReducedMotion } = useContext(a11yContext);\n    const [index, setIndex] = useState(prefersReducedMotion ? text.length : -1);\n    const [isRunning, setIsRunning] = useState(!prefersReducedMotion);\n    const textRef = useRef<HTMLDivElement>(null);\n\n    const filteredText = useMemo(() => {\n        const splitText = text.split(\"\");\n        return splitText.filter((_, i) => {\n            return i <= index;\n        });\n    }, [index, text]);\n\n    const onEnd = () => {\n        const elRef = textRef.current;\n\n        if (!elRef) {\n            return;\n        }\n\n        const parentEl = elRef.parentElement;\n        const parentHeight = parentEl ? parseInt(window.getComputedStyle(parentEl).getPropertyValue(\"padding-top\")) : 0;\n        const elHeight = elRef.offsetHeight + parentHeight;\n\n        const options: ScrollToOptions = {\n            top: elHeight,\n            left: 0,\n            behavior: \"smooth\",\n        };\n\n        window.scrollTo(options);\n    };\n\n    useEffect(() => {\n        if (isRunning || prefersReducedMotion) {\n            return;\n        }\n\n        const ref = window && window.setTimeout(onEnd, 500);\n        return () => {\n            ref && window.clearTimeout(ref);\n        };\n    }, [isRunning, prefersReducedMotion]);\n\n    const lolRandom = Math.random() * delay + delay / 2;\n\n    useInterval(\n        () => {\n            if (index >= text.length) {\n                setIsRunning(false);\n            } else {\n                setIndex(index + 1);\n            }\n        },\n        isRunning ? (lolRandom < 50 ? delay : lolRandom) : null,\n    );\n\n    const textWrapperClass = classNames(\"jkl-portal-delay-text__content\", {\n        \"jkl-portal-delay-text__content--done\": !isRunning,\n    });\n\n    return (\n        <section ref={textRef} className=\"jkl-portal-delay-text\">\n            <div className={textWrapperClass}>{filteredText}</div>\n        </section>\n    );\n};\n","var NON_BREAKING_SPACE = \"\\xA0\";\nvar nbsp = NON_BREAKING_SPACE;\nvar NON_BREAKING_HYPHEN = \"\\u2011\";\nvar nbhy = NON_BREAKING_HYPHEN;\nvar PILE_OF_POO = \"\\uD83D\\uDCA9\";\nvar SOFT_HYPHEN = \"\\xAD\";\nvar shy = SOFT_HYPHEN;\nvar COPYRIGHT = \"\\xA9\";\nvar NORTH_EAST_ARROW = \"\\u2197\";\nvar LEFTWARDS_ARROW = \"\\u2190\";\nvar UPWARDS_ARROW = \"\\u2191\";\nvar RIGHTWARDS_ARROW = \"\\u2192\";\nvar DOWNWARDS_ARROW = \"\\u2193\";\n\nvar unicode = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tNON_BREAKING_SPACE: NON_BREAKING_SPACE,\n\tnbsp: nbsp,\n\tNON_BREAKING_HYPHEN: NON_BREAKING_HYPHEN,\n\tnbhy: nbhy,\n\tPILE_OF_POO: PILE_OF_POO,\n\tSOFT_HYPHEN: SOFT_HYPHEN,\n\tshy: shy,\n\tCOPYRIGHT: COPYRIGHT,\n\tNORTH_EAST_ARROW: NORTH_EAST_ARROW,\n\tLEFTWARDS_ARROW: LEFTWARDS_ARROW,\n\tUPWARDS_ARROW: UPWARDS_ARROW,\n\tRIGHTWARDS_ARROW: RIGHTWARDS_ARROW,\n\tDOWNWARDS_ARROW: DOWNWARDS_ARROW\n});\n\nexport { unicode };\n","import React, { FC } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { unicode } from \"@fremtind/jkl-constants-util\";\nimport \"./card.scss\";\n\ninterface Props {\n    heading: string;\n    link: string;\n}\n\nexport const Card: FC<Props> = ({ heading, link, children }) => {\n    // right arrow for internal links, up/right for external links:\n    const arrow = link.startsWith(\"http\") ? unicode.NORTH_EAST_ARROW : unicode.RIGHTWARDS_ARROW;\n    const handleClick = () => navigate(link);\n\n    return (\n        <button className=\"jkl-portal-card\" onClick={handleClick}>\n            <p className=\"jkl-portal-card__heading\">{heading}</p>\n            <div className=\"jkl-portal-card__content\">{children}</div>\n            <div className=\"jkl-portal-card__arrow\">{arrow}</div>\n        </button>\n    );\n};\n","import React, { FC } from \"react\";\nimport classNames from \"classnames\";\nimport \"./card-list.scss\";\n\ninterface Props {\n    vertical?: boolean;\n}\n\nexport const CardList: FC<Props> = ({ children, vertical }) => {\n    const componentClassNames = classNames(\"jkl-portal__card-list\", {\n        \"jkl-portal__card-list--vertical\": vertical,\n    });\n\n    return <div className={componentClassNames}>{children}</div>;\n};\n","import React from \"react\";\n\ninterface Props {\n    className?: string;\n    width: number;\n    height: number;\n    contextRef: (context: CanvasRenderingContext2D | null) => void;\n}\n\nexport function PureCanvas({ className, width, height, contextRef }: Props) {\n    return (\n        <canvas\n            className={className}\n            width={width}\n            height={height}\n            ref={(node) => (node ? contextRef(node.getContext(\"2d\")) : null)}\n        />\n    );\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { PureCanvas } from \"./PureCanvas\";\nimport \"./princible-diamond.scss\";\n\nexport enum States {\n    None = 0,\n    Elevated = 1,\n    Movement = 2,\n    Clarity = 3,\n}\n\ninterface Props {\n    minScale: number;\n    maxScale: number;\n    principleState?: number;\n    type?: string;\n    tiles: number;\n}\n\nexport class PrincipleDiamond extends React.Component<Props> {\n    lastMinScale: number;\n    lastMaxScale: number;\n    updatedScaleAt: number;\n    animationTimeout?: number;\n    tileSize: number;\n    tiles: number;\n    ctx: CanvasRenderingContext2D | null;\n    size: number[];\n\n    constructor(props: Props) {\n        super(props);\n        this.saveContext = this.saveContext.bind(this);\n        this.draw = this.draw.bind(this);\n        this.generateClasses = this.generateClasses.bind(this);\n        this.getScale = this.getScale.bind(this);\n\n        this.lastMinScale = 0;\n        this.lastMaxScale = 0;\n        this.updatedScaleAt = 0;\n        this.tileSize = 0;\n        this.tiles = 7;\n        this.ctx = null;\n        this.size = [250, 250];\n    }\n\n    componentDidMount() {\n        this.lastMinScale = this.props.minScale;\n        this.lastMaxScale = this.props.maxScale;\n        this.updatedScaleAt = 0;\n    }\n\n    componentDidUpdate(nextProps: Props) {\n        if (this.props.minScale !== nextProps.minScale) {\n            // console.log(\"updating minScale\", this.lastMinScale, this.props.minScale, nextProps.minScale);\n            this.lastMinScale = this.props.minScale;\n            this.updatedScaleAt = Date.now();\n        }\n\n        if (this.props.maxScale !== nextProps.maxScale) {\n            // console.log(\"updating minScale\", this.lastMaxScale, this.props.maxScale, nextProps.maxScale);\n            this.lastMaxScale = this.props.maxScale;\n            this.updatedScaleAt = Date.now();\n        }\n\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        if (this.animationTimeout) {\n            window.clearTimeout(this.animationTimeout);\n        }\n    }\n\n    saveContext(ctx: CanvasRenderingContext2D | null) {\n        if (!ctx) {\n            return;\n        }\n        this.ctx = ctx;\n        this.size = [this.ctx.canvas.width, this.ctx.canvas.height];\n        this.tileSize = this.size[0] / this.props.tiles;\n        this.draw();\n    }\n\n    getScale() {\n        const t = (Date.now() - this.updatedScaleAt) / 150;\n\n        let amount = t < 0 ? 0 : t;\n        amount = t > 1 ? 1 : t;\n\n        const lerpMin = this.lastMinScale + (this.props.minScale - this.lastMinScale) * amount;\n        const lerpMax = this.lastMaxScale + (this.props.maxScale - this.lastMaxScale) * amount;\n\n        return [lerpMin, lerpMax];\n    }\n\n    draw() {\n        const { tileSize, ctx, size } = this;\n        const { tiles } = this.props;\n\n        const width = size[0];\n        const height = size[1];\n\n        if (ctx) {\n            ctx.clearRect(0, 0, width, height);\n            ctx.fillStyle = \"black\";\n        }\n\n        const time = Date.now();\n\n        const scale = this.getScale();\n\n        for (let x = 0; x < tiles; x++) {\n            for (let y = 0; y < tiles; y++) {\n                const baseScale = Math.abs(Math.sin(time * 0.001 + x * 50 + y * 50));\n\n                const nBaseScale = baseScale * (scale[1] - scale[0]) + scale[0];\n                const position = tileSize;\n                const size = nBaseScale * tileSize;\n\n                ctx &&\n                    ctx.fillRect(\n                        x * position - size / 2 + tileSize / 2,\n                        y * position - size / 2 + tileSize / 2,\n                        size,\n                        size,\n                    );\n            }\n        }\n\n        if (this.animationTimeout) {\n            window.clearTimeout(this.animationTimeout);\n        }\n\n        this.animationTimeout = window.setTimeout(() => {\n            window.requestAnimationFrame(this.draw);\n        }, 1000 / 30);\n    }\n\n    generateClasses = (baseClass: string) =>\n        classNames(baseClass, {\n            [baseClass + \"--elevated\"]: this.props.principleState === 1,\n            [baseClass + \"--movement\"]: this.props.principleState === 2,\n            [baseClass + \"--clarity\"]: this.props.principleState === 3,\n        });\n\n    render() {\n        return (\n            <PureCanvas\n                className={this.generateClasses(\"jkl-portal-principle-diamond__\" + this.props.type)}\n                contextRef={this.saveContext}\n                height={250}\n                width={250}\n            />\n        );\n    }\n\n    static defaultProps = {\n        tiles: 7,\n        minScale: 0.2,\n        maxScale: 0.8,\n    };\n}\n","import { useRef, useState, forwardRef, RefObject, MutableRefObject, ReactElement } from \"react\";\nimport { useIntersectionObserver } from \"@fremtind/jkl-react-hooks\";\n\ntype RenderFunction<T extends HTMLElement> = (\n    ref: ((instance: T | null) => void) | MutableRefObject<T | null> | null,\n) => ReactElement | null;\n\ninterface Props {\n    render: RenderFunction<HTMLDivElement>;\n    onEnter?: (entries: IntersectionObserverEntry[]) => void;\n    onLeave?: (entries: IntersectionObserverEntry[]) => void;\n    threshold?: Array<number>;\n}\n\nexport const VisibleDetector = forwardRef<HTMLDivElement, Props>(\n    ({ onEnter, onLeave, render, threshold = [0.7] }, ref) => {\n        const [isInViewport, setIsInViewport] = useState(false);\n        const internalRef = useRef<HTMLDivElement>(null);\n        const targetRef = ref || internalRef;\n\n        const onIntersect = (entries: IntersectionObserverEntry[]) => {\n            // check if element is intersecting\n            const isIntersecting = entries.some((entry) => entry.isIntersecting);\n\n            // trigger onLeave or onEnter if element left or entered\n            if (isInViewport && !isIntersecting && onLeave) {\n                onLeave(entries);\n            } else if (!isInViewport && !isIntersecting && onLeave) {\n                onLeave(entries);\n            } else if (!isInViewport && isIntersecting && onEnter) {\n                onEnter(entries);\n            }\n\n            // update state\n            setIsInViewport(isIntersecting);\n        };\n\n        const fallback = () => console.log(\"IntersectionObserver not supported\");\n        const options = { rootMargin: \"0px\", threshold };\n\n        useIntersectionObserver(targetRef as RefObject<HTMLElement>, onIntersect, fallback, options);\n\n        return render(targetRef);\n    },\n);\n\nVisibleDetector.displayName = \"VisibleDetector\";\n","import React, { useState, useMemo } from \"react\";\nimport { withPrefix } from \"gatsby\";\nimport { motion } from \"framer-motion\";\n\nimport { useScreen } from \"@fremtind/jkl-react-hooks\";\n\nimport { DelayText } from \"../components/Delaytext\";\nimport { CardList, Card } from \"../components/Card\";\nimport { PrincipleDiamond } from \"../components/PrincipleDiamond\";\nimport { VisibleDetector } from \"../components/VisibleDetector\";\n\nimport \"./style.scss\";\nimport \"./index.scss\";\n\n// TODO Try to use scrollY in stead of time when lerping diamonds\n// TODO Remove DelayText when it's done\n\nconst IndexPage: React.FC = () => {\n    const [principleState, setPrincipleState] = useState(0);\n\n    const onPrincipleStateChange = (state: number) => {\n        setPrincipleState(state);\n    };\n\n    const onLeave = (state: number) => {\n        if (state === principleState) {\n            setPrincipleState(0);\n        }\n    };\n\n    const minScale = useMemo(() => {\n        switch (principleState) {\n            case 2:\n                return 0.2;\n            case 3:\n                return 0.1;\n            default:\n                return 1.1;\n        }\n    }, [principleState]);\n\n    const maxScale = useMemo(() => {\n        switch (principleState) {\n            case 2:\n                return 0.8;\n            case 3:\n                return 0.3;\n            default:\n                return 1.1;\n        }\n    }, [principleState]);\n\n    const { isSmallDevice } = useScreen();\n\n    return (\n        <motion.main\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.35 }}\n            className=\"jkl-portal__main jkl-portal__main--frontpage\"\n            id=\"innhold\"\n        >\n            {!isSmallDevice && <DelayText text=\"Jøkul Designsystem\" delay={100} />}\n            <div className=\"jkl-portal-frontpage\">\n                <section className=\"jkl-portal-frontpage__section-intro\">\n                    <h2 className=\"jkl-title-small\" data-testid=\"front-page__tagline\">\n                        Velkommen til Jøkul — design&shy;systemet til Fremtind. Her har vi samlet alt du trenger for å\n                        lage løsninger i vår profil.\n                    </h2>\n                    <div className=\"jkl-portal-frontpage__section-intro--content\">\n                        <div className=\"jkl-portal-frontpage__section-intro--image-container\">\n                            <div\n                                className=\"jkl-portal-frontpage__section-intro--image\"\n                                style={{\n                                    backgroundImage: `url(${withPrefix(\"assets/img/frontpage.jpg\")})`,\n                                }}\n                            />\n                        </div>\n                        <CardList vertical>\n                            <Card heading=\"Universell utforming\" link=\"/komigang/uu\">\n                                Få hjelp til å komme i gang med Universell utforming.\n                            </Card>\n                            <Card heading=\"For utviklere\" link=\"/komigang/utvikling\">\n                                Her får du vite det mest grunnlegende før du setter i gang å bruke Jøkul.\n                            </Card>\n                            <Card heading=\"For designere\" link=\"/komigang/design\">\n                                Her får du vite det mest grunnlegende før du setter i gang å bruke Jøkul.\n                            </Card>\n                            <Card heading=\"Prosessen\" link=\"/komigang/prosessen\">\n                                Hvordan du kan jobbe med designsystemet.\n                            </Card>\n                        </CardList>\n                    </div>\n                </section>\n\n                <section className=\"jkl-portal-frontpage__section-principles\">\n                    <h2 className=\"jkl-title-small jkl-portal-frontpage__section-principles--heading\">\n                        Hovedprinsipper du kan tenke på for å designe en løsning til vår profil på best mulig måte:\n                    </h2>\n                    <div className=\"jkl-portal-frontpage__section-principles__diamond-container\">\n                        <div className=\"jkl-portal-principle-diamond\">\n                            <PrincipleDiamond\n                                principleState={principleState}\n                                minScale={minScale}\n                                maxScale={maxScale}\n                                type=\"diamond\"\n                            />\n                            <PrincipleDiamond\n                                principleState={principleState}\n                                minScale={minScale}\n                                maxScale={maxScale}\n                                type=\"shadow\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"jkl-portal-frontpage__section-principles__principle--container\">\n                        <VisibleDetector\n                            onEnter={() => onPrincipleStateChange(1)}\n                            onLeave={() => onLeave(1)}\n                            render={(ref) => (\n                                <div ref={ref} className=\"jkl-portal-frontpage__section-principles__principle\">\n                                    <div className=\"jkl-portal-frontpage__section-principles__principle--container\">\n                                        <h1 className=\"jkl-title-large\" data-testid=\"title-elevasjon\">\n                                            Elevasjon\n                                        </h1>\n                                        <p className=\"jkl-lead\">\n                                            Vi løfter det som er viktig og skaper et naturlig informasjonshierarki.\n                                        </p>\n                                    </div>\n                                </div>\n                            )}\n                        />\n                        <VisibleDetector\n                            onEnter={() => onPrincipleStateChange(2)}\n                            onLeave={() => onLeave(2)}\n                            render={(ref) => (\n                                <div ref={ref} className=\"jkl-portal-frontpage__section-principles__principle\">\n                                    <div className=\"jkl-portal-frontpage__section-principles__principle--container\">\n                                        <h1 className=\"jkl-title-large\" data-testid=\"title-bevegelse\">\n                                            Bevegelse\n                                        </h1>\n                                        <p className=\"jkl-lead\">\n                                            Vi skal utforske, se fremover og være tilpasningsdyktige.\n                                        </p>\n                                    </div>\n                                </div>\n                            )}\n                        />\n                        <VisibleDetector\n                            onEnter={() => onPrincipleStateChange(3)}\n                            onLeave={() => onLeave(3)}\n                            render={(ref) => (\n                                <div ref={ref} className=\"jkl-portal-frontpage__section-principles__principle\">\n                                    <div className=\"jkl-portal-frontpage__section-principles__principle--container\">\n                                        <h1 className=\"jkl-title-large\" data-testid=\"title-klarhet\">\n                                            Klarhet\n                                        </h1>\n                                        <p className=\"jkl-lead\">\n                                            Vi skal fremstå som ærlig og klar, med en tydelig og varm stemme\n                                        </p>\n                                    </div>\n                                </div>\n                            )}\n                        />\n                    </div>\n                </section>\n\n                <section className=\"jkl-portal-frontpage__section-contribute\">\n                    <div className=\"jkl-portal-frontpage__section--wrapper\">\n                        <h2 className=\"jkl-title-small\">Bidra</h2>\n                        <p className=\"jkl-lead\">\n                            Jøkul er et levende designsystem. For at vi skal holde det relevant, er det viktig at alle\n                            som bruker designsystemet og merkevareprofilen vår hjelper til med å forbedre det vi har.\n                            Send oss en mail eller bidra i GitHub.\n                        </p>\n                        <p className=\"jkl-lead\">\n                            Finn oss i Teams kanalen “Support Designsystem” eller kom på åpent forum hver tirsdag 14 til\n                            14.30. Her informerer vi om hva som skjer og tar imot innspill.\n                        </p>\n                    </div>\n                </section>\n            </div>\n        </motion.main>\n    );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}