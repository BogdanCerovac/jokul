{"version":3,"sources":["webpack:///../packages/message-box-react/src/MessageBox.tsx","webpack:///../packages/message-box-react/documentation/Example.tsx","webpack:///../packages/message-box-react/documentation/MessageBox.mdx"],"names":["messageFactory","messageType","title","fullWidth","className","children","componentClassName","concat","InfoMessage","ErrorMessage","WarningMessage","SuccessMessage","Example","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"0NAWA,SAASA,EAAeC,GACpB,OAAO,YAA2E,IAArDC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,UAA8C,IAAnCC,iBAAmC,MAAvB,GAAuB,EAAnBC,EAAmB,EAAnBA,SACrDC,EAAqB,kBAAkBC,OAAlB,qBACFN,EACrBE,EAAY,yBAA2B,GACvCC,EAAY,IAAIA,EAAc,IAElC,OACI,2BAAOA,UAAWE,GACd,yBAAKF,UAAU,iCAAiCF,GAChD,yBAAKE,UAAU,kCAAkCC,KAM1D,IAAMG,EAAcR,EAAe,QAC7BS,EAAeT,EAAe,SAC9BU,EAAiBV,EAAe,WAChCW,EAAiBX,EAAe,WCI9BY,EA7BC,kBACZ,6BAASR,UAAU,4CACf,kBAACI,EAAD,CAAaJ,UAAU,wBAAwBF,MAAM,QAArD,wFAGA,kBAACQ,EAAD,CAAgBN,UAAU,wBAAwBF,MAAM,WAAxD,0EAGA,kBAACO,EAAD,CAAcL,UAAU,wBAAwBF,MAAM,SAAtD,0EAGA,kBAACS,EAAD,CAAgBP,UAAU,wBAAwBF,MAAM,WAAxD,yCAGA,kBAACM,EAAD,CAAaJ,UAAU,wBAAwBD,WAAS,EAACD,MAAM,QAA/D,wFAGA,kBAACQ,EAAD,CAAgBN,UAAU,wBAAwBD,WAAS,EAACD,MAAM,WAAlE,0EAGA,kBAACO,EAAD,CAAcL,UAAU,wBAAwBD,WAAS,EAACD,MAAM,SAAhE,0EAGA,kBAACS,EAAD,CAAgBR,WAAS,EAACD,MAAM,WAAhC,2C,qFCrBD,IAAMW,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,EAAD,CAASA,QAAQ,aAKrBH,EAAWI,gBAAiB","file":"component---packages-message-box-react-documentation-message-box-mdx-3164b77782f655969e71.js","sourcesContent":["import React, { ReactNode } from \"react\";\n\ninterface Props {\n    title: string;\n    children: ReactNode;\n    fullWidth?: boolean;\n    className?: string;\n}\n\ntype messageTypes = \"info\" | \"error\" | \"success\" | \"warning\";\n\nfunction messageFactory(messageType: messageTypes) {\n    return function messageBox({ title, fullWidth, className = \"\", children }: Props) {\n        const componentClassName = \"jkl-message-box\".concat(\n            ` jkl-message-box--${messageType}`,\n            fullWidth ? ` jkl-message-box--full` : \"\",\n            className ? ` ${className}` : \"\",\n        );\n        return (\n            <aside className={componentClassName}>\n                <div className=\"jkl-message-box__title jkl-h4\">{title}</div>\n                <div className=\"jkl-message-box__message jkl-p\">{children}</div>\n            </aside>\n        );\n    };\n}\n\nexport const InfoMessage = messageFactory(\"info\");\nexport const ErrorMessage = messageFactory(\"error\");\nexport const WarningMessage = messageFactory(\"warning\");\nexport const SuccessMessage = messageFactory(\"success\");\n","import React from \"react\";\nimport \"@fremtind/jkl-core/core.css\";\nimport \"@fremtind/jkl-message-box/message-box.scss\";\nimport { ErrorMessage, InfoMessage, SuccessMessage, WarningMessage } from \"../src\";\n\nconst Example = () => (\n    <section className=\"jkl-spacing--top-3 jkl-spacing--bottom-3\">\n        <InfoMessage className=\"jkl-spacing--bottom-2\" title=\"Info\">\n            Cupidatat Lorem incididunt incididunt in non mollit cillum Lorem eiusmod sunt magna.\n        </InfoMessage>\n        <WarningMessage className=\"jkl-spacing--bottom-2\" title=\"Warning\">\n            In non dolore ullamco minim adipisicing ipsum pariatur deserunt ipsum.\n        </WarningMessage>\n        <ErrorMessage className=\"jkl-spacing--bottom-2\" title=\"Error\">\n            In non dolore ullamco minim adipisicing ipsum pariatur deserunt ipsum.\n        </ErrorMessage>\n        <SuccessMessage className=\"jkl-spacing--bottom-2\" title=\"Success\">\n            Ullamco minim aute Lorem adipisicing.\n        </SuccessMessage>\n        <InfoMessage className=\"jkl-spacing--bottom-2\" fullWidth title=\"Info\">\n            Cupidatat Lorem incididunt incididunt in non mollit cillum Lorem eiusmod sunt magna.\n        </InfoMessage>\n        <WarningMessage className=\"jkl-spacing--bottom-2\" fullWidth title=\"Warning\">\n            In non dolore ullamco minim adipisicing ipsum pariatur deserunt ipsum.\n        </WarningMessage>\n        <ErrorMessage className=\"jkl-spacing--bottom-2\" fullWidth title=\"Error\">\n            In non dolore ullamco minim adipisicing ipsum pariatur deserunt ipsum.\n        </ErrorMessage>\n        <SuccessMessage fullWidth title=\"Success\">\n            Ullamco minim aute Lorem adipisicing.\n        </SuccessMessage>\n    </section>\n);\n\nexport default Example;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/ComponentLayout.tsx\";\nimport Example from \"./Example\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Example mdxType=\"Example\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}