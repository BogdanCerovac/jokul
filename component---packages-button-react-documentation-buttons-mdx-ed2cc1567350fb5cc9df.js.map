{"version":3,"sources":["webpack:///../packages/button-react/src/Button.tsx","webpack:///../packages/button-react/documentation/Primary.tsx","webpack:///../packages/button-react/documentation/Secondary.tsx","webpack:///../packages/button-react/documentation/Tertiary.tsx","webpack:///../packages/button-react/documentation/buttons.mdx","webpack:///../packages/loader-react/build/browser/index.js"],"names":["makeButtonComponent","buttonType","forwardRef","ref","children","className","forceCompact","inverted","onClick","onTouchStart","loader","rest","componentClassName","classNames","handleTouch","event","target","targetTouches","length","Xcoord","clientX","getBoundingClientRect","x","Ycoord","clientY","y","style","setProperty","toPrecision","classList","add","setTimeout","remove","Button","cn","disabled","showLoader","textDescription","negative","aria-hidden","inline","PrimaryButton","SecondaryButton","TertiaryButton","console","log","Primary","boolValues","undefined","Secondary","Tertiary","_frontmatter","makeShortcode","name","props","warn","Ingress","ComponentExample","CodeDemo","DoDontExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","component","knobs","boolProps","code","type","description","image","isMDXComponent","Loader","_ref","_ref$negative","_ref$inline","_ref$dataTestAutoId","dataTestAutoId","React","createElement","title","role"],"mappings":"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","file":"component---packages-button-react-documentation-buttons-mdx-ed2cc1567350fb5cc9df.js","sourcesContent":["import React, { forwardRef, ButtonHTMLAttributes, TouchEvent } from \"react\";\nimport classNames from \"classnames\";\nimport { Loader } from \"@fremtind/jkl-loader-react\";\n\nexport interface Props extends Exclude<ButtonHTMLAttributes<HTMLButtonElement>, \"disabled\"> {\n    forceCompact?: boolean;\n    inverted?: boolean;\n    loader?: {\n        showLoader: boolean;\n        textDescription: string;\n    };\n}\n\ntype ValidButtons = \"primary\" | \"secondary\" | \"tertiary\";\n\nconst makeButtonComponent = (buttonType: ValidButtons) => {\n    const button = forwardRef<HTMLButtonElement, Props>(\n        ({ children, className = \"\", forceCompact, inverted, onClick, onTouchStart, loader, ...rest }, ref) => {\n            const componentClassName = classNames(\"jkl-button\", \"jkl-button--\" + buttonType, {\n                \"jkl-button--compact\": forceCompact,\n                \"jkl-button--inverted\": inverted,\n            });\n\n            const handleTouch = (event: TouchEvent<HTMLButtonElement>) => {\n                onTouchStart && onTouchStart(event);\n\n                const target = event.target as HTMLButtonElement;\n                if (target && event.targetTouches.length) {\n                    const Xcoord = event.targetTouches[0].clientX - target.getBoundingClientRect().x;\n                    const Ycoord = event.targetTouches[0].clientY - target.getBoundingClientRect().y;\n                    target.style.setProperty(\"--jkl-touch-xcoord\", Xcoord.toPrecision(4) + \"px\");\n                    target.style.setProperty(\"--jkl-touch-ycoord\", Ycoord.toPrecision(4) + \"px\");\n                    target.classList.add(\"jkl-button--pressed\");\n                    setTimeout(() => target.classList.remove(\"jkl-button--pressed\"), 400);\n                }\n            };\n\n            const Button = ({ cn }: { cn?: string }) => (\n                <button\n                    className={cn}\n                    onClick={onClick}\n                    onTouchStart={handleTouch}\n                    disabled={loader?.showLoader}\n                    {...rest}\n                    ref={ref}\n                >\n                    {children}\n                </button>\n            );\n\n            if (!loader) {\n                return <Button cn={classNames(componentClassName, className)} />;\n            }\n\n            return (\n                <div\n                    className={classNames(\"jkl-button-wrapper\", className, {\n                        \"jkl-button-wrapper--compact\": forceCompact,\n                    })}\n                >\n                    <div\n                        className={classNames(\"jkl-button-wrapper__slider\", {\n                            \"jkl-button-wrapper__slider--show-loader\": !!loader.showLoader,\n                        })}\n                    >\n                        <Button cn={componentClassName} />\n                        <div className=\"jkl-button-wrapper__loader jkl-layout-spacing--small-top\">\n                            <Loader\n                                textDescription={loader.textDescription}\n                                negative={inverted}\n                                aria-hidden={!!loader.showLoader}\n                                inline={true}\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n        },\n    );\n    return button;\n};\n\nexport const PrimaryButton = makeButtonComponent(\"primary\");\nexport const SecondaryButton = makeButtonComponent(\"secondary\");\nexport const TertiaryButton = makeButtonComponent(\"tertiary\");\n","import React from \"react\";\nimport { ExampleComponentProps } from \"@fremtind/jkl-portal-components\";\nimport { PrimaryButton } from \"../src\";\n\nfunction onClick() {\n    console.log(\"Hello!\");\n}\n\nexport const Primary: React.FC<ExampleComponentProps> = ({ boolValues }) => (\n    <PrimaryButton\n        inverted={boolValues && boolValues[\"Invertert\"]}\n        forceCompact={boolValues && boolValues[\"Kompakt\"]}\n        loader={\n            !!boolValues?.[\"withLoader\"]\n                ? { showLoader: !!boolValues?.[\"isLoading\"], textDescription: \"Laster innhold\" }\n                : undefined\n        }\n        onClick={onClick}\n        className=\"jkl-spacing--right-1\"\n    >\n        Avbryt\n    </PrimaryButton>\n);\n\nexport const PrimaryCode = `\n<PrimaryButton\n    inverted={boolValues && boolValues[\"Invertert\"]}\n    forceCompact={boolValues && boolValues[\"Kompakt\"]}\n    loader={\n        !!boolValues?.[\"withLoader\"]\n            ? { showLoader: !!boolValues?.[\"isLoading\"], textDescription: \"Laster innhold\" }\n            : undefined\n    }\n    onClick={onClick}\n    className=\"jkl-spacing--right-1\"\n>\n    Avbryt\n</PrimaryButton>\n`;\n","import React from \"react\";\nimport { ExampleComponentProps } from \"@fremtind/jkl-portal-components\";\nimport { SecondaryButton } from \"../src\";\n\nfunction onClick() {\n    console.log(\"Hello!\");\n}\n\nexport const Secondary: React.FC<ExampleComponentProps> = ({ boolValues }) => (\n    <SecondaryButton\n        inverted={boolValues && boolValues[\"Invertert\"]}\n        forceCompact={boolValues && boolValues[\"Kompakt\"]}\n        loader={\n            !!boolValues?.[\"withLoader\"]\n                ? { showLoader: !!boolValues?.[\"isLoading\"], textDescription: \"Laster innhold\" }\n                : undefined\n        }\n        onClick={onClick}\n        className=\"jkl-spacing--right-1\"\n    >\n        Avbryt\n    </SecondaryButton>\n);\n\nexport const SecondaryCode = `\n<SecondaryButton\n    inverted={boolValues && boolValues[\"Invertert\"]}\n    forceCompact={boolValues && boolValues[\"Kompakt\"]}\n    loader={\n        !!boolValues?.[\"withLoader\"]\n            ? { showLoader: !!boolValues?.[\"isLoading\"], textDescription: \"Laster innhold\" }\n            : undefined\n    }\n    onClick={onClick}\n    className=\"jkl-spacing--right-1\"\n>\n    Avbryt\n</SecondaryButton>\n`;\n","import React from \"react\";\nimport { ExampleComponentProps } from \"@fremtind/jkl-portal-components\";\nimport { TertiaryButton } from \"../src\";\n\nfunction onClick() {\n    console.log(\"Hello!\");\n}\n\nexport const Tertiary: React.FC<ExampleComponentProps> = ({ boolValues }) => (\n    <TertiaryButton\n        inverted={boolValues && boolValues[\"Invertert\"]}\n        forceCompact={boolValues && boolValues[\"Kompakt\"]}\n        loader={\n            !!boolValues?.[\"withLoader\"]\n                ? { showLoader: !!boolValues?.[\"isLoading\"], textDescription: \"Laster innhold\" }\n                : undefined\n        }\n        onClick={onClick}\n        className=\"jkl-spacing--right-1\"\n    >\n        Avbryt\n    </TertiaryButton>\n);\n\nexport const TertiaryCode = `\n<TertiaryButton\n    inverted={boolValues && boolValues[\"Invertert\"]}\n    forceCompact={boolValues && boolValues[\"Kompakt\"]}\n    loader={\n        !!boolValues?.[\"withLoader\"]\n            ? { showLoader: !!boolValues?.[\"isLoading\"], textDescription: \"Laster innhold\" }\n            : undefined\n    }\n    onClick={onClick}\n    className=\"jkl-spacing--right-1\"\n>\n    Avbryt\n</TertiaryButton>\n`;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport { Primary, PrimaryCode } from \"./Primary\";\nimport { Secondary, SecondaryCode } from \"./Secondary\";\nimport { Tertiary, TertiaryCode } from \"./Tertiary\";\nimport { PrimaryButton, SecondaryButton, TertiaryButton } from \"../src\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst CodeDemo = makeShortcode(\"CodeDemo\");\nconst DoDontExample = makeShortcode(\"DoDontExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Knapper starter en handling. Teksten på knappen forteller hva som vil skje når brukeren klikker på den.\n    </Ingress>\n    <p><strong parentName=\"p\">{`Primærknapp:`}</strong>{` brukes til den viktigste handlingen på en side - hovedhandlingen. En side kan noen ganger ha mer enn en hovedhandling, men ikke mange.`}</p>\n    <ComponentExample component={Primary} knobs={{\n      boolProps: [\"Kompakt\", \"Invertert\", \"isLoading\", 'withLoader']\n    }} mdxType=\"ComponentExample\">\n    <CodeDemo code={PrimaryCode} mdxType=\"CodeDemo\" />\n    </ComponentExample>\n    <p><strong parentName=\"p\">{`Sekundærknapp:`}</strong>{` brukes til handlinger som ikke er like viktige for oss eller brukeren.`}</p>\n    <ComponentExample component={Secondary} knobs={{\n      boolProps: [\"Kompakt\", \"Invertert\", \"isLoading\", 'withLoader']\n    }} mdxType=\"ComponentExample\">\n    <CodeDemo code={SecondaryCode} mdxType=\"CodeDemo\" />\n    </ComponentExample>\n    <p><strong parentName=\"p\">{`Tertiærknapp:`}</strong>{` brukes til handlinger som er mindre viktige, eller som kan gi uønskede konsekvenser.`}</p>\n    <ComponentExample component={Tertiary} knobs={{\n      boolProps: [\"Kompakt\", \"Invertert\", \"isLoading\", 'withLoader']\n    }} mdxType=\"ComponentExample\">\n    <CodeDemo code={TertiaryCode} mdxType=\"CodeDemo\" />\n    </ComponentExample>\n    <h2>{`Lastemodus`}</h2>\n    <p>{`Hvis du skal bruke lastemodus i knappen må du sørge for at `}<inlineCode parentName=\"p\">{`@fremtind/jkl-loader/loader.min.css`}</inlineCode>{` er lastet inn i klienten.`}</p>\n    <h2>{`Knappetyper`}</h2>\n    <p>{`Disse tre hovedknappetypene har et hierarki. Når brukeren har flere valg samtidig, skal vi kun ha én primærknapp.`}</p>\n    <DoDontExample type=\"do\" description=\"Kun én primærknapp\" image=\"/assets/do-donts/button-do-1.png\" mdxType=\"DoDontExample\" />\n    <DoDontExample type=\"dont\" description=\"Flere primærknapper\" image=\"/assets/do-donts/button-dont-1.png\" mdxType=\"DoDontExample\" />\n    <h2>{`Tekst på knapper`}</h2>\n    <p>{`Knappetekster skal være så enkle og korte som mulig og skal oppfordre til handling. Bruk helst bare to ord:`}</p>\n    <PrimaryButton className=\"jkl-layout-spacing--medium-right\" mdxType=\"PrimaryButton\">Send inn</PrimaryButton>\n    <SecondaryButton className=\"jkl-layout-spacing--medium-right\" mdxType=\"SecondaryButton\">Lagre</SecondaryButton>\n    <TertiaryButton className=\"jkl-layout-spacing--medium-right\" mdxType=\"TertiaryButton\">Avbryt</TertiaryButton>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport classNames from 'classnames';\n\nvar Loader = function Loader(_ref) {\n  var textDescription = _ref.textDescription,\n      _ref$negative = _ref.negative,\n      negative = _ref$negative === void 0 ? false : _ref$negative,\n      _ref$inline = _ref.inline,\n      inline = _ref$inline === void 0 ? false : _ref$inline,\n      className = _ref.className,\n      _ref$dataTestAutoId = _ref.dataTestAutoId,\n      dataTestAutoId = _ref$dataTestAutoId === void 0 ? \"jkl-loader\" : _ref$dataTestAutoId;\n  var componentClassName = classNames(\"jkl-loader\", className, {\n    \"jkl-loader--negative\": negative,\n    \"jkl-loader--inline\": inline\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: componentClassName,\n    \"data-testid\": \"jkl-loader\",\n    \"data-testautoid\": dataTestAutoId,\n    title: textDescription,\n    \"aria-label\": textDescription,\n    role: \"alert\",\n    \"aria-busy\": \"true\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--left\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--middle\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--right\"\n  }));\n};\n\nexport { Loader };\n"],"sourceRoot":""}