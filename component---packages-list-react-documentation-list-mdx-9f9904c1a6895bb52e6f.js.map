{"version":3,"sources":["webpack:///../packages/list-react/src/List.tsx","webpack:///../packages/list-react/src/ListItem.tsx","webpack:///../packages/list-react/documentation/Example.tsx","webpack:///../packages/list-react/documentation/List.mdx"],"names":["makeListComponent","listType","props","children","className","componentClassName","concat","C","data-testid","UnorderedList","OrderedList","ListItem","Ordered","Unordered","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"wMASA,SAASA,EAAkBC,GACvB,OAAO,SAAcC,GAAc,IACvBC,EAAkCD,EAAlCC,SADuB,EACWD,EAAxBE,iBADa,MACD,QADC,EAEzBC,EAAqB,WAAWC,OAClCF,EAAY,IAAIA,EAAc,GACjB,YAAbH,EAAyB,qBAAuB,IAG9CM,EAAiB,YAAbN,EAAyB,KAAO,KAE1C,OACI,kBAACM,EAAD,CAAGC,cAAY,WAAWJ,UAAWC,GAChCF,IAMV,IAAMM,EAAgBT,EAAkB,aAClCU,EAAcV,EAAkB,WCtBhCW,EAAW,SAAC,GAAD,IAAGR,EAAH,EAAGA,SAAH,OAAyB,wBAAIC,UAAU,kBAAkBD,ICDpES,G,oBAAU,kBACnB,6BAASR,UAAU,4CACf,kBAACM,EAAD,CAAaN,UAAU,sBACnB,kBAAC,EAAD,sBACA,kBAAC,EAAD,qBAEI,kBAACM,EAAD,KACI,kBAAC,EAAD,wBACA,kBAAC,EAAD,oBAGR,kBAAC,EAAD,oBACA,kBAAC,EAAD,uBAKCG,EAAY,kBACrB,6BAAST,UAAU,4CACf,kBAACK,EAAD,CAAeL,UAAU,sBACrB,kBAAC,EAAD,cACA,kBAAC,EAAD,mBAEI,kBAACK,EAAD,KACI,kBAAC,EAAD,qBACA,kBAAC,EAAD,+IAMR,kBAAC,EAAD,oBACA,kBAAC,EAAD,sBAGJ,kBAACA,EAAD,CAAeL,UAAU,+BACrB,kBAAC,EAAD,iBACA,kBAAC,EAAD,mBAEI,kBAACK,EAAD,CAAeL,UAAU,YACrB,kBAAC,EAAD,qBACA,kBAAC,EAAD,uBAGR,kBAAC,EAAD,oBACA,kBAAC,EAAD,sBAEJ,kBAACK,EAAD,CAAeL,UAAU,gCACrB,kBAAC,EAAD,kBACA,kBAAC,EAAD,mBAEI,kBAACK,EAAD,CAAeL,UAAU,aACrB,kBAAC,EAAD,qBACA,kBAAC,EAAD,uBAGR,kBAAC,EAAD,oBACA,kBAAC,EAAD,sBAEJ,kBAACK,EAAD,CAAeL,UAAU,+BACrB,kBAAC,EAAD,iBACA,kBAAC,EAAD,mBAEI,kBAACK,EAAD,CAAeL,UAAU,YACrB,kBAAC,EAAD,qBACA,kBAAC,EAAD,uBAGR,kBAAC,EAAD,oBACA,kBAAC,EAAD,wB,qFCnEL,IAAMU,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGjB,E,oIACF,mBACD,OAAO,YAACc,EAAD,iBAAeD,EAAiBb,EAAhC,CAAuCiB,WAAYA,EAAYC,QAAQ,cAI5E,gNAA+L,kBAAIC,WAAW,KAAf,cAA/L,OAA6O,kBAAIA,WAAW,KAAf,eAA7O,KACA,2CACA,qHACA,YAAC,EAAD,CAASD,QAAQ,YACjB,4CACA,iTACA,YAAC,EAAD,CAAWA,QAAQ,cACnB,0CACA,oWAKJF,EAAWI,gBAAiB","file":"component---packages-list-react-documentation-list-mdx-9f9904c1a6895bb52e6f.js","sourcesContent":["import React, { ReactNode } from \"react\";\n\ninterface Props {\n    children: ReactNode;\n    className?: string;\n}\n\ntype validLists = \"unordered\" | \"ordered\";\n\nfunction makeListComponent(listType: validLists) {\n    return function List(props: Props) {\n        const { children, className = \"jkl-p\" } = props;\n        const componentClassName = \"jkl-list\".concat(\n            className ? ` ${className}` : \"\",\n            listType === \"ordered\" ? \" jkl-list--ordered\" : \"\",\n        );\n\n        const C = listType === \"ordered\" ? \"ol\" : \"ul\";\n\n        return (\n            <C data-testid=\"jkl-list\" className={componentClassName}>\n                {children}\n            </C>\n        );\n    };\n}\n\nexport const UnorderedList = makeListComponent(\"unordered\");\nexport const OrderedList = makeListComponent(\"ordered\");\n","import React, { ReactNode } from \"react\";\n\ninterface Props {\n    children: ReactNode;\n}\n\nexport const ListItem = ({ children }: Props) => <li className=\"jkl-list__item\">{children}</li>;\n","import React from \"react\";\nimport { UnorderedList, OrderedList, ListItem } from \"../src\";\nimport \"@fremtind/jkl-list/list.scss\";\nimport \"@fremtind/jkl-core/core.scss\";\n\nexport const Ordered = () => (\n    <section className=\"jkl-spacing--top-3 jkl-spacing--bottom-3\">\n        <OrderedList className=\"jkl-spacing--all-4\">\n            <ListItem>jkl-p ordered</ListItem>\n            <ListItem>\n                Hilda Robbins\n                <OrderedList>\n                    <ListItem>Mattie Lawrence</ListItem>\n                    <ListItem>Eric Huff</ListItem>\n                </OrderedList>\n            </ListItem>\n            <ListItem>Adam Norris</ListItem>\n            <ListItem>Essie Diaz</ListItem>\n        </OrderedList>\n    </section>\n);\n\nexport const Unordered = () => (\n    <section className=\"jkl-spacing--top-3 jkl-spacing--bottom-3\">\n        <UnorderedList className=\"jkl-spacing--all-4\">\n            <ListItem>jkl-p</ListItem>\n            <ListItem>\n                Linnie Gill\n                <UnorderedList>\n                    <ListItem>Grace Cortez</ListItem>\n                    <ListItem>\n                        Dette er en veldig lang setning som er veldig lang og repeterende for å sjekke hvordan wrapping\n                        funker. Sa jeg at setningen er lang?\n                    </ListItem>\n                </UnorderedList>\n            </ListItem>\n            <ListItem>Cory Wagner</ListItem>\n            <ListItem>Lora Carroll</ListItem>\n        </UnorderedList>\n\n        <UnorderedList className=\"jkl-lead jkl-spacing--all-4\">\n            <ListItem>jkl-lead</ListItem>\n            <ListItem>\n                Linnie Gill\n                <UnorderedList className=\"jkl-lead\">\n                    <ListItem>Grace Cortez</ListItem>\n                    <ListItem>Madge Hodges</ListItem>\n                </UnorderedList>\n            </ListItem>\n            <ListItem>Cory Wagner</ListItem>\n            <ListItem>Lora Carroll</ListItem>\n        </UnorderedList>\n        <UnorderedList className=\"jkl-small jkl-spacing--all-4\">\n            <ListItem>jkl-small</ListItem>\n            <ListItem>\n                Linnie Gill\n                <UnorderedList className=\"jkl-small\">\n                    <ListItem>Grace Cortez</ListItem>\n                    <ListItem>Madge Hodges</ListItem>\n                </UnorderedList>\n            </ListItem>\n            <ListItem>Cory Wagner</ListItem>\n            <ListItem>Lora Carroll</ListItem>\n        </UnorderedList>\n        <UnorderedList className=\"jkl-tiny jkl-spacing--all-4\">\n            <ListItem>jkl-tiny</ListItem>\n            <ListItem>\n                Linnie Gill\n                <UnorderedList className=\"jkl-tiny\">\n                    <ListItem>Grace Cortez</ListItem>\n                    <ListItem>Madge Hodges</ListItem>\n                </UnorderedList>\n            </ListItem>\n            <ListItem>Cory Wagner</ListItem>\n            <ListItem>Lora Carroll</ListItem>\n        </UnorderedList>\n    </section>\n);\n\nconst Example = () => (\n    <section className=\"jkl-spacing--top-3 jkl-spacing--bottom-3\">\n        <Ordered />\n        <Unordered />\n    </section>\n);\n\nexport default Example;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/ComponentLayout.tsx\";\nimport { Ordered, Unordered } from \"./Example\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Lister er strukturelementer. De gjør at vi kan utheve viktig informasjon for brukerne eller fortelle dem at de må gjøre noe i en bestemt rekkefølge. Det finnes to forskjellige lister: `}<em parentName=\"p\">{`nummererte`}</em>{` og `}<em parentName=\"p\">{`unummererte`}</em>{`.`}</p>\n    <h3>{`Nummererte lister`}</h3>\n    <p>{`Vi bruker nummererte lister når vi skal presentere instruksjoner, der rekkefølgen er viktig.`}</p>\n    <Ordered mdxType=\"Ordered\" />\n    <h3>{`Unummererte lister`}</h3>\n    <p>{`I unummererte lister bruker vi kulepunkter. Formålet med en slik liste er å organisere informasjonen og fremheve viktige opplysninger. Her er ikke rekkefølgen brukeren skal utføre noe i viktig, men vi må likevel passe på at vi presenterer det innholdet som er mest relevant først.`}</p>\n    <Unordered mdxType=\"Unordered\" />\n    <h3>{`Innrykk i lister`}</h3>\n    <p>{`Vi kan bruke innrykk under et enkelt listepunkt når det punktet har tilleggsinformasjon som vi må dele opp videre. Men bruk det sparsommelig. Før du bruker det, tenk nøye over om dette er et hovedpunkt som kan stå for seg selv, eller om det er informasjon som passer best som underpunkt. Selvstendige punkter skal ikke ha innrykk.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}