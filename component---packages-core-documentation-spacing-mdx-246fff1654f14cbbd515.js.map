{"version":3,"sources":["webpack:///../packages/core/documentation/Spacing/Spacing.tsx","webpack:///../packages/core/documentation/spacing.mdx"],"names":["componentSpacings","layoutSpacings","SpacingTableRow","cssProperty","spacing","ref","useRef","pxValue","parseInt","current","window","getComputedStyle","getPropertyValue","remValue","className","data-header","style","display","aria-label","backgroundColor","width","height","SpacingTable","values","map","value","idx","key","ComponentSpacingTable","LayoutSpacingTable","name","_frontmatter","Ingress","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"8TAQA,IAAMA,EAAuC,CACzC,yBACA,wBACA,2BACA,4BACA,2BACA,wBACA,yBACA,4BAGEC,EAAoC,CACtC,wBACA,yBACA,wBACA,qBACA,uBAKEC,EAAuD,SAAC,GAAgB,IAErDC,EACA,IAHuCC,EAAc,EAAdA,QACtDC,EAAMC,iBAAuB,MAQ7BC,EAAUC,UAPKL,EAOgB,aAN7BE,EAAII,QACJ,UAAOC,cAAP,iBAAO,EAAQC,iBAAiBN,EAAII,gBAApC,aAAO,EAAuCG,iBAAiBT,GAE5D,QAILU,EAAWN,EAAUA,EAFN,GAE+BA,EACpD,OACI,wBAAIO,UAAU,yCACV,wBAAIC,cAAY,WAAWD,UAAU,0CACjC,yBAAKA,UAAS,OAASV,EAAT,OAAwBY,MAAO,CAAEC,QAAS,QAAUZ,IAAKA,IACvE,yBACIa,aAAYd,EACZY,MAAO,CAAEG,gBAAiB,eAAgBC,MAAUP,EAAL,MAAoBQ,OAAWR,EAAL,UAGjF,wBAAIE,cAAY,YAAYD,UAAU,0CAClC,0BAAMA,UAAU,0BAAhB,IAA2CV,IAE/C,wBAAIW,cAAY,UAAUD,UAAU,0CAChC,0BAAMA,UAAU,0BAAhB,QAAkDV,EAAlD,mCAMVkB,EAAqD,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACvD,2BAAOT,UAAU,oCACb,+BACI,4BACI,wBAAIA,UAAU,4CAAd,WACA,wBAAIA,UAAU,4CAAd,YACA,wBAAIA,UAAU,4CAAd,YAGR,+BACKS,EAAOC,KAAI,SAACC,EAAOC,GAAR,OACR,kBAAC,EAAD,CAAiBC,IAAKD,EAAKtB,QAASqB,UAMvCG,EAAwB,kBAAM,kBAAC,EAAD,CAAcL,OAAQvB,KACpD6B,EAAqB,kBAAM,kBAAC,EAAD,CAAcN,OAAQtB,KCtEvD,IAEe6B,EAFTC,EAAe,GAOtBC,GALgBF,EAKQ,UALA,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,2EAC5B,kBAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,E,oIACF,mBACD,OAAO,YAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAI5E,YAACT,EAAD,CAASS,QAAQ,WAAjB,0FACA,8BACA,6QACA,qDAAoC,0BAAYC,WAAW,KAAvB,8CAApC,wGACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,wIAQL,iKAAgJ,0BAAYA,WAAW,KAAvB,OAAhJ,KAAqM,0BAAYA,WAAW,KAAvB,SAArM,KAA4P,0BAAYA,WAAW,KAAvB,UAA5P,OAAsT,0BAAYA,WAAW,KAAvB,QAAtT,cAAqX,0BAAYA,WAAW,KAAvB,OAArX,sCACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,mIAOL,mBAAK5B,UAAU,+BACf,wCACA,YAAC,EAAD,CAAuB2B,QAAQ,0BAC/B,qCACA,YAAC,EAAD,CAAoBA,QAAQ,wBAKhCF,EAAWI,gBAAiB","file":"component---packages-core-documentation-spacing-mdx-246fff1654f14cbbd515.js","sourcesContent":["import React, { useRef } from \"react\";\n\nimport \"./Spacing.scss\";\n\nfunction stringLiteralArray<T extends string>(a: T[]) {\n    return a;\n}\n\nconst componentSpacings = stringLiteralArray([\n    \"component-spacing--xxs\",\n    \"component-spacing--xs\",\n    \"component-spacing--small\",\n    \"component-spacing--medium\",\n    \"component-spacing--large\",\n    \"component-spacing--xl\",\n    \"component-spacing--xxl\",\n    \"component-spacing--giant\",\n]);\n\nconst layoutSpacings = stringLiteralArray([\n    \"layout-spacing--small\",\n    \"layout-spacing--medium\",\n    \"layout-spacing--large\",\n    \"layout-spacing--xl\",\n    \"layout-spacing--xxl\",\n]);\n\ntype spacingClass = typeof componentSpacings[number] | typeof layoutSpacings[number];\n\nconst SpacingTableRow: React.FC<{ spacing: spacingClass }> = ({ spacing }) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const getComputed = (cssProperty: string) => {\n        if (ref.current) {\n            return window?.getComputedStyle(ref.current)?.getPropertyValue(cssProperty);\n        }\n        return \"N/A\";\n    };\n    const baseFontSize = 16; // 1rem = 16px\n    const pxValue = parseInt(getComputed(\"margin-top\"));\n    const remValue = pxValue ? pxValue / baseFontSize : pxValue;\n    return (\n        <tr className=\"jkl-portal-spacing-example-table__row\">\n            <td data-header=\"Spacing:\" className=\"jkl-portal-spacing-example-table__data\">\n                <div className={`jkl-${spacing}-top`} style={{ display: \"none\" }} ref={ref} />\n                <div\n                    aria-label={spacing}\n                    style={{ backgroundColor: \"currentColor\", width: `${remValue}rem`, height: `${remValue}rem` }}\n                />\n            </td>\n            <td data-header=\"Variabel:\" className=\"jkl-portal-spacing-example-table__data\">\n                <code className=\"jkl-portal-inline-code\">${spacing}</code>\n            </td>\n            <td data-header=\"Klasse:\" className=\"jkl-portal-spacing-example-table__data\">\n                <code className=\"jkl-portal-inline-code\">{`.jkl-${spacing}-<top|right|bottom|left|all>`}</code>\n            </td>\n        </tr>\n    );\n};\n\nconst SpacingTable: React.FC<{ values: spacingClass[] }> = ({ values }) => (\n    <table className=\"jkl-portal-spacing-example-table\">\n        <thead>\n            <tr>\n                <th className=\"jkl-portal-spacing-example-table__header\">Spacing</th>\n                <th className=\"jkl-portal-spacing-example-table__header\">Variabel</th>\n                <th className=\"jkl-portal-spacing-example-table__header\">Klasse</th>\n            </tr>\n        </thead>\n        <tbody>\n            {values.map((value, idx) => (\n                <SpacingTableRow key={idx} spacing={value} />\n            ))}\n        </tbody>\n    </table>\n);\n\nexport const ComponentSpacingTable = () => <SpacingTable values={componentSpacings} />;\nexport const LayoutSpacingTable = () => <SpacingTable values={layoutSpacings} />;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport { ComponentSpacingTable, LayoutSpacingTable } from \"./Spacing/Spacing\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">Vi tilbyr Sass-variabler og utility-klasser for verdiene i spacing-skalaene til Jøkul.</Ingress>\n    <h2>{`Bruk`}</h2>\n    <p>{`Det er to spacing-skalaer i Jøkul; en til bruk innad i komponenter og en til bruk i layout og flyt. Du kan bruke skalaene ved hjelp av Sass-variabler du kan sette inn i ditt eget stilark, eller bruke hjelpeklassene direkte på elementer i koden.`}</p>\n    <p>{`Variablene importerer du fra `}<inlineCode parentName=\"p\">{`@fremtind/jkl-core/variables/_spacing.scss`}</inlineCode>{`. Husk å bruke riktig importsyntaks for byggverktøyet ditt når du importerer. De kan da brukes slik:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@import \"~@fremtind/jkl-core/variables/_spacing.scss\";\n\n.jkl-your-component {\n    padding-left: $component-spacing--medium;\n}\n`}</code></pre>\n    <p>{`Utility-klassene setter en verdi fra spacingskalaene som margin på elementet som har klassen. Det finnes varianter for å sette margin på `}<inlineCode parentName=\"p\">{`top`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`right`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`bottom`}</inlineCode>{` og `}<inlineCode parentName=\"p\">{`left`}</inlineCode>{`, samt for `}<inlineCode parentName=\"p\">{`all`}</inlineCode>{`e sider. Klassene kan brukes slik:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"jkl-layout-spacing--xl-all\">\n    <span class=\"jkl-layout-spacing--small-right\">Hallo</span>\n    verden\n</div>\n`}</code></pre>\n    <div className=\"jkl-layout-spacing--xl-top\" />\n    <h3>{`Komponentskala`}</h3>\n    <ComponentSpacingTable mdxType=\"ComponentSpacingTable\" />\n    <h3>{`Layoutskala`}</h3>\n    <LayoutSpacingTable mdxType=\"LayoutSpacingTable\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}