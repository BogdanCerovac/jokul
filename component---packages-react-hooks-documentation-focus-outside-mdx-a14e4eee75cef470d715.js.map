{"version":3,"sources":["webpack:///../packages/react-hooks/documentation/FocusOutsideExample.tsx","webpack:///../packages/react-hooks/documentation/focusOutside.mdx","webpack:///../packages/react-hooks/src/useFocusOutside.ts"],"names":["FocusOutsideExample","useState","focusCounter","setFocusCounter","isEnabled","setIsEnabled","ref","useRef","useFocusOutside","className","onClick","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","isMDXComponent","fn","handleFocusOutside","event","current","contains","target","React","useEffect","document","addEventListener","removeEventListener"],"mappings":"mQAGe,SAASA,IAAsB,MACFC,mBAAS,GAA1CC,EADmC,KACrBC,EADqB,OAERF,oBAAS,GAApCG,EAFmC,KAExBC,EAFwB,KAGpCC,EAAMC,iBAAO,MAUnB,OANAC,YAAgBF,GAAK,WACbF,GACAD,EAAgBD,EAAe,MAKnC,iCACI,uBAAGO,UAAU,kCAAb,gHAIA,yBAAKH,IAAKA,EAAKG,UAAU,2DAAzB,yBAC0B,gCAASP,GAC/B,6BACA,4BAAQO,UAAU,wDAAwDC,QAjBhE,kBAAML,GAAcD,KAkBzBA,EAAY,YAAc,WAE/B,4BAAQK,UAAU,kCAAkCC,QArBtC,kBAAMP,EAAgB,KAqBpC,qBAIJ,4BAAQM,UAAU,uDAAlB,mBCzBL,IAAME,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAmBN,EAAc,oBACjCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,YAACP,EAAD,CAASO,QAAQ,WAAjB,yJAIA,YAACN,EAAD,CAAkBO,UAAWzB,EAAqBwB,QAAQ,sBAK9DF,EAAWI,gBAAiB,G,kCCrC5B,2DAEO,SAASlB,EAAgBF,EAAoCqB,GAChE,SAASC,EAAmBC,GACpBvB,GAAOA,EAAIwB,UAAYxB,EAAIwB,QAAQC,SAASF,EAAMG,SAClDL,IAIRM,IAAMC,WAAU,WAIZ,OAHI5B,GACA6B,UAAYA,SAASC,iBAAiB,UAAWR,GAE9C,WACCtB,GACA6B,UAAYA,SAASE,oBAAoB,UAAWT","file":"component---packages-react-hooks-documentation-focus-outside-mdx-a14e4eee75cef470d715.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useFocusOutside } from \"../src/useFocusOutside\";\n\nexport default function FocusOutsideExample() {\n    const [focusCounter, setFocusCounter] = useState(0);\n    const [isEnabled, setIsEnabled] = useState(false);\n    const ref = useRef(null);\n    const resetFocusCounter = () => setFocusCounter(0);\n    const toggleEnabled = () => setIsEnabled(!isEnabled);\n\n    useFocusOutside(ref, () => {\n        if (isEnabled) {\n            setFocusCounter(focusCounter + 1);\n        }\n    });\n\n    return (\n        <section>\n            <p className=\"jkl-body jkl-spacing--bottom-1\">\n                Fokuser på et element utenfor kortet for å øke telleren. Når du flytter fokus tilbake vil ikke telleren\n                øke.\n            </p>\n            <div ref={ref} className=\"jkl-card focus-outside-example__card jkl-spacing--top-1\">\n                Antall fokus utenfor: <strong>{focusCounter}</strong>\n                <br />\n                <button className=\"jkl-button jkl-button--secondary jkl-spacing--right-1\" onClick={toggleEnabled}>\n                    {isEnabled ? \"Deaktiver\" : \"Aktiver\"}\n                </button>\n                <button className=\"jkl-button jkl-button--tertiary\" onClick={resetFocusCounter}>\n                    Nullstill teller\n                </button>\n            </div>\n            <button className=\"jkl-button jkl-button--secondary jkl-spacing--top-2\">Utenfor kortet</button>\n        </section>\n    );\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport FocusOutsideExample from \"./FocusOutsideExample\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    useFocusOutside lar deg lytte etter elementfokus utenfor et gitt element, for eksempel når du tabber ut av en\n    datovelger, og utføre en gitt handling.\n    </Ingress>\n    <ComponentExample component={FocusOutsideExample} mdxType=\"ComponentExample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React, { RefObject } from \"react\";\n\nexport function useFocusOutside(ref: RefObject<HTMLElement> | null, fn: () => void) {\n    function handleFocusOutside(event: FocusEvent) {\n        if (ref && ref.current && !ref.current.contains(event.target as Node)) {\n            fn();\n        }\n    }\n\n    React.useEffect(() => {\n        if (ref) {\n            document && document.addEventListener(\"focusin\", handleFocusOutside);\n        }\n        return () => {\n            if (ref) {\n                document && document.removeEventListener(\"focusin\", handleFocusOutside);\n            }\n        };\n    });\n}\n"],"sourceRoot":""}