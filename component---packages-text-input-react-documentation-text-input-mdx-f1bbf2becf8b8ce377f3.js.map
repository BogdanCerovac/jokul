{"version":3,"sources":["webpack:///../packages/text-input-react/src/BaseInputField.tsx","webpack:///../packages/text-input-react/src/TextField.tsx","webpack:///../packages/text-input-react/src/TextArea.tsx","webpack:///../packages/text-input-react/src/Icons/IconSearch.tsx","webpack:///../packages/text-input-react/src/Icons/IconClear.tsx","webpack:///../packages/text-input-react/src/ActionIcon.tsx","webpack:///../packages/text-input-react/src/ActionTextField.tsx","webpack:///../packages/text-input-react/src/InlineTextField.tsx","webpack:///../packages/select-react/build/browser/index.js","webpack:///../packages/text-input-react/documentation/Example.tsx","webpack:///../packages/text-input-react/documentation/TextInput.mdx"],"names":["BaseInputField","maxLength","width","invalid","ariaDescribedby","rest","style","getWidthAsStyle","data-testid","className","aria-describedby","aria-invalid","TextField","helpLabel","errorLabel","label","variant","forceCompact","componentClassName","classNames","TextArea","id","rows","placeholder","autoExpand","restProps","useState","textAreaFocused","setTextAreaFocused","textAreaRef","useRef","textAreaContentRows","value","split","length","textAreaRows","useEffect","textAreaElement","current","height","overflowY","calculateAndSetElementHeight","rowToCalculateHeightFrom","onFocus","e","onBlur","ref","lineHeightWithPx","window","getComputedStyle","lineHeight","parseInt","replace","IconSearch","viewBox","fill","xmlns","cx","cy","r","stroke","strokeWidth","d","IconClear","ActionIcon","action","actionType","getIcon","ActionTextField","baseInputProps","type","onClick","aria-label","title","icon","InlineTextField","srOnly","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","_iterableToArrayLimit","TypeError","_nonIterableRest","handleMoveTo","direction","_ref","event","list","currentFocus","preventDefault","thisLI","parentElement","prevLI","previousElementSibling","prevItem","querySelector","focus","nextLI","nextElementSibling","nextItem","firstItem","listItems","querySelectorAll","moveFocusTo","handleListKeyNav","_ref2","search","searchResetTimer","moveFunction","arguments","key","target","moveDetails","searchResult","findItem","_ref3","keys","concat","timer","clearTimeout","setTimeout","resetWhenIdle","n","innerText","toLowerCase","indexOf","classnames","fn","module","exports","createCommonjsModule","hasOwn","hasOwnProperty","classes","arg","argType","inner","apply","join","default","named","toLower","str","Select","items","onChange","_ref$inline","inline","_ref$defaultPrompt","defaultPrompt","_useState2","initialInputValue","selectedValue","setSelectedValue","hasSelectedValue","getLabelFromValue","matchingItem","map","getValuePair","filter","item","_useState4","displayedValue","setDisplayedValue","_useState6","dropdownIsShown","setShown","listId","nanoid","listRef","typeAheadIsEnabled","addEventListener","removeEventListener","useListNavigation","elementRef","useAnimatedHeight","React","createElement","Label","CoreToggle","role","popup","hidden","onToggle","listElement","listEl","selected","focusedItem","focusSelected","onToggleSelect","button","detail","nextValue","textContent","tabIndex","SupportLabel","Example","setValue","darkMode","setDarkMode","hasError","setHasError","isCompact","setIsCompact","setVariant","handleChange","pressed","inverted","val","console","log","readOnly","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---packages-text-input-react-documentation-text-input-mdx-f1bbf2becf8b8ce377f3.js","sourcesContent":["import React, { FocusEventHandler, ChangeEventHandler, CSSProperties } from \"react\";\nimport { LabelVariant } from \"@fremtind/jkl-core\";\n\nexport interface BaseInputProps {\n    onChange?: ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n    onBlur?: FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n    onFocus?: FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n    value?: string;\n    className?: string;\n    id?: string;\n    required?: boolean;\n    placeholder?: string;\n    variant?: LabelVariant;\n    forceCompact?: boolean;\n    readOnly?: boolean;\n    maxLength?: number;\n    width?: string;\n    autoComplete?: string;\n}\n\ninterface Props extends BaseInputProps {\n    type?: \"text\" | \"number\" | \"tel\" | \"password\" | \"email\" | \"year\";\n    invalid?: boolean;\n    ariaDescribedby?: string;\n}\n\nfunction getWidthAsStyle(width?: string, maxLength?: number): CSSProperties | undefined {\n    if (width) {\n        return { width }; // prioritize width prop\n    }\n\n    if (maxLength && maxLength < 15) {\n        return { width: `${maxLength + 3}ch` }; // else use maxLength if not large\n    }\n\n    return undefined;\n}\n\nexport const BaseInputField = ({ maxLength, width, invalid, ariaDescribedby, ...rest }: Props) => {\n    const style = getWidthAsStyle(width, maxLength);\n\n    return (\n        <input\n            data-testid=\"jkl-text-field__input\"\n            className=\"jkl-text-field__input\"\n            maxLength={maxLength}\n            style={style}\n            aria-describedby={ariaDescribedby}\n            aria-invalid={invalid}\n            {...rest}\n        />\n    );\n};\n","import React from \"react\";\nimport { Label, SupportLabel } from \"@fremtind/jkl-typography-react\";\nimport { BaseInputField, BaseInputProps } from \"./BaseInputField\";\nimport classNames from \"classnames\";\n\ninterface Props extends BaseInputProps {\n    label: string;\n    helpLabel?: string;\n    errorLabel?: string;\n    type?: \"text\" | \"number\" | \"tel\" | \"password\" | \"email\" | \"year\";\n}\n\nexport const TextField = ({ helpLabel, errorLabel, label, className, variant, forceCompact, ...rest }: Props) => {\n    const componentClassName = classNames(\"jkl-text-field\", className, {\n        \"jkl-text-field--compact\": forceCompact,\n    });\n\n    return (\n        <label data-testid=\"jkl-text-field\" className={componentClassName}>\n            <Label variant={variant} forceCompact={forceCompact}>\n                {label}\n            </Label>\n            <BaseInputField invalid={!!errorLabel} {...rest} />\n            <SupportLabel helpLabel={helpLabel} errorLabel={errorLabel} forceCompact={forceCompact} />\n        </label>\n    );\n};\n","import React, { FocusEvent, useEffect, useRef, useState } from \"react\";\nimport { Label, SupportLabel } from \"@fremtind/jkl-typography-react\";\nimport { BaseInputProps } from \"./BaseInputField\";\nimport classNames from \"classnames\";\n\ninterface Props extends BaseInputProps {\n    label: string;\n    onBlur?: (value: FocusEvent<HTMLTextAreaElement>) => void;\n    rows?: number;\n    helpLabel?: string;\n    errorLabel?: string;\n    autoExpand?: boolean;\n}\n\nexport const TextArea = ({\n    id,\n    variant,\n    label,\n    className,\n    helpLabel,\n    errorLabel,\n    rows = 7,\n    placeholder = \" \",\n    autoExpand = false,\n    forceCompact,\n    ...restProps\n}: Props) => {\n    const componentClassName = classNames(\"jkl-text-field jkl-text-area\", className, {\n        \"jkl-text-field--compact\": forceCompact,\n    });\n\n    const [textAreaFocused, setTextAreaFocused] = useState(false);\n    const textAreaRef = useRef<HTMLTextAreaElement>(null);\n    const textAreaContentRows = (restProps.value || \"\").split(\"\\n\").length;\n\n    let textAreaRows: number = textAreaContentRows;\n\n    if (textAreaFocused && rows > textAreaContentRows) {\n        textAreaRows = rows;\n    }\n\n    useEffect(() => {\n        const textAreaElement = textAreaRef.current;\n        if (autoExpand && textAreaElement && !textAreaElement.style.height) {\n            textAreaElement.style.overflowY = \"hidden\";\n            calculateAndSetElementHeight(textAreaRows, textAreaElement);\n        }\n    }, []);\n\n    useEffect(() => {\n        const textAreaElement = textAreaRef.current;\n        let rowToCalculateHeightFrom = textAreaRows;\n\n        if (textAreaFocused) {\n            // While the text-area has focus we keep the height 1 row higher than the actual row count.\n            // If we don't do this it creates a weird scrolling effect that while we are transitioning from\n            // one height to the next height.\n            rowToCalculateHeightFrom += 1;\n        } else if (restProps.value && rowToCalculateHeightFrom < rows) {\n            rowToCalculateHeightFrom = rows;\n        }\n\n        if (autoExpand && textAreaElement) {\n            calculateAndSetElementHeight(rowToCalculateHeightFrom, textAreaElement);\n        }\n    }, [textAreaRows, textAreaFocused]);\n\n    return (\n        <label data-testid=\"jkl-text-field\" className={componentClassName}>\n            <Label variant={variant} forceCompact={forceCompact}>\n                {label}\n            </Label>\n            <textarea\n                onFocus={onFocus}\n                onBlur={onBlur}\n                ref={textAreaRef}\n                aria-invalid={!!errorLabel}\n                className={`jkl-text-field__input jkl-text-field__input--${rows}-rows`}\n                id={id}\n                rows={textAreaRows}\n                placeholder={placeholder}\n                {...restProps}\n            />\n            <SupportLabel helpLabel={helpLabel} errorLabel={errorLabel} forceCompact={forceCompact} />\n        </label>\n    );\n\n    function onFocus(e: FocusEvent<HTMLTextAreaElement>) {\n        setTextAreaFocused(true);\n        restProps.onFocus && restProps.onFocus(e);\n    }\n\n    function onBlur(e: FocusEvent<HTMLTextAreaElement>) {\n        setTextAreaFocused(false);\n        restProps.onBlur && restProps.onBlur(e);\n    }\n};\n\nfunction calculateAndSetElementHeight(rows: number, textAreaElement: HTMLTextAreaElement) {\n    const lineHeightWithPx = window.getComputedStyle(textAreaElement).lineHeight;\n    const lineHeight = parseInt(lineHeightWithPx.replace(\"px\", \"\"));\n    textAreaElement.style.height = `${rows * lineHeight + 8}px`;\n}\n","import React from \"react\";\n\nexport const IconSearch = () => (\n    <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"9.5\" cy=\"9.5\" r=\"8.5\" stroke=\"currentColor\" strokeWidth=\"1.5\" />\n        <path d=\"M23 23L15 15\" stroke=\"currentColor\" strokeWidth=\"1.5\" />\n    </svg>\n);\n","import React from \"react\";\n\nexport const IconClear = () => (\n    <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M3 21L21 3\" stroke=\"currentColor\" strokeWidth=\"1.5\" />\n        <path d=\"M3 3L21 21\" stroke=\"currentColor\" strokeWidth=\"1.5\" />\n    </svg>\n);\n","import React from \"react\";\nimport { IconSearch } from \"./Icons/IconSearch\";\nimport { IconClear } from \"./Icons/IconClear\";\n\ninterface Props {\n    action: IconVariant;\n    className: string;\n}\n\nfunction getIcon(actionType: IconVariant) {\n    switch (actionType) {\n        case \"clear\":\n            return <IconClear />;\n        case \"search\":\n            return <IconSearch />;\n        default:\n            return null;\n    }\n}\n\nexport const ActionIcon = ({ action, className }: Props) => {\n    return (\n        <span data-testid=\"jkl-action-icon\" className={className}>\n            {getIcon(action)}\n        </span>\n    );\n};\n\nexport type IconVariant = \"clear\" | \"search\";\n","import React, { MouseEventHandler } from \"react\";\nimport { ActionIcon, IconVariant } from \"./ActionIcon\";\nimport { Label, SupportLabel } from \"@fremtind/jkl-typography-react\";\nimport { BaseInputField, BaseInputProps } from \"./BaseInputField\";\nimport classNames from \"classnames\";\n\ninterface Props extends BaseInputProps {\n    action: {\n        icon: IconVariant;\n        label: string;\n        onClick: MouseEventHandler<HTMLButtonElement>;\n    };\n    label: string;\n    helpLabel?: string;\n    errorLabel?: string;\n    type?: \"text\" | \"number\" | \"tel\" | \"password\" | \"email\" | \"year\";\n}\n\nexport const ActionTextField = ({\n    action,\n    forceCompact,\n    className,\n    helpLabel,\n    errorLabel,\n    variant,\n    label,\n    ...baseInputProps\n}: Props) => {\n    const componentClassName = classNames(\"jkl-text-field jkl-text-field--action\", className, {\n        \"jkl-text-field--compact\": forceCompact,\n    });\n\n    return (\n        <label data-testid=\"jkl-text-field\" className={componentClassName}>\n            <Label variant={variant} forceCompact={forceCompact}>\n                {label}\n            </Label>\n            <div className=\"jkl-text-field__input-wrapper\">\n                <BaseInputField invalid={!!errorLabel} {...baseInputProps} />\n                <button\n                    type=\"button\"\n                    className=\"jkl-text-field__action-button\"\n                    onClick={action.onClick}\n                    aria-label={action.label}\n                    title={action.label}\n                >\n                    <ActionIcon className=\"jkl-text-field__action-icon\" action={action.icon} />\n                </button>\n            </div>\n            <SupportLabel helpLabel={helpLabel} errorLabel={errorLabel} forceCompact={forceCompact} />\n        </label>\n    );\n};\n","import React from \"react\";\nimport { Label } from \"@fremtind/jkl-typography-react\";\nimport { BaseInputField, BaseInputProps } from \"./BaseInputField\";\nimport classNames from \"classnames\";\n\ninterface Props extends BaseInputProps {\n    label: string;\n    invalid?: boolean;\n    type?: \"text\" | \"number\" | \"tel\" | \"password\" | \"email\" | \"year\";\n}\n\nexport const InlineTextField = ({ label, className, variant, forceCompact, ...rest }: Props) => {\n    const componentClassName = classNames(\"jkl-text-field jkl-text-field--inline\", className, {\n        \"jkl-text-field--compact\": forceCompact,\n    });\n\n    return (\n        <label data-testid=\"jkl-text-field\" className={componentClassName}>\n            <Label srOnly variant={variant} forceCompact={forceCompact}>\n                {label}\n            </Label>\n            <BaseInputField {...rest} />\n        </label>\n    );\n};\n","import CoreToggle from '@nrk/core-toggle/jsx';\nimport React, { useRef, useEffect, useState } from 'react';\nimport nanoid from 'nanoid';\nimport { Label, SupportLabel } from '@fremtind/jkl-typography-react';\nimport { getValuePair } from '@fremtind/jkl-core';\nimport { useAnimatedHeight } from '@fremtind/jkl-react-hooks';\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction useListNavigation() {\n  var typeAheadIsEnabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var listRef = useRef(null);\n  var search;\n  var searchResetTimer;\n\n  if (typeAheadIsEnabled) {\n    search = {\n      keys: \"\"\n    }; // keypress buffer is object to preserve state\n  }\n\n  useEffect(function () {\n    var list = listRef.current;\n\n    if (list) {\n      list.addEventListener(\"keydown\", function (event) {\n        return handleListKeyNav({\n          list: list,\n          event: event,\n          search: search,\n          searchResetTimer: searchResetTimer\n        });\n      });\n    }\n\n    return function () {\n      if (list) {\n        list.removeEventListener(\"keydown\", function (event) {\n          return handleListKeyNav({\n            list: list,\n            event: event,\n            search: search,\n            searchResetTimer: searchResetTimer\n          });\n        });\n      }\n    };\n  }, []);\n  return listRef;\n}\n\nfunction handleMoveTo(direction, _ref) {\n  var event = _ref.event,\n      list = _ref.list,\n      currentFocus = _ref.currentFocus;\n  event.preventDefault();\n  moveFocusTo(direction, list, currentFocus);\n}\n\nfunction handleListKeyNav(_ref2) {\n  var list = _ref2.list,\n      event = _ref2.event,\n      search = _ref2.search,\n      searchResetTimer = _ref2.searchResetTimer;\n  var moveFunction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : handleMoveTo;\n  var key = event.key,\n      target = event.target;\n  var currentFocus = target;\n  var moveDetails = {\n    event: event,\n    list: list,\n    currentFocus: currentFocus\n  };\n\n  switch (key) {\n    case \"ArrowUp\" :\n      moveFunction(\"prev\", moveDetails);\n      break;\n\n    case \"ArrowDown\" :\n      moveFunction(\"next\", moveDetails);\n      break;\n\n    case \"Home\":\n      moveFunction(\"first\", moveDetails);\n      break;\n\n    case \"End\":\n      moveFunction(\"last\", moveDetails);\n      break;\n\n    case \"Tab\":\n      // in a standard select, tab does nothing in-menu\n      event.preventDefault();\n      break;\n\n    case \"Enter\" :\n      break;\n\n    default:\n      if (search !== undefined) {\n        var searchResult = findItem({\n          list: list,\n          key: key,\n          search: search,\n          searchResetTimer: searchResetTimer\n        });\n\n        if (searchResult) {\n          searchResult.focus();\n        }\n      }\n\n      break;\n  }\n}\n\nfunction moveFocusTo(direction, list, current) {\n  var thisLI = current.parentElement;\n\n  switch (direction) {\n    case \"prev\":\n      var prevLI = thisLI && thisLI.previousElementSibling;\n\n      if (prevLI) {\n        var prevItem = prevLI.querySelector(\"[role=\\\"option\\\"]\");\n\n        if (prevItem) {\n          prevItem.focus();\n        }\n      }\n\n      break;\n\n    case \"next\":\n      var nextLI = thisLI && thisLI.nextElementSibling;\n\n      if (nextLI) {\n        var nextItem = nextLI.querySelector(\"[role=\\\"option\\\"]\");\n\n        if (nextItem) {\n          nextItem.focus();\n        }\n      }\n\n      break;\n\n    case \"first\":\n      var firstItem = list.querySelector(\"[role=\\\"option\\\"]\");\n\n      if (firstItem) {\n        firstItem.focus();\n      }\n\n      break;\n\n    case \"last\":\n      var listItems = list.querySelectorAll(\"[role=\\\"option\\\"]\");\n\n      if (listItems.length) {\n        listItems[listItems.length - 1].focus();\n      }\n\n      break;\n  }\n}\n\nfunction findItem(_ref3) {\n  var list = _ref3.list,\n      key = _ref3.key,\n      search = _ref3.search,\n      searchResetTimer = _ref3.searchResetTimer;\n  var listItems = list.querySelectorAll(\"[role=\\\"option\\\"]\");\n  if (!listItems.length) return null;\n\n  if (search) {\n    search.keys = search.keys.concat(key);\n    resetWhenIdle(search, searchResetTimer);\n\n    for (var n = 0; n < listItems.length; n++) {\n      var label = listItems[n].innerText;\n\n      if (label && label.toLowerCase().indexOf(search.keys) === 0) {\n        return listItems[n];\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction resetWhenIdle(search, timer) {\n  if (timer) {\n    clearTimeout(timer);\n    timer = undefined;\n  }\n\n  timer = setTimeout(function () {\n    search ? search.keys = \"\" : search = {\n      keys: \"\"\n    };\n    timer = undefined;\n  }, 500, search, timer);\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar classnames = createCommonjsModule(function (module) {\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif ( module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n});\nvar classnames_1 = classnames.named;\n\nfunction toLower() {\n  var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return str.toLowerCase().replace(/[\\W_]+/g, \"\"); // strip all non-alphanumeric chars\n}\n\nfunction focusSelected(listEl, listId, selected) {\n  var focusedItem;\n\n  if (selected !== undefined) {\n    // move focus to selected option\n    focusedItem = listEl.querySelector(\"#\".concat(listId, \"__\").concat(toLower(selected)));\n  } else {\n    // move focus to first option\n    focusedItem = listEl.querySelector('[role=\"option\"]');\n  }\n\n  focusedItem && focusedItem.focus();\n}\n\nfunction Select(_ref) {\n  var items = _ref.items,\n      value = _ref.value,\n      label = _ref.label,\n      onChange = _ref.onChange,\n      className = _ref.className,\n      helpLabel = _ref.helpLabel,\n      errorLabel = _ref.errorLabel,\n      _ref$inline = _ref.inline,\n      inline = _ref$inline === void 0 ? false : _ref$inline,\n      _ref$defaultPrompt = _ref.defaultPrompt,\n      defaultPrompt = _ref$defaultPrompt === void 0 ? \"Velg\" : _ref$defaultPrompt,\n      variant = _ref.variant,\n      forceCompact = _ref.forceCompact,\n      initialInputValue = _ref.initialInputValue;\n\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var hasSelectedValue = typeof selectedValue !== \"undefined\" && selectedValue !== \"\";\n\n  function getLabelFromValue(value) {\n    var matchingItem = items.map(getValuePair).filter(function (item) {\n      return item.value === value;\n    })[0];\n    return matchingItem && matchingItem.label;\n  }\n\n  var _useState3 = useState(getLabelFromValue(value)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayedValue = _useState4[0],\n      setDisplayedValue = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dropdownIsShown = _useState6[0],\n      setShown = _useState6[1];\n\n  var _useState7 = useState(\"dropdown\".concat(nanoid(16))),\n      _useState8 = _slicedToArray(_useState7, 1),\n      listId = _useState8[0];\n\n  var listRef = useListNavigation();\n  var componentClassName = classnames(\"jkl-select\", className, {\n    \"jkl-select--inline\": inline,\n    \"jkl-select--compact\": forceCompact,\n    \"jkl-select--open\": dropdownIsShown,\n    \"jkl-select--no-value\": !hasSelectedValue,\n    \"jkl-select--invalid\": !!errorLabel\n  });\n\n  if (initialInputValue && process.env.NODE_ENV !== \"production\") {\n    console.warn(\"Warning!: The 'initialInputValue' prop on the Select component is deprecated and does nothing. Use the 'value' prop instead.\");\n  }\n\n  function onToggle() {\n    var listElement = listRef.current;\n\n    if (listElement && !dropdownIsShown) {\n      focusSelected(listElement, listId, selectedValue);\n    }\n\n    setShown(!dropdownIsShown);\n  }\n\n  function onToggleSelect(e) {\n    e.target.hidden = true;\n    e.target.button.focus();\n    e.target.value = e.detail;\n    var nextValue = e.detail.value;\n    setDisplayedValue(e.detail.textContent);\n    setSelectedValue(nextValue);\n    onChange && onChange(nextValue);\n  }\n\n  useEffect(function () {\n    setSelectedValue(value);\n    setDisplayedValue(getLabelFromValue(value));\n  }, [value, items]);\n\n  var _useAnimatedHeight = useAnimatedHeight(dropdownIsShown),\n      _useAnimatedHeight2 = _slicedToArray(_useAnimatedHeight, 1),\n      elementRef = _useAnimatedHeight2[0];\n\n  return React.createElement(\"div\", {\n    \"data-testid\": \"jkl-select\",\n    className: componentClassName\n  }, React.createElement(Label, {\n    variant: variant,\n    forceCompact: forceCompact\n  }, label), React.createElement(\"div\", {\n    className: \"jkl-select__outer-wrapper\"\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"jkl-select__value\",\n    \"data-testid\": \"jkl-select__value\",\n    \"aria-haspopup\": \"listbox\"\n  }, hasSelectedValue ? displayedValue : defaultPrompt), React.createElement(CoreToggle, {\n    id: listId,\n    ref: elementRef,\n    role: \"listbox\",\n    className: \"jkl-select__toggler\",\n    popup: label,\n    hidden: !dropdownIsShown,\n    onToggle: onToggle,\n    onToggleSelect: onToggleSelect,\n    \"aria-activedescendant\": hasSelectedValue && \"\".concat(listId, \"__\").concat(toLower(selectedValue))\n  }, React.createElement(\"ul\", {\n    className: \"jkl-select__option-wrapper\",\n    \"data-testid\": \"jkl-select__option-wrapper\",\n    tabIndex: -1,\n    ref: listRef\n  }, items.map(getValuePair).map(function (item) {\n    return React.createElement(\"li\", {\n      key: item.value\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      id: \"\".concat(listId, \"__\").concat(toLower(item.value)),\n      className: \"jkl-select__option\",\n      \"data-testid\": \"jkl-select__option\",\n      \"aria-selected\": item.value === selectedValue,\n      role: \"option\",\n      value: item.value\n    }, item.label));\n  }))), React.createElement(\"span\", {\n    className: \"jkl-select__chevron\"\n  })), React.createElement(SupportLabel, {\n    helpLabel: helpLabel,\n    errorLabel: errorLabel,\n    forceCompact: forceCompact\n  }));\n}\n\n/* eslint \"jsx-a11y/no-onchange\": 0 */\nfunction NativeSelect(_ref) {\n  var label = _ref.label,\n      items = _ref.items,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? \"\" : _ref$className,\n      onChange = _ref.onChange,\n      _ref$inline = _ref.inline,\n      inline = _ref$inline === void 0 ? false : _ref$inline,\n      helpLabel = _ref.helpLabel,\n      errorLabel = _ref.errorLabel,\n      variant = _ref.variant,\n      placeholder = _ref.placeholder,\n      value = _ref.value,\n      forceCompact = _ref.forceCompact;\n\n  // If no value is given, set it to first item, or to empty string if there is a placeholder\n  if (!value) {\n    if (!placeholder && items.length) {\n      value = getValuePair(items[0]).value;\n    }\n  }\n\n  var componentClassName = classnames(\"jkl-select\", className, {\n    \"jkl-select--inline\": inline,\n    \"jkl-select--compact\": forceCompact,\n    \"jkl-select--invalid\": !!errorLabel\n  });\n  var defaultValue = value ? undefined : \"\";\n  return React.createElement(\"label\", {\n    \"data-testid\": \"jkl-select\",\n    className: componentClassName\n  }, React.createElement(Label, {\n    variant: variant,\n    forceCompact: forceCompact\n  }, label), React.createElement(\"select\", {\n    value: value,\n    defaultValue: defaultValue,\n    className: \"jkl-select__value\",\n    onBlur: onChange,\n    onChange: onChange\n  }, placeholder && !value && React.createElement(\"option\", {\n    disabled: true,\n    value: \"\"\n  }, placeholder), items.map(getValuePair).map(function (item) {\n    return React.createElement(\"option\", {\n      \"data-testid\": \"jkl-select__option\",\n      key: item.value,\n      value: item.value\n    }, item.label);\n  })), React.createElement(\"span\", {\n    className: \"jkl-select__chevron\"\n  }), React.createElement(SupportLabel, {\n    helpLabel: helpLabel,\n    errorLabel: errorLabel,\n    forceCompact: forceCompact\n  }));\n}\n\nexport { NativeSelect, Select };\n","import React, { ChangeEvent, useState } from \"react\";\nimport { TextArea, TextField, ActionTextField, InlineTextField } from \"../src\";\nimport { ToggleSwitch } from \"@fremtind/jkl-toggle-switch-react\";\nimport { Select } from \"@fremtind/jkl-select-react\";\nimport { LabelVariant } from \"@fremtind/jkl-core\";\nimport \"@fremtind/jkl-core/core.min.css\";\nimport \"@fremtind/jkl-text-input/text-input.min.css\";\nimport \"./index.scss\";\n\nconst Example = () => {\n    const [value, setValue] = useState(\"\");\n    const [darkMode, setDarkMode] = useState(false);\n    const [hasError, setHasError] = useState(false);\n    const [isCompact, setIsCompact] = useState(false);\n    const [variant, setVariant] = useState<LabelVariant | undefined>(\"medium\");\n    const typecheckAndSetVariant = (val: string) => {\n        if (val === \"large\" || val === \"medium\" || val === \"small\") {\n            setVariant(val);\n        } else {\n            setVariant(undefined);\n        }\n    };\n    function handleChange(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        setValue(event.target.value);\n    }\n\n    return (\n        <section className={\"example-page \" + (!darkMode ? \"example-page--light-mode\" : \"example-page--dark-mode\")}>\n            <fieldset className=\"example-page__controls\">\n                <ToggleSwitch\n                    className={\"toggle-switch\"}\n                    pressed={darkMode}\n                    inverted={darkMode}\n                    onClick={() => setDarkMode(!darkMode)}\n                >\n                    Dark Mode\n                </ToggleSwitch>\n                <ToggleSwitch\n                    className={\"toggle-switch\"}\n                    pressed={hasError}\n                    inverted={darkMode}\n                    onClick={() => setHasError(!hasError)}\n                >\n                    Vis feilmelding\n                </ToggleSwitch>\n                <ToggleSwitch\n                    className={\"toggle-switch\"}\n                    pressed={isCompact}\n                    inverted={darkMode}\n                    onClick={() => setIsCompact(!isCompact)}\n                >\n                    Kompakt variant\n                </ToggleSwitch>\n                <Select\n                    forceCompact\n                    variant=\"small\"\n                    label=\"Etikettvariant\"\n                    items={[\"large\", \"medium\", \"small\"]}\n                    onChange={typecheckAndSetVariant}\n                    value={variant}\n                />\n            </fieldset>\n            <div className=\"side-by-side jkl-spacing--bottom-2\">\n                <ActionTextField\n                    forceCompact={isCompact}\n                    action={{\n                        icon: \"clear\",\n                        label: \"Utfør nullstilling\",\n                        onClick: () => setValue(\"\"),\n                    }}\n                    label=\"Nullstill felt\"\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                />\n                <ActionTextField\n                    forceCompact={isCompact}\n                    action={{\n                        icon: \"search\",\n                        label: \"Skriv til konsoll\",\n                        onClick: console.log,\n                    }}\n                    label=\"Skriv til konsoll\"\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                />\n            </div>\n            <div className=\"side-by-side jkl-spacing--bottom-2\">\n                <p className=\"jkl-small\">\n                    Jeg tjener{\" \"}\n                    <InlineTextField type=\"number\" maxLength={5} label=\"kronebeløp\" forceCompact={isCompact} /> kroner i\n                    måneden.\n                </p>\n                <p className=\"jkl-body\">\n                    Jeg tjener{\" \"}\n                    <InlineTextField invalid type=\"number\" maxLength={5} label=\"kronebeløp\" forceCompact={isCompact} />{\" \"}\n                    kroner i måneden.\n                </p>\n            </div>\n            <div className=\"side-by-side jkl-spacing--bottom-2\">\n                <TextField\n                    label=\"Fornavn\"\n                    value={value}\n                    onChange={handleChange}\n                    placeholder={\"f.eks. Ola\"}\n                    variant=\"small\"\n                    helpLabel=\"La oss se...\"\n                    forceCompact={isCompact}\n                    maxLength={10}\n                />\n                <TextField\n                    forceCompact={isCompact}\n                    label=\"Fornavn\"\n                    value={\"Per\"}\n                    onChange={handleChange}\n                    readOnly\n                    variant=\"small\"\n                />\n            </div>\n\n            <div className=\"side-by-side jkl-spacing--bottom-2\">\n                <TextField\n                    forceCompact={isCompact}\n                    label=\"Telefon\"\n                    type=\"tel\"\n                    value={value}\n                    onChange={handleChange}\n                    placeholder=\"999 99 999\"\n                />\n                <TextField\n                    forceCompact={isCompact}\n                    label=\"Telefon\"\n                    type=\"tel\"\n                    value={value}\n                    onChange={handleChange}\n                    placeholder=\"999 99 999\"\n                />\n            </div>\n\n            <div className=\"side-by-side jkl-spacing--bottom-5\">\n                <TextField\n                    forceCompact={isCompact}\n                    label=\"Passord\"\n                    type=\"password\"\n                    value={value}\n                    onChange={handleChange}\n                    helpLabel=\"Passord er en vanlig form for autentisering\"\n                    variant={variant}\n                />\n                <TextField\n                    forceCompact={isCompact}\n                    label=\"Passord\"\n                    type=\"password\"\n                    value={value}\n                    onChange={handleChange}\n                    helpLabel=\"Passord er en vanlig form for autentisering\"\n                    variant={variant}\n                />\n            </div>\n\n            <div className=\"side-by-side jkl-spacing--bottom-4\">\n                <TextArea\n                    rows={3}\n                    label=\"Svar med en kommentar\"\n                    value={value}\n                    onChange={handleChange}\n                    forceCompact={isCompact}\n                    placeholder=\"Begrens deg til tre linjer\"\n                />\n                <TextArea\n                    rows={3}\n                    label=\"Svar med en kommentar\"\n                    value={value}\n                    onChange={handleChange}\n                    forceCompact={isCompact}\n                    placeholder=\"Begrens deg til tre linjer\"\n                />\n            </div>\n            <div className=\"side-by-side jkl-spacing--bottom-2\">\n                <TextArea\n                    label=\"Din livshistorie\"\n                    value={value}\n                    onChange={handleChange}\n                    variant={variant}\n                    forceCompact={isCompact}\n                />\n                <TextArea\n                    label=\"Din livshistorie\"\n                    value={value}\n                    onChange={handleChange}\n                    placeholder=\"Dette feltet vokser mens du skriver\"\n                    autoExpand\n                    variant={variant}\n                    forceCompact={isCompact}\n                />\n            </div>\n        </section>\n    );\n};\nexport default Example;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport Example from \"./Example\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Example mdxType=\"Example\" />\n    <p>{`Vi bruker tekstfelt når vi vil at brukerne skal legge inn informasjon. Ledeteksten skal fortelle hva brukeren skal oppgi i feltet. Tekstfelt godtar data med fast format eller fritekst. Fast format bruker du for eksempel når du vil at brukeren skal angi fødselsnummer eller et postnummer, mens fritekst passer til felt der brukerne skal fortelle noe med egne ord.`}</p>\n    <p>{`Velg størrelse på tekstefelt etter typen data brukerne skal legge inn.`}</p>\n    <h2>{`Typer tekstfelt`}</h2>\n    <p><strong parentName=\"p\">{`Vanlige tekstfelt:`}</strong>{`\nFor innhold som ikke overskrider lengden på feltet.`}</p>\n    <p><strong parentName=\"p\">{`Lange tekstfelt:`}</strong>{`\nNår innholdet blir lengre enn en setning. Høyden på feltet kan justeres.`}</p>\n    <p><strong parentName=\"p\">{`Inline tekstfelt:`}</strong>{`\nTil spesialtilfeller, hvis vi for eksempel trenger å plassere et tekstfelt i en setning.`}</p>\n    <h2>{`Tekst og validering`}</h2>\n    <p>{`Velg størrelse på ledetekst etter prinsippene for skjemadesign. Skriv en kort og tydelig ledetekst, som forteller brukerne hva de skal oppgi i feltet. Hvis det trengs, kan vi sette inn en hjelpetekst under feltet, som forklarer mer.`}</p>\n    <p>{`Hvis tekstfeltet ikke validerer, vises en feilmelding som forteller hva som er galt. Vær oppmerskom på at feilmeldingen erstatter en eventuell hjelpetekst, slik at den feilmeldingen du lager også må fortelle hva hjelpeteksten var.`}</p>\n    <p>{`Eksempel:\nHjelpetekst for et tekstfelt med fast format: `}<em parentName=\"p\">{`Fyll ut fødselsnummer, 11 siffer.`}</em>{` Feilemeldingstekst: `}<em parentName=\"p\">{`Du må fylle ut fødselsnummer, 11 siffer`}</em>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}