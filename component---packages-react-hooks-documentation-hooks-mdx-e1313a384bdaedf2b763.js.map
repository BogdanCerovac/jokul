{"version":3,"sources":["webpack:///../packages/react-hooks/src/animation.tsx","webpack:///../packages/react-hooks/src/useMutationObserver/useMutationObserver.ts","webpack:///../packages/react-hooks/documentation/AnimationExample.tsx","webpack:///../packages/react-hooks/documentation/ClickOutsideExample.tsx","webpack:///../packages/react-hooks/src/useClickOutside.ts","webpack:///../packages/react-hooks/documentation/MutationObserverExample.tsx","webpack:///../packages/react-hooks/documentation/hooks.mdx"],"names":["getElement","elementRef","current","el","hasWindowWithMutationObserver","window","MutationObserver","AnimationExample","useState","isOpen","setIsOpen","animationRef","raf1","raf2","useRef","isFirstRender","setIsFirstRender","heightTransitioned","element","removeAttribute","runAnimation","style","display","overflow","height","scrollHeight","requestAnimationFrame","useLayoutEffect","useEffect","addEventListener","removeEventListener","cancelAnimationFrame","useAnimatedHeight","className","onClick","ref","ClickOutsideExample","listOfClicksOutside","appendToClickOutsideList","isEnabled","setIsEnabled","clickOutsideRef","clickOutsideListRef","fn","handleClickOutside","event","contains","target","React","document","useClickOutside","map","item","idx","key","MutationObserverExample","listOfMutations","appendToMutationList","mutationTargetRef","listRef","targetRef","onObservation","config","observerRef","observer","disconnect","observe","useMutationObserver","mutationList","textContent","characterData","subtree","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wMAqEA,SAASA,EAAWC,GAGhB,OAAOA,EAAWC,UAAYD,EAAWC,QAAQC,IAAMF,EAAWC,S,oBCtEtE,IAAME,EAAgC,iBAAwB,oBAAXC,QAAsD,oBAArBC,kBCqBrEC,G,UAnBU,WAAM,MACCC,qBAArBC,EADoB,KACZC,EADY,KAEpBC,EFAJ,SAAkDF,GACrD,IAAIG,EACAC,EACEZ,EAAaa,iBAAU,MAH+D,EAIlDN,oBAAS,GAA5CO,EAJqF,KAItEC,EAJsE,KAM5F,SAASC,IACL,IAAMC,EAAUlB,EAAWC,GACvBiB,GACAA,EAAQC,gBAAgB,SAIhC,SAASC,IACL,IAAMF,EAAUlB,EAAWC,GACvBiB,IACAA,EAAQG,MAAMC,QAAU,QACxBJ,EAAQG,MAAME,SAAW,SACrBd,GACAS,EAAQG,MAAMG,OAAS,IACvBN,EAAQG,MAAMG,OAAYN,EAAQO,aAAlC,OAEAP,EAAQG,MAAMG,OAAYN,EAAQO,aAAlC,KAEAb,EAAOc,uBAAsB,WACzBb,EAAOa,uBAAsB,WACzBR,EAAQG,MAAMG,OAAY,cAkC9C,OA3BAG,2BAAgB,WACPZ,GACDK,MAEL,CAACX,IAEJmB,qBAAU,WACN,IAAMV,EAAUlB,EAAWC,GAK3B,OAJIiB,GACAA,EAAQW,iBAAiB,gBAAiBZ,GAGvC,WACCC,GACAA,EAAQY,oBAAoB,gBAAiBb,MAGtD,CAACR,IAEJmB,qBAAU,WAEN,OADAZ,GAAiB,GACV,WACHe,qBAAqBnB,GACrBmB,qBAAqBlB,MAE1B,IAEI,CAACZ,EAAYmB,GE5DGY,CAAkCvB,GAF9B,GAG3B,OACI,6BAASwB,UAAU,qDACf,4BAAQA,UAAU,iCAAiCC,QAAS,kBAAMxB,GAAWD,KAA7E,WACaA,EAAS,MAAQ,MAE9B,yBAAKwB,UAAS,uBAAwBxB,EAAS,GAAK,8BAAgC0B,IAAKxB,GACrF,yBAAKsB,UAAS,cAAd,+O,uYCVhB,IA2CeG,EA3Ca,WAAM,MAC0B5B,mBAAmB,IAApE6B,EADuB,KACFC,EADE,OAEI9B,oBAAS,GAApC+B,EAFuB,KAEZC,EAFY,KAIxBC,EAAkB3B,iBAAO,MACzB4B,EAAsB5B,mBAE5B4B,EAAoBxC,QAAUmC,EAS9B,OCjBG,SAAyBF,EAAoCQ,GAChE,SAASC,EAAmBC,GACpBV,GAAOA,EAAIjC,UAAYiC,EAAIjC,QAAQ4C,SAASD,EAAME,SAClDJ,IAIRK,IAAMpB,WAAU,WAIZ,OAHIO,GACAc,UAAYA,SAASpB,iBAAiB,QAASe,GAE5C,WACCT,GACAc,UAAYA,SAASnB,oBAAoB,QAASc,ODE9DM,CAAgBT,GANO,WACfF,GACAD,EAAyB,GAAD,SAAMI,EAAoBxC,SAAW,IAArC,CAA0C,wBAOtE,6BAAS+B,UAAU,qDACf,4BACIA,UAAU,sDACVE,IAAKM,EACLP,QAAS,kBAAMM,GAAcD,KAE5BA,EAAY,UAAY,UAE7B,4BACIN,UAAU,mCACVE,IAAKM,EACLP,QAAS,kBAAMI,EAAyB,MAH5C,cAOA,wBAAIL,UAAU,YACTI,EAAoBc,KAAI,SAACC,EAAMC,GAAP,OACrB,wBAAIpB,UAAU,iBAAiBqB,IAAKD,GAC/BD,S,qVEnCzB,IAsCeG,EAtCiB,WAAM,MACN/C,qBAArBC,EAD2B,KACnBC,EADmB,OAEcF,mBAAmB,IAA5DgD,EAF2B,KAEVC,EAFU,KAG5BC,EAAoB5C,iBAAO,MAC3B6C,EAAU7C,mBAEhB6C,EAAQzD,QAAUsD,EASlB,OJd+B,SAC/BI,EACAC,EACAC,GAEA,IAAMC,EAAcjD,iBAAyB,MAE7Cc,qBAAU,WACN,GAAIxB,IAAiC,CACjC,IAAI4D,EAAWD,EAAY7D,QACrB6C,EAASa,EAAU1D,QAErB8D,GACAA,EAASC,aAGbD,EAAW,IAAI1D,iBAAiBuD,GAE5Bd,GACAiB,EAASE,QAAQnB,EAAQe,GAGjC,OAAO,WACC1D,KAAmC2D,GAAeA,EAAY7D,SAC9D6D,EAAY7D,QAAQ+D,gBAG7B,CAACL,IIdJO,CAAoBT,GAPE,SAACU,GACnBX,EAAqB,GAAD,SACZE,EAAQzD,SAAW,IADP,EAEbkE,EAAajB,KAAI,SAACC,GAAD,OAAUA,EAAKL,OAAOsB,aAAe,WAIX,CAAEC,eAAe,EAAMC,SAAS,IAElF,6BAAStC,UAAU,qDACf,4BAAQA,UAAU,sDAAsDC,QAAS,kBAAMxB,GAAWD,KAAlG,iBAGA,4BAAQwB,UAAU,mCAAmCC,QAAS,kBAAMuB,EAAqB,MAAzF,cAGA,uBAAGtB,IAAKuB,EAAmBzB,UAAU,sBAArC,kBACoBxB,EAAS,OAAS,UAEtC,wDACA,wBAAIwB,UAAU,YACTuB,EAAgBL,KAAI,SAACC,EAAMC,GAAP,OACjB,wBAAIpB,UAAU,iBAAiBqB,IAAKD,GAC/BD,S,qFCxBlB,IAAMoB,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,uFACA,2CACA,YAAC,EAAD,CAAkBA,QAAQ,qBAC1B,gJACA,6CACA,YAAC,EAAD,CAAyBA,QAAQ,4BACjC,8TACA,yCACA,YAAC,EAAD,CAAqBA,QAAQ,wBAC7B,wHACA,yCACA,8BAAa,+BAAGC,WAAW,KAAQ,CAC/B,KAAQ,iDADC,iDAGb,uCACA,8BAAa,+BAAGA,WAAW,KAAQ,CAC/B,KAAQ,iDADC,kDAOjBJ,EAAWK,gBAAiB","file":"component---packages-react-hooks-documentation-hooks-mdx-e1313a384bdaedf2b763.js","sourcesContent":["import { MutableRefObject, Ref, useEffect, useLayoutEffect, useRef, useState } from \"react\";\n\ninterface HTMLElementOrCoreToggleElement<T extends HTMLElementOrCoreToggleElement<T>> extends HTMLElement {\n    el?: T; // Hack and workaround until https://github.com/nrkno/custom-element-to-react/pull/17 has landed\n}\n\nexport function useAnimatedHeight<T extends HTMLElement>(isOpen: boolean): [Ref<T>, () => void] {\n    let raf1: number;\n    let raf2: number;\n    const elementRef = useRef<T>(null);\n    const [isFirstRender, setIsFirstRender] = useState(true);\n\n    function heightTransitioned() {\n        const element = getElement(elementRef);\n        if (element) {\n            element.removeAttribute(\"style\");\n        }\n    }\n\n    function runAnimation() {\n        const element = getElement(elementRef);\n        if (element) {\n            element.style.display = \"block\";\n            element.style.overflow = \"hidden\";\n            if (isOpen) {\n                element.style.height = \"0\";\n                element.style.height = `${element.scrollHeight}px`;\n            } else {\n                element.style.height = `${element.scrollHeight}px`;\n\n                raf1 = requestAnimationFrame(() => {\n                    raf2 = requestAnimationFrame(() => {\n                        element.style.height = `${0}px`;\n                    });\n                });\n            }\n        }\n    }\n\n    useLayoutEffect(() => {\n        if (!isFirstRender) {\n            runAnimation();\n        }\n    }, [isOpen]);\n\n    useEffect(() => {\n        const element = getElement(elementRef);\n        if (element) {\n            element.addEventListener(\"transitionend\", heightTransitioned);\n        }\n\n        return () => {\n            if (element) {\n                element.removeEventListener(\"transitionend\", heightTransitioned);\n            }\n        };\n    }, [isOpen]);\n\n    useEffect(() => {\n        setIsFirstRender(false);\n        return () => {\n            cancelAnimationFrame(raf1);\n            cancelAnimationFrame(raf2);\n        };\n    }, []);\n\n    return [elementRef, runAnimation];\n}\n\nfunction getElement(elementRef: MutableRefObject<HTMLElementOrCoreToggleElement<HTMLElement> | null>) {\n    // Workaround to handle custom elements from NRK Core components until this lands:\n    // https://github.com/nrkno/custom-element-to-react/pull/17\n    return elementRef.current && (elementRef.current.el || elementRef.current);\n}\n","import { useEffect, useRef, RefObject } from \"react\";\n\nconst hasWindowWithMutationObserver = () => typeof window !== \"undefined\" && typeof MutationObserver !== \"undefined\";\n\nexport const useMutationObserver = (\n    targetRef: RefObject<HTMLElement>,\n    onObservation: MutationCallback,\n    config?: Partial<MutationObserverInit>,\n) => {\n    const observerRef = useRef<MutationObserver>(null);\n\n    useEffect(() => {\n        if (hasWindowWithMutationObserver()) {\n            let observer = observerRef.current;\n            const target = targetRef.current;\n\n            if (observer) {\n                observer.disconnect();\n            }\n\n            observer = new MutationObserver(onObservation);\n\n            if (target) {\n                observer.observe(target, config);\n            }\n        }\n        return () => {\n            if (hasWindowWithMutationObserver() && observerRef && observerRef.current) {\n                observerRef.current.disconnect();\n            }\n        };\n    }, [targetRef]);\n};\n","import React, { useState } from \"react\";\nimport { useAnimatedHeight } from \"../src\";\nimport \"./index.scss\";\n\nconst AnimationExample = () => {\n    const [isOpen, setIsOpen] = useState();\n    const [animationRef] = useAnimatedHeight<HTMLDivElement>(isOpen);\n    return (\n        <section className=\"jkl-spacing--top-3 jkl-spacing--bottom-3 jkl-body\">\n            <button className=\"jkl-button jkl-button--primary\" onClick={() => setIsOpen(!isOpen)}>\n                Animate {isOpen ? \"Out\" : \"In\"}\n            </button>\n            <div className={`lorem-text-wrapper ${isOpen ? \"\" : \"lorem-text-wrapper--hidden\"}`} ref={animationRef}>\n                <div className={`lorem-text`}>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci amet, aperiam asperiores aut\n                    beatae consequuntur cumque delectus dolore doloremque ea fugit inventore ipsam libero magnam\n                    officiis optio soluta veniam voluptatibus!\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default AnimationExample;\n","import React, { useState, useRef } from \"react\";\nimport { useClickOutside } from \"../src\";\n\nconst ClickOutsideExample = () => {\n    const [listOfClicksOutside, appendToClickOutsideList] = useState<string[]>([]);\n    const [isEnabled, setIsEnabled] = useState(false);\n\n    const clickOutsideRef = useRef(null);\n    const clickOutsideListRef = useRef<string[]>();\n\n    clickOutsideListRef.current = listOfClicksOutside;\n    const onClickOutside = () => {\n        if (isEnabled) {\n            appendToClickOutsideList([...(clickOutsideListRef.current || []), \"Clicked outside\"]);\n        }\n    };\n\n    useClickOutside(clickOutsideRef, onClickOutside);\n\n    return (\n        <section className=\"jkl-spacing--top-3 jkl-spacing--bottom-3 jkl-body\">\n            <button\n                className=\"jkl-button jkl-button--primary jkl-spacing--right-2\"\n                ref={clickOutsideRef}\n                onClick={() => setIsEnabled(!isEnabled)}\n            >\n                {isEnabled ? \"Disable\" : \"Enable\"}\n            </button>\n            <button\n                className=\"jkl-button jkl-button--secondary\"\n                ref={clickOutsideRef}\n                onClick={() => appendToClickOutsideList([])}\n            >\n                Reset list\n            </button>\n            <ul className=\"jkl-list\">\n                {listOfClicksOutside.map((item, idx) => (\n                    <li className=\"jkl-list--item\" key={idx}>\n                        {item}\n                    </li>\n                ))}\n            </ul>\n        </section>\n    );\n};\n\nexport default ClickOutsideExample;\n","import React, { RefObject } from \"react\";\n\nexport function useClickOutside(ref: RefObject<HTMLElement> | null, fn: () => void) {\n    function handleClickOutside(event: MouseEvent) {\n        if (ref && ref.current && !ref.current.contains(event.target as Node)) {\n            fn();\n        }\n    }\n\n    React.useEffect(() => {\n        if (ref) {\n            document && document.addEventListener(\"click\", handleClickOutside);\n        }\n        return () => {\n            if (ref) {\n                document && document.removeEventListener(\"click\", handleClickOutside);\n            }\n        };\n    });\n}\n","import React, { useState, useRef } from \"react\";\nimport { useMutationObserver } from \"../src\";\n\nconst MutationObserverExample = () => {\n    const [isOpen, setIsOpen] = useState();\n    const [listOfMutations, appendToMutationList] = useState<string[]>([]);\n    const mutationTargetRef = useRef(null);\n    const listRef = useRef<string[]>();\n\n    listRef.current = listOfMutations;\n    const onObservation = (mutationList: MutationRecord[]) => {\n        appendToMutationList([\n            ...(listRef.current || []),\n            ...mutationList.map((item) => item.target.textContent || \"\"),\n        ]);\n    };\n\n    useMutationObserver(mutationTargetRef, onObservation, { characterData: true, subtree: true });\n    return (\n        <section className=\"jkl-spacing--top-3 jkl-spacing--bottom-3 jkl-body\">\n            <button className=\"jkl-button jkl-button--primary jkl-spacing--right-2\" onClick={() => setIsOpen(!isOpen)}>\n                Change status\n            </button>\n            <button className=\"jkl-button jkl-button--secondary\" onClick={() => appendToMutationList([])}>\n                Reset list\n            </button>\n            <p ref={mutationTargetRef} className=\"jkl-spacing--top-3\">\n                Current state: {isOpen ? \"OPEN\" : \"CLOSED\"}\n            </p>\n            <p>List of changes in state:</p>\n            <ul className=\"jkl-list\">\n                {listOfMutations.map((item, idx) => (\n                    <li className=\"jkl-list__item\" key={idx}>\n                        {item}\n                    </li>\n                ))}\n            </ul>\n        </section>\n    );\n};\n\nexport default MutationObserverExample;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/ComponentLayout.tsx\";\nimport AnimationExample from \"./AnimationExample\";\nimport ClickOutsideExample from \"./ClickOutsideExample\";\nimport MutationObserverExample from \"./MutationObserverExample\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Denne pakken innholder støttefunksjoner i form av React hooks.`}</p>\n    <h3>{`useAnimatedHeight`}</h3>\n    <AnimationExample mdxType=\"AnimationExample\" />\n    <p>{`Animering av ting inn og ut av DOMet i React er ikke lett, men med useAnimatedHeight så blir jobben en god del lettere.`}</p>\n    <h3>{`useMutationObserver`}</h3>\n    <MutationObserverExample mdxType=\"MutationObserverExample\" />\n    <p>{`Med useMutationObserver kan du lytte på endringer i DOMet. Dette er en tynn wrapper over MutationObserver APIet som gjør det lettere å ta det i bruk i React. Er nyttig om du feks ønsker å tracke om en bruker har trykket på et element du ikke har tilgang på onChange funksjonen, feks Accordion.`}</p>\n    <h3>{`useClickOutside`}</h3>\n    <ClickOutsideExample mdxType=\"ClickOutsideExample\" />\n    <p>{`Denne lar det lytte på klikk utenfor et element. Det kan være nyttig for å lukke en modal feks.`}</p>\n    <h3>{`useFocusOutside`}</h3>\n    <p>{`TODO: `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/fremtind/jokul/issues/677\"\n      }}>{`https://github.com/fremtind/jokul/issues/677`}</a></p>\n    <h3>{`useKeyListner`}</h3>\n    <p>{`TODO: `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/fremtind/jokul/issues/678\"\n      }}>{`https://github.com/fremtind/jokul/issues/678`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}