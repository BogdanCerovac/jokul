{"version":3,"sources":["webpack:///../packages/summary-table-react/src/SummaryTable.tsx","webpack:///../packages/summary-table-react/mocks/index.ts","webpack:///../packages/summary-table-react/documentation/Example.tsx","webpack:///../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack:///../packages/summary-table-react/documentation/SummaryTable.mdx"],"names":["SummaryTable","columnDescriptions","items","className","heading","headingLevel","footer","H","cn","map","category","index","scope","key","item","label","value","mockProps","Example","obj","TypeError","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","isMDXComponent"],"mappings":"uSAiBaA,EAAgC,SAAC,GAOxC,IANFC,EAME,EANFA,mBACAC,EAKE,EALFA,MACAC,EAIE,EAJFA,UACAC,EAGE,EAHFA,QAGE,IAFFC,oBAEE,MAFa,KAEb,EADFC,EACE,EADFA,OAEMC,EAAIF,EAEV,OACI,6BACIF,UAAWK,IAAG,oBAAqB,CAC/B,4BAA6BJ,EAC7BD,eAGHC,GACG,kBAACG,EAAD,CAAGJ,UAAU,gFACRC,GAGT,2BAAOD,UAAU,YACb,2BAAOA,UAAU,eACb,4BACKF,EAAmBQ,KAAI,SAACC,EAAUC,GAAX,OACpB,wBAAIC,MAAM,MAAMC,IAAQH,EAAL,IAAiBC,GAC/BD,QAMjB,+BACKR,EAAMO,KAAI,SAACK,EAAMH,GAAP,OACP,wBAAIE,IAAQC,EAAL,IAAaH,GAChB,wBAAIC,MAAM,OAAOE,EAAKC,OACtB,4BAAKD,EAAKE,YAKrBV,GACG,+BACI,4BACI,wBAAIM,MAAM,OAAON,aAAjB,EAAiBA,EAAQS,OACzB,4BAAKT,aAAL,EAAKA,EAAQU,YClD5BC,EAAY,CACrBb,QAZuB,gBAavBH,mBAXkC,CAAC,UAAW,SAY9CC,MAVqB,CACrB,CAAEa,MAAO,mBAAiCC,MAAO,eACjD,CAAED,MAAO,kBAAmBC,MAAO,eASnCV,OANsB,CAAES,MAAO,YAAaC,MAAO,eCGxCE,G,UARQ,SAAC,GACpB,OCPW,SAAmCC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCDKe,IAE9C,yBAAKjB,UAAU,yBACX,kBAAC,EAAiBc,MECjBI,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAmBN,EAAc,oBACjCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,YAACP,EAAD,CAASO,QAAQ,WAAjB,4JAIA,YAACN,EAAD,CAAkBO,UAAWjB,EAASgB,QAAQ,sBAKlDF,EAAWI,gBAAiB","file":"component---packages-summary-table-react-documentation-summary-table-mdx-f16cbc3cf9c627a5ca08.js","sourcesContent":["import React from \"react\";\nimport cn from \"classnames\";\n\nexport interface Item {\n    label: string;\n    value: string;\n}\n\nexport interface Props {\n    columnDescriptions: [string, string];\n    items: Item[];\n    className?: string;\n    heading?: string;\n    headingLevel?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"p\";\n    footer?: Item;\n}\n\nexport const SummaryTable: React.FC<Props> = ({\n    columnDescriptions,\n    items,\n    className,\n    heading,\n    headingLevel = \"h3\",\n    footer,\n}) => {\n    const H = headingLevel;\n\n    return (\n        <section\n            className={cn(\"jkl-summary-table\", {\n                \"jkl-summary-table--no-bg\": !heading,\n                className,\n            })}\n        >\n            {heading && (\n                <H className=\"jkl-summary-table__heading jkl-title-small jkl-layout-spacing--medium-bottom\">\n                    {heading}\n                </H>\n            )}\n            <table className=\"jkl-body\">\n                <thead className=\"jkl-sr-only\">\n                    <tr>\n                        {columnDescriptions.map((category, index) => (\n                            <th scope=\"col\" key={`${category}-${index}`}>\n                                {category}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {items.map((item, index) => (\n                        <tr key={`${item}-${index}`}>\n                            <th scope=\"row\">{item.label}</th>\n                            <td>{item.value}</td>\n                        </tr>\n                    ))}\n                </tbody>\n\n                {footer && (\n                    <tfoot>\n                        <tr>\n                            <th scope=\"row\">{footer?.label}</th>\n                            <td>{footer?.value}</td>\n                        </tr>\n                    </tfoot>\n                )}\n            </table>\n        </section>\n    );\n};\n","const SOFT_HYPHEN = \"\\u00AD\";\n\nexport const mockHeading = `Opp${SOFT_HYPHEN}summering`;\n\nexport const mockColumnDescriptions = [\"Product\", \"Price\"] as [string, string];\n\nexport const mockItems = [\n    { label: `Barne${SOFT_HYPHEN}forsikring`, value: `200 ${SOFT_HYPHEN}kr/mnd` },\n    { label: \"Innboforsikring\", value: \"100 kr/mnd\" },\n];\n\nexport const mockFooter = { label: \"Total sum\", value: \"300 kr/mnd\" };\n\nexport const mockProps = {\n    heading: mockHeading,\n    columnDescriptions: mockColumnDescriptions,\n    items: mockItems,\n    footer: mockFooter,\n};\n","import React from \"react\";\nimport { ExampleComponentProps } from \"@fremtind/jkl-portal-components\";\nimport { SummaryTable } from \"../src\";\nimport { mockProps } from \"../mocks\";\nimport \"./Example.scss\";\n\nexport const Example = ({}: ExampleComponentProps) => {\n    return (\n        <div className=\"summary-table-example\">\n            <SummaryTable {...mockProps} />\n        </div>\n    );\n};\n\nexport default Example;\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport Example from \"./Example\";\nimport { SummaryTable } from \"../src\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Summary table brukes for å oppsumere et sett med elementer. \n    Dette kan for eksempel være å vise produkter i handlekurven med informasjon om navn og pris. \n    </Ingress>\n    <ComponentExample component={Example} mdxType=\"ComponentExample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}