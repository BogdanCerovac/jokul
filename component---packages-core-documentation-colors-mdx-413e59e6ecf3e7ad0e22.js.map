{"version":3,"sources":["webpack:///../packages/core/documentation/Colors/Colors.tsx","webpack:///../packages/core/documentation/colors.mdx"],"names":["ColorBox","color","handleClick","type","onClick","className","MultiColorBox","colors","ColorGroup","title","children","Colors","ref","useRef","copyCodeToClipboard","current","value","select","document","execCommand","style","display","flexWrap","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---packages-core-documentation-colors-mdx-413e59e6ecf3e7ad0e22.js","sourcesContent":["import React, { useRef } from \"react\";\nimport \"./colors.scss\";\n\ntype colors =\n    | \"svart\"\n    | \"hvit\"\n    | \"gra-10\"\n    | \"gra-20\"\n    | \"gra-30\"\n    | \"gra-40\"\n    | \"gra-50\"\n    | \"gra-60\"\n    | \"gra-70\"\n    | \"gra-80\"\n    | \"gra-90\"\n    | \"gra-100\"\n    | \"varde-10\"\n    | \"varde-20\"\n    | \"varde-30\"\n    | \"varde-40\"\n    | \"varde-50\"\n    | \"varde\"\n    | \"varde-60\"\n    | \"varde-70\"\n    | \"varde-80\"\n    | \"varde-90\"\n    | \"varde-100\"\n    | \"suksess\"\n    | \"info\"\n    | \"advarsel\"\n    | \"feil\"\n    | \"suksess--darkbg\"\n    | \"info--darkbg\"\n    | \"advarsel--darkbg\"\n    | \"feil--darkbg\";\n\ninterface Props {\n    color: colors;\n    handleClick: (color: string) => void;\n}\n\nconst ColorBox: React.FC<Props> = ({ color, handleClick }) => (\n    <button type=\"button\" onClick={() => handleClick(color)} className=\"jkl-color-box__wrapper\">\n        <span className={`jkl-color-box jkl-color-box--left jkl-color-box--${color}`}></span>\n        <span className={`jkl-color-box jkl-color-box--right jkl-color-box--${color}`}></span>\n        <span className=\"jkl-color-box__text jkl-body\">${color}</span>\n    </button>\n);\n\ninterface MultiColorProps {\n    colors: colors[];\n    handleClick: (color: string) => void;\n}\n\nconst MultiColorBox: React.FC<MultiColorProps> = ({ colors, handleClick }) => (\n    <button type=\"button\" onClick={() => handleClick(`${colors[0]}, $${colors[1]}`)} className=\"jkl-color-box__wrapper\">\n        <span className={`jkl-color-box jkl-color-box--left jkl-color-box--${colors[0]}`}></span>\n        <span className={`jkl-color-box jkl-color-box--right jkl-color-box--${colors[1]}`}></span>\n        <span className=\"jkl-color-box__text jkl-body\">${colors[0]}</span>\n        <span className=\"jkl-color-box__text jkl-body\">${colors[1]}</span>\n    </button>\n);\n\ninterface ColorProps {\n    title: string;\n}\n\nconst ColorGroup: React.FC<ColorProps> = ({ title, children }) => (\n    <section className=\"jkl-colors__section\">\n        <h2 className=\"jkl-title-small jkl-spacing--bottom-2\">{title}</h2>\n        {children}\n    </section>\n);\n\nconst Colors = () => {\n    const ref = useRef<HTMLTextAreaElement>(null);\n\n    const copyCodeToClipboard = (color: string) => {\n        if (ref.current) {\n            ref.current.value = `$${color}`;\n            ref.current.select();\n            document.execCommand(\"copy\");\n        }\n    };\n\n    return (\n        <section style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n            <textarea ref={ref} className=\"jkl-color__copy\" />\n            <ColorGroup title=\"Gråtoner\">\n                <ColorBox handleClick={copyCodeToClipboard} color=\"hvit\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"gra-10\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"gra-20\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"gra-30\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"gra-40\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"gra-50\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"gra-60\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"gra-70\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"gra-80\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"gra-90\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"gra-100\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"svart\" />\n            </ColorGroup>\n            <ColorGroup title=\"Vardetoner\">\n                <ColorBox handleClick={copyCodeToClipboard} color=\"varde-10\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"varde-20\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"varde-30\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"varde-40\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"varde-50\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"varde\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"varde-60\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"varde-70\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"varde-80\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"varde-90\" />\n                <ColorBox handleClick={copyCodeToClipboard} color=\"varde-100\" />\n            </ColorGroup>\n            <ColorGroup title=\"Bruksfarger\">\n                <MultiColorBox handleClick={copyCodeToClipboard} colors={[\"suksess\", \"suksess--darkbg\"]} />\n                <MultiColorBox handleClick={copyCodeToClipboard} colors={[\"info\", \"info--darkbg\"]} />\n                <MultiColorBox handleClick={copyCodeToClipboard} colors={[\"advarsel\", \"advarsel--darkbg\"]} />\n                <MultiColorBox handleClick={copyCodeToClipboard} colors={[\"feil\", \"feil--darkbg\"]} />\n            </ColorGroup>\n        </section>\n    );\n};\n\nexport default Colors;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport Colors from \"./Colors/Colors\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Les mer om fargene `}<a parentName=\"p\" {...{\n        \"href\": \"/jokul/profil/farger\"\n      }}>{`her`}</a>{`.`}</p>\n    <p>{`For å ta i bruk fargene må du ha oppsett for sass i ditt prosjekt, normalt vil i importen i dine sass filer bli:`}</p>\n    <p><inlineCode parentName=\"p\">{`@import \"~@fremtind/jkl-core/variables/_colors.scss\";`}</inlineCode></p>\n    <p>{`eller om du har behov for flere variabler enn farger:`}</p>\n    <p><inlineCode parentName=\"p\">{`@import \"~@fremtind/jkl-core/variables/_all.scss\";`}</inlineCode></p>\n    <p>{`Klikk på fargene for å kopiere scss-variabelnavnet til clipboard`}</p>\n    <Colors mdxType=\"Colors\" />\n    <h2>{`Farger som util klasser`}</h2>\n    <p><inlineCode parentName=\"p\">{`@import \"~@fremtind/jkl-core/color-classes.scss\";`}</inlineCode></p>\n    <p>{`farger som util klasser`}</p>\n    <p>{`Disse klassene er strengt tatt ut og brukes i dokumentasjon der det er behov, bruker vanligvis ikke disse klassene, men først og fremst fargevariablene ovenfor.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}