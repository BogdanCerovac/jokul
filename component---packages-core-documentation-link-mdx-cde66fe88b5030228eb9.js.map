{"version":3,"sources":["webpack:///../packages/core/src/utils/breakpoints.ts","webpack:///../packages/core/src/components/Link.tsx","webpack:///../packages/core/src/components/NavLink.tsx","webpack:///../packages/core/documentation/Link/LinkExample.tsx","webpack:///../packages/core/documentation/Link/NavLinkExample.tsx","webpack:///../packages/core/documentation/Link.mdx"],"names":["Link","negative","external","className","children","rest","classnames","NavLink","inverted","active","LinkExample","boolValues","href","NavLinkExample","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","DoDontExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","title","knobs","boolProps","image","type","description","isMDXComponent"],"mappings":"qPAAO,I,qBCQMA,EAAwB,SAAC,GAAD,QAAGC,gBAAH,aAAqBC,gBAArB,aAAuCC,iBAAvC,MAAmD,GAAnD,EAAuDC,EAAvD,EAAuDA,SAAaC,EAApE,qEACjC,qCACIF,UAAWG,IAAW,WAAYH,EAAW,CACzC,qBAAsBF,EACtB,qBAAsBC,KAEtBG,GAEHD,ICRIG,EAA2B,SAAC,GAAD,QAAGC,gBAAH,aAAqBC,cAArB,aAAqCN,iBAArC,MAAiD,GAAjD,EAAqDC,EAArD,EAAqDA,SAAaC,EAAlE,mEACpC,qCACIF,UAAWG,IACP,eACA,CACI,yBAA0BE,EAC1B,uBAAwBC,GAE5BN,IAEAE,GAEHD,ICfIM,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OACvB,uBAAGR,UAAU,YACT,kBAAC,EAAD,CAAMS,KAAK,IAAIV,SAAUS,GAAcA,EAAU,QAAaV,SAAUU,GAAcA,EAAU,WAAhG,qBCFKE,EAAiB,SAAC,GAAD,IAAGF,EAAH,EAAGA,WAAH,OAC1B,kBAAC,EAAD,CACIR,UAAU,WACVS,KAAK,IACLH,OAAQE,GAAcA,EAAU,MAChCH,SAAUG,GAAcA,EAAU,WAJtC,oBCESG,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAmBN,EAAc,oBACjCO,EAAgBP,EAAc,iBAC9BQ,EAAc,CAClBT,gBAEIU,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGV,EACF,8BACD,OAAO,YAACO,EAAD,iBAAeD,EAAiBN,EAAhC,CAAuCU,WAAYA,EAAYC,QAAQ,cAI5E,YAACR,EAAD,CAASQ,QAAQ,WAAjB,8LAIA,YAACP,EAAD,CAAkBQ,UAAWnB,EAAaoB,MAAM,OAAOC,MAAO,CAC5DC,UAAW,CAAC,YAAa,YACxBJ,QAAQ,qBACX,YAACP,EAAD,CAAkBQ,UAAWhB,EAAgBiB,MAAM,UAAUC,MAAO,CAClEC,UAAW,CAAC,YAAa,UACxBJ,QAAQ,qBACX,8BACA,sKACA,YAACN,EAAD,CAAeW,MAAM,4CAA4CC,KAAK,KAAKC,YAAY,kEAAkEP,QAAQ,kBACjK,YAACN,EAAD,CAAeW,MAAM,oDAAoDC,KAAK,OAAOC,YAAY,gFAAgFP,QAAQ,kBACzL,YAACN,EAAD,CAAeW,MAAM,8CAA8CC,KAAK,KAAKC,YAAY,mDAAmDP,QAAQ,kBACpJ,YAACN,EAAD,CAAeW,MAAM,+CAA+CC,KAAK,KAAKC,YAAY,8DAA8DP,QAAQ,mBAKpKF,EAAWU,gBAAiB","file":"component---packages-core-documentation-link-mdx-cde66fe88b5030228eb9.js","sourcesContent":["export const breakpoints = {\n    small: 768,\n    medium: 992,\n    large: 1200,\n    xl: 1600,\n};\n","import React, { AnchorHTMLAttributes } from \"react\";\nimport classnames from \"classnames\";\n\ninterface Props extends AnchorHTMLAttributes<HTMLAnchorElement> {\n    negative?: boolean;\n    external?: boolean;\n}\n\nexport const Link: React.FC<Props> = ({ negative = false, external = false, className = \"\", children, ...rest }) => (\n    <a\n        className={classnames(\"jkl-link\", className, {\n            \"jkl-link--negative\": negative,\n            \"jkl-link--external\": external,\n        })}\n        {...rest}\n    >\n        {children}\n    </a>\n);\n","import React, { AnchorHTMLAttributes } from \"react\";\nimport classnames from \"classnames\";\n\ninterface Props extends AnchorHTMLAttributes<HTMLAnchorElement> {\n    inverted?: boolean;\n    active?: boolean;\n}\n\nexport const NavLink: React.FC<Props> = ({ inverted = false, active = false, className = \"\", children, ...rest }) => (\n    <a\n        className={classnames(\n            \"jkl-nav-link\",\n            {\n                \"jkl-nav-link--inverted\": inverted,\n                \"jkl-nav-link--active\": active,\n            },\n            className,\n        )}\n        {...rest}\n    >\n        {children}\n    </a>\n);\n","import React from \"react\";\n\nimport { ExampleComponentProps } from \"@fremtind/jkl-portal-components\";\nimport { Link } from \"../../src\";\n\nexport const LinkExample = ({ boolValues }: ExampleComponentProps) => (\n    <p className=\"jkl-body\">\n        <Link href=\"/\" external={boolValues && boolValues[\"Ekstern\"]} negative={boolValues && boolValues[\"Invertert\"]}>\n            Gå til forsiden\n        </Link>\n    </p>\n);\n","import React from \"react\";\n\nimport { ExampleComponentProps } from \"@fremtind/jkl-portal-components\";\nimport { NavLink } from \"../../src\";\n\nexport const NavLinkExample = ({ boolValues }: ExampleComponentProps) => (\n    <NavLink\n        className=\"jkl-body\"\n        href=\"#\"\n        active={boolValues && boolValues[\"Aktiv\"]}\n        inverted={boolValues && boolValues[\"Invertert\"]}\n    >\n        Gå til forsiden\n    </NavLink>\n);\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport { LinkExample } from \"./Link/LinkExample\";\nimport { NavLinkExample } from \"./Link/NavLinkExample\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst DoDontExample = makeShortcode(\"DoDontExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Vi bruker lenker for å lede brukeren til andre nettsider, eller til andre steder på samme nettside. Lenker til\n    eksterne nettsider markeres med en pil opp og til høyre etter lenketeksten.\n    </Ingress>\n    <ComponentExample component={LinkExample} title=\"Link\" knobs={{\n      boolProps: [\"Invertert\", \"Ekstern\"]\n    }} mdxType=\"ComponentExample\" />\n    <ComponentExample component={NavLinkExample} title=\"NavLink\" knobs={{\n      boolProps: [\"Invertert\", \"Aktiv\"]\n    }} mdxType=\"ComponentExample\" />\n    <h2>{`Bruk`}</h2>\n    <p>{`Vi har to typer lenker. I løpende tekst brukes vanlige lenker, mens navigasjons`}{`­`}{`lenker brukes i menyer og der lenken står for seg selv.`}</p>\n    <DoDontExample image=\"/assets/documentation/link/link-tekst.svg\" type=\"do\" description=\"Bruk vanlige lenker i løpende tekst, og marker eksterne lenker.\" mdxType=\"DoDontExample\" />\n    <DoDontExample image=\"/assets/documentation/link/navlink-tekst-feil.svg\" type=\"dont\" description=\"Ikke bruk navigasjonslenker i løpende tekst, heller ikke for eksterne lenker.\" mdxType=\"DoDontExample\" />\n    <DoDontExample image=\"/assets/documentation/link/navlink-meny.svg\" type=\"do\" description=\"Bruk navigasjonslenker når du skal lage en meny.\" mdxType=\"DoDontExample\" />\n    <DoDontExample image=\"/assets/documentation/link/navlink-alene.svg\" type=\"do\" description=\"Bruk en navigasjonslenke hvis lenken skal stå for seg selv.\" mdxType=\"DoDontExample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}