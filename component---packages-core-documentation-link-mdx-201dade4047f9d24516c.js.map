{"version":3,"sources":["webpack:///../packages/core/src/utils/breakpoints.ts","webpack:///../packages/core/src/components/Link.tsx","webpack:///../packages/core/documentation/Link/LinkExample.tsx","webpack:///../packages/core/documentation/Link.mdx"],"names":["Link","negative","external","className","children","rest","classnames","LinkExample","boolValues","href","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","knobs","boolProps","isMDXComponent"],"mappings":"0RAAO,I,qBCQA,IAAMA,EAAwB,SAAC,GAAD,QAAGC,gBAAH,aAAqBC,gBAArB,aAAuCC,iBAAvC,MAAmD,GAAnD,EAAuDC,EAAvD,EAAuDA,SAAaC,E,oIAApE,0DACjC,qCACIF,UAAWG,IAAW,WAAYH,EAAW,CACzC,qBAAsBF,EACtB,qBAAsBC,KAEtBG,GAEHD,ICXIG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OACvB,uBAAGL,UAAU,YACT,kBAAC,EAAD,CAAMM,KAAK,IAAIP,SAAUM,GAAcA,EAAU,SAAjD,qBCAD,IAAME,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAmBN,EAAc,oBACjCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,E,oIACF,mBACD,OAAO,YAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,YAACP,EAAD,CAASO,QAAQ,WAAjB,8LAIA,YAACN,EAAD,CAAkBO,UAAWjB,EAAakB,MAAO,CAC/CC,UAAW,CAAC,UAAW,cACtBH,QAAQ,sBAKfF,EAAWM,gBAAiB","file":"component---packages-core-documentation-link-mdx-201dade4047f9d24516c.js","sourcesContent":["export const breakpoints = {\n    small: 768,\n    medium: 992,\n    large: 1200,\n    xl: 1600,\n};\n","import React, { AnchorHTMLAttributes } from \"react\";\nimport classnames from \"classnames\";\n\ninterface Props extends AnchorHTMLAttributes<HTMLAnchorElement> {\n    negative?: boolean;\n    external?: boolean;\n}\n\nexport const Link: React.FC<Props> = ({ negative = false, external = false, className = \"\", children, ...rest }) => (\n    <a\n        className={classnames(\"jkl-link\", className, {\n            \"jkl-link--negative\": negative,\n            \"jkl-link--external\": external,\n        })}\n        {...rest}\n    >\n        {children}\n    </a>\n);\n","import React from \"react\";\n\nimport { ExampleComponentProps } from \"@fremtind/jkl-portal-components\";\nimport { Link } from \"../../src\";\n\nexport const LinkExample = ({ boolValues }: ExampleComponentProps) => (\n    <p className=\"jkl-body\">\n        <Link href=\"/\" external={boolValues && boolValues[\"Ekstern\"]}>\n            Gå til forsiden\n        </Link>\n    </p>\n);\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport { LinkExample } from \"./Link/LinkExample\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Vi bruker lenker for å lede brukeren til andre nettsider, eller til andre steder på samme nettside. Lenker til\n    eksterne nettsider markeres med en pil opp og til høyre etter lenketeksten.\n    </Ingress>\n    <ComponentExample component={LinkExample} knobs={{\n      boolProps: [\"Ekstern\", \"Invertert\"]\n    }} mdxType=\"ComponentExample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}