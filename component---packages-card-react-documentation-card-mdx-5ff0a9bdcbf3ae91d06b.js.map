{"version":3,"sources":["webpack:///../packages/card-react/documentation/img/grass.jpg","webpack:///../packages/card-react/documentation/img/car.jpg","webpack:///../packages/button-react/build/browser/index.js","webpack:///../packages/card-react/src/Card.tsx","webpack:///../packages/card-react/documentation/Example.tsx","webpack:///../packages/card-react/documentation/card.mdx"],"names":["module","exports","makeButtonComponent","buttonType","props","children","_props$className","className","onClick","forceCompact","inverted","componentClassName","concat","React","createElement","PrimaryButton","SecondaryButton","TertiaryButton","Card","title","media","action","dark","clickable","Button","type","data-testid","src","alt","href","name","handleClick","console","log","CardDemo","car","grass","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","Example","isMDXComponent"],"mappings":"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","file":"component---packages-card-react-documentation-card-mdx-5ff0a9bdcbf3ae91d06b.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/grass-600de8a972c260171e1839dc0f426db5.jpg\";","module.exports = __webpack_public_path__ + \"static/car-f7134fdf059c629bc52f96d014bc5d64.jpg\";","import React from 'react';\n\nfunction makeButtonComponent(buttonType) {\n  return function button(props) {\n    var children = props.children,\n        _props$className = props.className,\n        className = _props$className === void 0 ? \"\" : _props$className,\n        onClick = props.onClick,\n        forceCompact = props.forceCompact,\n        inverted = props.inverted;\n    var componentClassName = \"jkl-button\".concat(\" jkl-button--\".concat(buttonType), forceCompact ? \" jkl-button--compact\" : \"\", inverted ? \" jkl-button--inverted\" : \"\", className ? \" \".concat(className) : \"\");\n    return React.createElement(\"button\", {\n      onClick: onClick,\n      className: componentClassName\n    }, children);\n  };\n}\n\nvar PrimaryButton = makeButtonComponent(\"primary\");\nvar SecondaryButton = makeButtonComponent(\"secondary\");\nvar TertiaryButton = makeButtonComponent(\"tertiary\");\n\nexport { PrimaryButton, SecondaryButton, TertiaryButton };\n","import React, { ReactNode, MouseEventHandler } from \"react\";\nimport { PrimaryButton, SecondaryButton, TertiaryButton } from \"@fremtind/jkl-button-react\";\n\ntype validButtons = \"primary\" | \"secondary\" | \"tertiary\";\n\ntype Action = {\n    type: validButtons;\n    name: string;\n    onClick: MouseEventHandler<HTMLButtonElement>;\n};\n\ntype Media = {\n    src: string;\n    alt: string;\n};\n\ntype Clickable = {\n    href?: string;\n    onClick?: MouseEventHandler<HTMLAnchorElement>;\n};\n\ninterface Props {\n    title?: string;\n    children?: ReactNode;\n    className?: string;\n    media?: Media;\n    action?: Action;\n    dark?: boolean;\n    clickable?: Clickable;\n}\n\nexport const Card = ({ title, children, className, media, action, dark, clickable }: Props) => {\n    const componentClassName = \"jkl-card\".concat(\n        className ? ` ${className}` : \"\",\n        dark ? \" jkl-card--dark\" : \"\",\n        clickable ? \" jkl-card--clickable\" : \"\",\n    );\n\n    let Button = PrimaryButton;\n    if (action) {\n        switch (action.type) {\n            case \"secondary\":\n                Button = SecondaryButton;\n                break;\n            case \"tertiary\":\n                Button = TertiaryButton;\n                break;\n            default:\n                break;\n        }\n    }\n\n    return (\n        <div data-testid=\"jkl-card\" className={componentClassName}>\n            {media && <img className=\"jkl-card__media\" src={media.src} alt={media.alt}></img>}\n            {title && (\n                <div data-testid=\"jkl-card__title\" className=\"jkl-card__title jkl-h3\">\n                    {clickable ? (\n                        <a className=\"jkl-card__link\" href={clickable.href} onClick={clickable.onClick}>\n                            {title}\n                        </a>\n                    ) : (\n                        title\n                    )}\n                </div>\n            )}\n            <div className=\"jkl-card__children\">{children}</div>\n            {action && (\n                <div className=\"jkl-card__action\">\n                    <Button onClick={action.onClick}>{action.name}</Button>\n                </div>\n            )}\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Card } from \"../src\";\nimport car from \"./img/car.jpg\";\nimport grass from \"./img/grass.jpg\";\nimport \"@fremtind/jkl-core/core.min.css\";\nimport \"@fremtind/jkl-card/card.min.css\";\nimport \"@fremtind/jkl-button/button.min.css\";\n\nfunction handleClick() {\n    console.log(\"This is working\");\n}\n\nconst CardDemo = () => (\n    <section className=\"jkl-spacing--top-3 jkl-spacing--bottom-3\">\n        <Card className=\"test-class\">\n            <p className=\"jkl-body\">Empty card</p>\n        </Card>\n\n        <br></br>\n\n        <Card title=\"Basic Card\" clickable={{ href: \"https://fremtind.github.io/jokul/\" }} className=\"test-class\">\n            <h2 className=\"jkl-h4\">Clickable</h2>\n            <p className=\"jkl-body\">\n                Først ser vi om vi kan behandle saken din automatisk. Da får du svar samme dag. Hvis den ikke kan\n                behandles automatisk, vurderer vi saken og kontakter deg innen 8 arbeidsdager.\n            </p>\n        </Card>\n\n        <br></br>\n\n        <Card\n            title=\"Kjøp bilforsikring\"\n            media={{\n                src: car,\n                alt: \"Driving\",\n            }}\n        ></Card>\n        <br></br>\n\n        <Card\n            title=\"Meld skade av mobil eller nettbrett\"\n            action={{ type: \"primary\", name: \"Logg inn og meld skade\", onClick: handleClick }}\n            media={{ src: grass, alt: \"Grass\" }}\n        >\n            <h2>Slik behandler vi saken din</h2>\n            <ul className=\"jkl-body list\">\n                <li>Først ser vi om vi kan behandle saken din automatisk. Da får du svar samme dag.</li>\n                <li>\n                    Hvis den ikke kan behandles automatisk, vurderer vi saken og kontakter deg innen 8 arbeidsdager.\n                </li>\n                <li>Hvis vi dekker skaden, reparerer vi telefonen eller nettbrettet.</li>\n            </ul>\n        </Card>\n        <br></br>\n\n        <Card title=\"Card darkmode\" dark>\n            <p className=\"jkl-body\">\n                Først ser vi om vi kan behandle saken din automatisk. Da får du svar samme dag. Hvis den ikke kan\n                behandles automatisk, vurderer vi saken og kontakter deg innen 8 arbeidsdager.\n            </p>\n        </Card>\n        <br></br>\n\n        <Card\n            title=\"Meld skade av mobil eller nettbrett\"\n            action={{ type: \"secondary\", name: \"Logg inn og meld skade\", onClick: handleClick }}\n            dark\n            media={{ src: grass, alt: \"Grass\" }}\n        >\n            <h2>Slik behandler vi saken din</h2>\n            <ul className=\"jkl-body list\">\n                <li>Først ser vi om vi kan behandle saken din automatisk. Da får du svar samme dag.</li>\n                <li>\n                    Hvis den ikke kan behandles automatisk, vurderer vi saken og kontakter deg innen 8 arbeidsdager.\n                </li>\n                <li>Hvis vi dekker skaden, reparerer vi telefonen eller nettbrettet.</li>\n            </ul>\n        </Card>\n    </section>\n);\n\nexport default CardDemo;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/ComponentLayout.tsx\";\nimport Example from \"./Example\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Example mdxType=\"Example\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}