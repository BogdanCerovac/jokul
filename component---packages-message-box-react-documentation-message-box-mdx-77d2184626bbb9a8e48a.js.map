{"version":3,"sources":["webpack:///../packages/message-box-react/src/MessageBox.tsx","webpack:///../packages/message-box-react/documentation/Example.tsx","webpack:///../packages/message-box-react/documentation/MessageBox.mdx"],"names":["messageFactory","messageType","title","fullWidth","className","children","componentClassName","classNames","InfoMessage","ErrorMessage","WarningMessage","SuccessMessage","Example","boolValues","choiceValues","C","Infomelding","Suksessmelding","Advarselsmelding","Feilmelding","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","knobs","boolProps","choiceProps","values","defaultValue","parentName","isMDXComponent"],"mappings":"2NAYA,SAASA,EAAeC,GACpB,OAAO,YAA2E,IAArDC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,UAA8C,IAAnCC,iBAAmC,MAAvB,GAAuB,EAAnBC,EAAmB,EAAnBA,SACrDC,EAAqBC,IAAW,kBAAmB,oBAAsBN,EAAaG,EAAW,CACnG,wBAAyBD,IAG7B,OACI,2BAAOC,UAAWE,GACd,yBAAKF,UAAU,6CAA6CF,GAC5D,yBAAKE,UAAU,qCAAqCC,KAM7D,IAAMG,EAAcR,EAAe,QAC7BS,EAAeT,EAAe,SAC9BU,EAAiBV,EAAe,WAChCW,EAAiBX,EAAe,WC1BtC,SAASY,EAAT,GAAsE,IAAnDC,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,aAS5BC,EARQ,CACVC,YAAaR,EACbS,eAAgBN,EAChBO,iBAAkBR,EAClBS,YAAaV,GAIDK,EAAY,OAAaN,EACzC,OACI,kBAACO,EAAD,CAAGZ,UAAWU,GAAcA,EAAW,eAAgBX,MAAOY,GAAgBA,EAAY,MAA1F,wF,qFCRD,IAAMM,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAmBN,EAAc,oBACjCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,E,oIACF,mBACD,OAAO,YAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,YAACP,EAAD,CAASO,QAAQ,WAAjB,2OAIA,YAACN,EAAD,CAAkBO,UAAWtB,EAASuB,MAAO,CAC3CC,UAAW,CAAC,eACZC,YAAa,CAAC,CACZf,KAAM,OACNgB,OAAQ,CAAC,cAAe,iBAAkB,mBAAoB,eAC9DC,aAAc,KAEfN,QAAQ,qBACX,uCACA,yFACA,qBAAG,sBAAQO,WAAW,KAAnB,QAAH,kCACA,qBAAG,sBAAQA,WAAW,KAAnB,QAAH,gGACA,qBAAG,sBAAQA,WAAW,KAAnB,QAAH,kHACA,qBAAG,sBAAQA,WAAW,KAAnB,UAAH,4CACA,yCACA,mPAKJT,EAAWU,gBAAiB","file":"component---packages-message-box-react-documentation-message-box-mdx-77d2184626bbb9a8e48a.js","sourcesContent":["import React, { ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\ninterface Props {\n    title: string;\n    children: ReactNode;\n    fullWidth?: boolean;\n    className?: string;\n}\n\ntype messageTypes = \"info\" | \"error\" | \"success\" | \"warning\";\n\nfunction messageFactory(messageType: messageTypes) {\n    return function messageBox({ title, fullWidth, className = \"\", children }: Props) {\n        const componentClassName = classNames(\"jkl-message-box\", \"jkl-message-box--\" + messageType, className, {\n            \"jkl-message-box--full\": fullWidth,\n        });\n\n        return (\n            <aside className={componentClassName}>\n                <div className=\"jkl-message-box__title jkl-heading-medium\">{title}</div>\n                <div className=\"jkl-message-box__message jkl-body\">{children}</div>\n            </aside>\n        );\n    };\n}\n\nexport const InfoMessage = messageFactory(\"info\");\nexport const ErrorMessage = messageFactory(\"error\");\nexport const WarningMessage = messageFactory(\"warning\");\nexport const SuccessMessage = messageFactory(\"success\");\n","import React from \"react\";\nimport { ExampleComponentProps } from \"@fremtind/jkl-portal-components\";\nimport { ErrorMessage, InfoMessage, SuccessMessage, WarningMessage } from \"../src\";\n\nexport function Example({ boolValues, choiceValues }: ExampleComponentProps) {\n    const types = {\n        Infomelding: InfoMessage,\n        Suksessmelding: SuccessMessage,\n        Advarselsmelding: WarningMessage,\n        Feilmelding: ErrorMessage,\n    };\n\n    //@ts-ignore\n    const C = types[choiceValues[\"Type\"]] || InfoMessage;\n    return (\n        <C fullWidth={boolValues && boolValues[\"Full bredde\"]} title={choiceValues && choiceValues[\"Type\"]}>\n            Cupidatat Lorem incididunt incididunt in non mollit cillum Lorem eiusmod sunt magna.\n        </C>\n    );\n}\n\nexport default Example;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport { Example } from \"./Example\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    En melding er en beskjed til brukeren. Det kan være et varsel om at noe er feil, informasjon om at noe mangler i et\n    skjema, eller en bekreftelse på at noe har blitt oppdatert. Meldingene består av en overskrift og en meldingstekst.\n    </Ingress>\n    <ComponentExample component={Example} knobs={{\n      boolProps: [\"Full bredde\"],\n      choiceProps: [{\n        name: \"Type\",\n        values: [\"Infomelding\", \"Suksessmelding\", \"Advarselsmelding\", \"Feilmelding\"],\n        defaultValue: 0\n      }]\n    }} mdxType=\"ComponentExample\" />\n    <h2>{`Meldingstyper`}</h2>\n    <p>{`Vi har fire ulike meldinger, med fargene blå, rød, gul og grønn.`}</p>\n    <p><strong parentName=\"p\">{`Blå:`}</strong>{` gir informasjon til brukeren.`}</p>\n    <p><strong parentName=\"p\">{`Gul:`}</strong>{` gir brukeren en advarsel, for eksempel at en funksjonalitet er i beta og derfor er ustabil.`}</p>\n    <p><strong parentName=\"p\">{`Rød:`}</strong>{` gir brukeren en feilmelding, for eksempel hvis det oppstår en systemfeil eller brukeren avbryter en handling.`}</p>\n    <p><strong parentName=\"p\">{`Grønn:`}</strong>{` forteller at en handling var vellykket.`}</p>\n    <h3>{`Tilgjengelighet`}</h3>\n    <p>{`Når vi bruker meldinger med farge, må vi alltid huske å ha en god og beskrivende overskrift, siden farge ikke er et godt nok kjennetegn for alle brukere. Skriv en presis meldingstekst, der du sier det viktigste først.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}