{"version":3,"sources":["webpack:///../packages/toggle-switch-react/src/ToggleSwitch.tsx","webpack:///../packages/toggle-switch-react/documentation/Example.tsx","webpack:///../packages/toggle-switch-react/documentation/ToggleSwitch.mdx"],"names":["ToggleSwitch","children","checked","onChange","className","disabled","inverted","helpLabel","componentClassName","concat","data-testid","type","Example","useState","gpsDummySwitch","setGpsDummySwitch","gpsIsOn","setGpsIsOn","switchIsOn","setSwitchIsOn","switch2IsOn","setSwitch2IsOn","glonassIsOn","setGlonassIsOn","glonassDummySwitch","setGlonassDummySwitch","style","margin","padding","backgroundColor","src","alt","color","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---packages-toggle-switch-react-documentation-toggle-switch-mdx-718d8c98f5cf4df9a7c6.js","sourcesContent":["import React, { ReactNode, ChangeEvent } from \"react\";\nimport { SupportLabel } from \"@fremtind/jkl-typography-react\";\n\ninterface Props {\n    children: ReactNode;\n    checked?: boolean;\n    className?: string;\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n    disabled?: boolean;\n    inverted?: boolean;\n    helpLabel?: string;\n}\n\nexport const ToggleSwitch = ({ children, checked, onChange, className, disabled, inverted, helpLabel }: Props) => {\n    const componentClassName = \"jkl-toggle-switch\".concat(\n        className ? ` ${className}` : \"\",\n        inverted ? \" jkl-toggle-switch--inverted\" : \"\",\n    );\n    return (\n        <>\n            <label data-testid=\"jkl-toggle-input--label\" className={componentClassName}>\n                <input\n                    className=\"jkl-toggle-switch__input\"\n                    data-testid=\"jkl-toggle-input\"\n                    type=\"checkbox\"\n                    checked={checked}\n                    onChange={onChange}\n                    disabled={disabled}\n                />\n                <span className=\"jkl-toggle-switch__slider\">\n                    <span className=\"jkl-toggle-switch__expanding-pill\"></span>\n                </span>\n                <span className=\"jkl-toggle-switch__label\">{children}</span>\n            </label>\n            <SupportLabel className=\"jkl-toggle-switch__helplabel\" helpLabel={helpLabel} />\n        </>\n    );\n};\n","import React, { useState } from \"react\";\nimport { ToggleSwitch } from \"../src\";\nimport \"@fremtind/jkl-core/core.min.css\";\nimport \"@fremtind/jkl-toggle-switch/toggle-switch.min.css\";\n\nconst Example = () => {\n    const [gpsDummySwitch, setGpsDummySwitch] = useState(true);\n    const [gpsIsOn, setGpsIsOn] = useState(false);\n    const [switchIsOn, setSwitchIsOn] = useState(false);\n    const [switch2IsOn, setSwitch2IsOn] = useState(true);\n    const [glonassIsOn, setGlonassIsOn] = useState(false);\n    const [glonassDummySwitch, setGlonassDummySwitch] = useState(true);\n    return (\n        <section className=\"jkl-spacing--top-3 jkl-spacing--bottom-3\">\n            <div style={{ margin: \"36px\", padding: \"36px\", backgroundColor: \"#fafafa\" }}>\n                <div style={{ margin: \"20px\" }}>\n                    <ToggleSwitch checked={gpsDummySwitch} onChange={() => setGpsDummySwitch(!gpsDummySwitch)}>\n                        GPS\n                    </ToggleSwitch>\n                </div>\n                <div style={{ margin: \"20px\" }}>\n                    <ToggleSwitch checked={switch2IsOn} onChange={() => setSwitch2IsOn(!switch2IsOn)} disabled>\n                        Disabled Switch (On)\n                    </ToggleSwitch>\n                </div>\n                <div style={{ margin: \"20px\" }}>\n                    <ToggleSwitch\n                        checked={switchIsOn}\n                        onChange={() => setSwitchIsOn(!switchIsOn)}\n                        disabled\n                        helpLabel=\"Reason switch is disabled\"\n                    >\n                        Disabled Switch (Off)\n                    </ToggleSwitch>\n                </div>\n                <div style={{ margin: \"20px\" }}>\n                    <ToggleSwitch checked={glonassIsOn} onChange={() => setGlonassIsOn(!glonassIsOn)}>\n                        Glonass\n                    </ToggleSwitch>\n                </div>\n\n                {glonassIsOn && (\n                    <img\n                        src=\"https://upload.wikimedia.org/wikipedia/en/thumb/8/81/Glonass_logo.png/220px-Glonass_logo.png\"\n                        alt=\"glonass\"\n                    />\n                )}\n            </div>\n            <div style={{ margin: \"36px\", padding: \"36px\", backgroundColor: \"#000000\", color: \"#ffffff\" }}>\n                <div style={{ margin: \"20px\" }}>\n                    <ToggleSwitch checked={gpsIsOn} onChange={() => setGpsIsOn(!gpsIsOn)} inverted>\n                        GPS\n                    </ToggleSwitch>\n                </div>\n                <div style={{ margin: \"20px\" }}>\n                    <ToggleSwitch\n                        checked={switch2IsOn}\n                        onChange={() => setSwitch2IsOn(!switch2IsOn)}\n                        disabled\n                        inverted\n                        helpLabel=\"Reason switch is disabled\"\n                    >\n                        Disabled Switch (On)\n                    </ToggleSwitch>\n                </div>\n                <div style={{ margin: \"20px\" }}>\n                    <ToggleSwitch checked={switchIsOn} onChange={() => setSwitchIsOn(!switchIsOn)} disabled inverted>\n                        Disabled Switch (Off)\n                    </ToggleSwitch>\n                </div>\n                <div style={{ margin: \"20px\" }}>\n                    <ToggleSwitch\n                        checked={glonassDummySwitch}\n                        onChange={() => setGlonassDummySwitch(!glonassDummySwitch)}\n                        inverted\n                    >\n                        Glonass\n                    </ToggleSwitch>\n                </div>\n\n                {gpsIsOn && (\n                    <img\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/NAVSTAR_GPS_logo.png/260px-NAVSTAR_GPS_logo.png\"\n                        alt=\"gps\"\n                    />\n                )}\n            </div>\n        </section>\n    );\n};\n\nexport default Example;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/ComponentLayout.tsx\";\nimport Example from \"./Example\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Example mdxType=\"Example\" />\n    <p>{`Med veksleknapper kan brukerne bytte mellom to statuser (av eller på) uten at de må bekrefte valget. Ledeteksten forteller hva brukeren slår av og på.`}</p>\n    <p>{`Veksleknapper passer til situasjoner der brukerne selv kan velge å ha en funksjon av eller på, for eksempel automatisk oppdatering eller automatisk lagring.`}</p>\n    <p>{`Ikke bruk veksleknapp hvis brukeren må bekrefte valget sitt.`}</p>\n    <h2>{`Eksempler på bruk`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Slå innstillinger av eller på i en applikasjon.`}</li>\n      <li parentName=\"ul\">{`Bytte mellom lys eller mørk modus i et grensesnitt.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}