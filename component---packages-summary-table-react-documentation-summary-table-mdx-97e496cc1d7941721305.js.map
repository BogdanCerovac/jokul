{"version":3,"sources":["webpack:///../packages/summary-table-react/src/SummaryTable.tsx","webpack:///../packages/summary-table-react/mocks/index.ts","webpack:///../packages/summary-table-react/documentation/Example.tsx","webpack:///../packages/summary-table-react/documentation/SummaryTable.mdx"],"names":["SummaryTable","columnDescriptions","items","className","footer","cn","map","category","index","scope","key","item","label","value","mockProps","Example","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","isMDXComponent"],"mappings":"mSAeaA,EAAgC,SAAC,GAAqD,IAAnDC,EAAmD,EAAnDA,mBAAoBC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAClF,OACI,2BAAOD,UAAWE,IAAG,oBAAqB,WAAYF,IAClD,2BAAOA,UAAU,eACb,4BACKF,EAAmBK,KAAI,SAACC,EAAUC,GAAX,OACpB,wBAAIC,MAAM,MAAMC,IAAQH,EAAL,IAAiBC,GAC/BD,QAMjB,+BACKL,EAAMI,KAAI,SAACK,EAAMH,GAAP,OACP,wBAAIE,IAAQC,EAAKC,MAAV,IAAmBJ,GACtB,wBAAIC,MAAM,OAAOE,EAAKC,OACtB,4BAAKD,EAAKE,YAKrBT,GACG,+BACI,4BACI,wBAAIK,MAAM,OAAOL,aAAjB,EAAiBA,EAAQQ,OACzB,4BAAKR,aAAL,EAAKA,EAAQS,WC9BxBC,EAAY,CACrBb,mBAVkC,CAAC,UAAW,SAW9CC,MATqB,CACrB,CAAEU,MAAO,mBAAiCC,MAAO,eACjD,CAAED,MAAO,kBAAmBC,MAAO,eAQnCT,OALsB,CAAEQ,MAAO,YAAaC,MAAO,eCKxCE,G,UARyC,WACpD,OACI,yBAAKZ,UAAU,yBACX,kBAAC,EAAiBW,MCCjBE,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,oBAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAmBN,EAAc,oBACjCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,cAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,cAACP,EAAD,CAASO,QAAQ,WAAjB,4JAIA,cAACN,EAAD,CAAkBO,UAAWf,EAASc,QAAQ,sBAKlDF,EAAWI,gBAAiB","file":"component---packages-summary-table-react-documentation-summary-table-mdx-97e496cc1d7941721305.js","sourcesContent":["import React from \"react\";\nimport cn from \"classnames\";\n\nexport interface Item {\n    label: string;\n    value: string;\n}\n\nexport interface Props {\n    columnDescriptions: [string, string];\n    items: Item[];\n    className?: string;\n    footer?: Item;\n}\n\nexport const SummaryTable: React.FC<Props> = ({ columnDescriptions, items, className, footer }) => {\n    return (\n        <table className={cn(\"jkl-summary-table\", \"jkl-body\", className)}>\n            <thead className=\"jkl-sr-only\">\n                <tr>\n                    {columnDescriptions.map((category, index) => (\n                        <th scope=\"col\" key={`${category}-${index}`}>\n                            {category}\n                        </th>\n                    ))}\n                </tr>\n            </thead>\n\n            <tbody>\n                {items.map((item, index) => (\n                    <tr key={`${item.label}-${index}`}>\n                        <th scope=\"row\">{item.label}</th>\n                        <td>{item.value}</td>\n                    </tr>\n                ))}\n            </tbody>\n\n            {footer && (\n                <tfoot>\n                    <tr>\n                        <th scope=\"row\">{footer?.label}</th>\n                        <td>{footer?.value}</td>\n                    </tr>\n                </tfoot>\n            )}\n        </table>\n    );\n};\n","const SOFT_HYPHEN = \"\\u00AD\";\n\nexport const mockColumnDescriptions = [\"Product\", \"Price\"] as [string, string];\n\nexport const mockItems = [\n    { label: `Barne${SOFT_HYPHEN}forsikring`, value: `200 ${SOFT_HYPHEN}kr/mnd` },\n    { label: \"Innboforsikring\", value: \"100 kr/mnd\" },\n];\n\nexport const mockFooter = { label: \"Total sum\", value: \"300 kr/mnd\" };\n\nexport const mockProps = {\n    columnDescriptions: mockColumnDescriptions,\n    items: mockItems,\n    footer: mockFooter,\n};\n","import React from \"react\";\nimport { ExampleComponentProps } from \"@fremtind/jkl-portal-components\";\nimport { SummaryTable } from \"../src\";\nimport { mockProps } from \"../mocks\";\nimport \"./Example.scss\";\n\nexport const Example: React.FC<ExampleComponentProps> = () => {\n    return (\n        <div className=\"summary-table-example\">\n            <SummaryTable {...mockProps} />\n        </div>\n    );\n};\n\nexport default Example;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport Example from \"./Example\";\nimport { SummaryTable } from \"../src\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Summary table brukes for å oppsumere et sett med elementer. \n    Dette kan for eksempel være å vise produkter i handlekurven med informasjon om navn og pris. \n    </Ingress>\n    <ComponentExample component={Example} mdxType=\"ComponentExample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}