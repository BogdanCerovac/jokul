{"version":3,"sources":["webpack:///../packages/loader-react/src/Loader.tsx","webpack:///../packages/loader-react/documentation/Example.tsx","webpack:///../packages/loader-react/documentation/Loader.mdx"],"names":["Loader","textDescription","negative","inline","className","componentClassName","concat","data-testid","title","aria-label","role","aria-busy","Example","style","marginTop","border","borderRadius","height","width","display","justifyContent","alignItems","backgroundColor","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sMAOaA,EAAS,SAAC,GAA4E,IAA1EC,EAA0E,EAA1EA,gBAA0E,IAAzDC,gBAAyD,aAAvCC,cAAuC,SAAvBC,EAAuB,EAAvBA,UAClEC,EAAqB,aACtBC,OAAOJ,EAAW,wBAA0B,IAC5CI,OAAOH,EAAS,sBAAwB,IACxCG,OAAOF,EAAY,IAAIA,EAAc,IAC1C,OACI,0BACIA,UAAWC,EACXE,cAAY,aACZC,MAAOP,EACPQ,aAAYR,EACZS,KAAK,QACLC,YAAU,QAEV,0BAAMP,UAAU,0CAChB,0BAAMA,UAAU,4CAChB,0BAAMA,UAAU,6CCgBbQ,G,UAnCC,kBACZ,6BAASR,UAAU,sBACf,kBAAC,EAAD,CAAQH,gBAAgB,gCACxB,yBACIY,MAAO,CACHC,UAAW,OACXC,OAAQ,kBACRC,aAAc,OACdC,OAAQ,OACRC,MAAO,QACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGhB,kBAAC,EAAD,CAAQpB,gBAAgB,UAAUE,QAAM,KAE5C,yBACIU,MAAO,CACHC,UAAW,OACXC,OAAQ,kBACRC,aAAc,OACdC,OAAQ,OACRC,MAAO,QACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,UAGrB,kBAAC,EAAD,CAAQrB,gBAAgB,UAAUE,QAAM,EAACD,UAAQ,Q,qFC3BtD,IAAMqB,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,EAAD,CAASA,QAAQ,YACjB,iLACA,0KACA,8BACA,sBACE,kBAAIC,WAAW,MAAf,4CACA,kBAAIA,WAAW,MAAf,wEAMNJ,EAAWK,gBAAiB","file":"component---packages-loader-react-documentation-loader-mdx-34c320aa5326ed0ff602.js","sourcesContent":["import React from \"react\";\ninterface Props {\n    textDescription: string;\n    negative?: boolean;\n    inline?: boolean;\n    className?: string;\n}\nexport const Loader = ({ textDescription, negative = false, inline = false, className }: Props) => {\n    const componentClassName = \"jkl-loader\"\n        .concat(negative ? \" jkl-loader--negative\" : \"\")\n        .concat(inline ? \" jkl-loader--inline\" : \"\")\n        .concat(className ? ` ${className}` : \"\");\n    return (\n        <span\n            className={componentClassName}\n            data-testid=\"jkl-loader\"\n            title={textDescription}\n            aria-label={textDescription}\n            role=\"alert\"\n            aria-busy=\"true\"\n        >\n            <span className=\"jkl-loader__dot jkl-loader__dot--left\" />\n            <span className=\"jkl-loader__dot jkl-loader__dot--middle\" />\n            <span className=\"jkl-loader__dot jkl-loader__dot--right\" />\n        </span>\n    );\n};\n","import React from \"react\";\nimport { Loader } from \"../src\";\nimport \"@fremtind/jkl-loader/loader.min.css\";\n\nconst Example = () => (\n    <section className=\"jkl-spacing--all-3\">\n        <Loader textDescription=\"Den som venter på noe godt…\" />\n        <div\n            style={{\n                marginTop: \"20px\",\n                border: \"1px solid black\",\n                borderRadius: \"20px\",\n                height: \"40px\",\n                width: \"200px\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n            }}\n        >\n            <Loader textDescription=\"Laster…\" inline />\n        </div>\n        <div\n            style={{\n                marginTop: \"20px\",\n                border: \"1px solid black\",\n                borderRadius: \"20px\",\n                height: \"40px\",\n                width: \"200px\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                backgroundColor: \"black\",\n            }}\n        >\n            <Loader textDescription=\"Laster…\" inline negative />\n        </div>\n    </section>\n);\n\nexport default Example;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/ComponentLayout.tsx\";\nimport Example from \"./Example\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Example mdxType=\"Example\" />\n    <p>{`En lasteindikator viser brukeren at systemet jobber. Vi bruker lasteindikatoren når vi har handlinger eller prosesser som tar lengre tid enn ett sekund.`}</p>\n    <p>{`Plasser lasteindikatoren sammen med handlingen som utløser den. Den kan ha ulik posisjon og størrelse, avhengig av konteksten den skal fungere i.`}</p>\n    <h3>{`Bruk`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`På en knapp som brukeren har klikket på.`}</li>\n      <li parentName=\"ul\">{`På et kort eller i felt der noe blir beregnet før innholdet vises.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}